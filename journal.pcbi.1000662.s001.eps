%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Roman
%%Title: FigureS1.pdf
%%Creator: Adobe Acrobat 9.1.2
%%For: ssuthram
%%CreationDate: 11/4/2009, 9:55:52 AM
%%BoundingBox: 0 0 612 792
%%HiResBoundingBox: 0 0 612 792
%%CropBox: 0 0 612 792
%%LanguageLevel: 2
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%Pages: (atend)
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: (atend)
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$None SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
[/NamespacePush pdfmark_5
[/_objdef {Doc_Metadata} /type /stream /OBJ pdfmark_5
[{Doc_Metadata} 27580 (% &end XMP packet& %) ReadBypdfmark_5_string
<?xpacket begin='﻿' id='W5M0MpCehiHzreSzNTczkc9d'?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.1-c043 52.372728, 2009/01/18-15:08:04        ">
 <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <rdf:Description rdf:about=""
    xmlns:dc="http://purl.org/dc/elements/1.1/"
    xmlns:xmp="http://ns.adobe.com/xap/1.0/"
    xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
    xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
    xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
    xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
    xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
    xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
    xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
    xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
   dc:format="application/pdf"
   xmp:CreatorTool="Adobe Illustrator CS3"
   xmp:CreateDate="2009-10-22T11:14:17-07:00"
   xmp:ModifyDate="2009-10-22T13:52:07-07:00"
   xmp:MetadataDate="2009-10-22T13:52:07-07:00"
   xmpMM:DocumentID="uuid:CAC31DCD34BFDE11BB5BEB89462234A2"
   xmpMM:InstanceID="uuid:87adbb10-b6cc-4560-a7ef-40d7606f66d5"
   illustrator:StartupProfile="Print"
   xmpTPg:NPages="1"
   xmpTPg:HasVisibleTransparency="False"
   xmpTPg:HasVisibleOverprint="False">
   <dc:title>
    <rdf:Alt>
     <rdf:li xml:lang="x-default">Print</rdf:li>
    </rdf:Alt>
   </dc:title>
   <xmp:Thumbnails>
    <rdf:Alt>
     <rdf:li
      xmpGImg:width="256"
      xmpGImg:height="76"
      xmpGImg:format="JPEG"
      xmpGImg:image="/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgATAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWK/mJ5Kl83aTaWEdzFa/V7oXLNPC06MPQlh&#xA;+wskJ5L63NDy2ZRiqQL+V3m2K4DW3nS8t7YXBnNuiuAwa7luGU0lC7rKAxp8VN9tsKoHUfJXmvTL&#xA;C3XUvzDu4Humi063mCSgvdXN6skYUeq7ciKxDeoXqeNcCpjqP5a65e29raXurNqSC51GR7yd5Y5o&#xA;I722aKERUZi3psegdBQkdOpVMr3yV5kl1LQr621uGA6DBPBFD9Wl4XAmESgT8bhSVX0FagIqfbbA&#xA;qS6j+VOszea18xjU47mWTULa6ltGR4YokimsXkeGrTH1DHYsn+UGAqKblXp2BXYq7FWPf42s38zy&#xA;+X7bTtQupraRYb2+htybOCR4UnCyTsVFfSlRvhr1xVIPN2v6zZ61JBbXTxRBVIQUpv8AMZj5JEF2&#xA;2lwQlCyGKeYvNvmUaDqDJqM8brbyMskbem6kKSCrJRh9Bymc5VzdhpdLi8WNxHN49/j3zz/1MWp/&#xA;9Jtx/wA15T4ku8vU/wAn6f8A1OH+lH6mUaZ5x83P5Ytpn1zUGma9u0aQ3UxYqsVsVUnlWgLGg9zl&#xA;OfLMVRPzY4dBpzlkDjhXDH+Ed8vJF6P5t81yavYxya1fuj3ESujXMxBBcAggtlMM07HqPzbNZ2fp&#xA;xhmRjhfCf4R3e5hOq+fvPSaneInmPVFRZ5Aqi9uAAA5AAAfNzZfBMuoyCZ9UuZ6l6/8A842+Ydf1&#xA;efzANW1O71AQramEXU8k/DkZuXH1GalaCtMnAuz7KyylxcRJ5c/i9wyx27sVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVUL/ULHT7OW9v7iO0s4F5TXMzrHGi9Ks7EAD54q8ytr38qjNfXGpfmF9dnvLue5&#xA;Qx+Yrm0jhilkLR28cNveJGEiWijbf26YqyHT/LPkfUrOO907WNSvbOWvpXNv5g1eWJuLFW4ul4VN&#xA;GUg++YubW4ccuGcgCyECeQbu/wAtvJF/6KXkmpXYgmS4t1n1jVpfTnjNY5U53R4uh3VhuO2Qj2lp&#xA;5EATFlPhy7l/+EPKP/Vx1f8A7jus/wDZXmN/Lui/1WPzZeBPuXDyZ5UK8xqGr8a0r+ndZ6/9JeT/&#xA;AJZ0nDxeJHhur80eDLlSv5b0aDQ77VHTWrm90++eF7OyvZ7i7a1McfCQJPcyzyMJW+KlQBkP5d0X&#xA;+qx+afBn3MmzbNTsVSsXU7eZhbJLIbVbNnkiEamES+qoBaavIPxrRKUpviqXeU/+O950/wC2zD/3&#xA;RtOxVgH5j+bPKVh5pntdQ1eK0ukROcDw3TkAjbeKGRPxzGyDd3GkkRjGx+z9bGG13yp5ghn0bTNd&#xA;tpL68hmSFGhvUWojZiSzW9BRVJyjKRGJJOzlw1YwkTkDwxPl+tjH/KqdS/6vGm/fef8AZNmv/O4f&#xA;532H9Tsf9Fmk7p/IfrRV7pGneXdBsbLVdcsopZLq6mjZUvXVlaO3Wnw2xNQU3qMsERmjcCKHv/U3&#xA;6T2gwTnKcYzIqI5Dpxf0vNQ0S+8sHWrAJ5hs3c3MPFBDfgsfUFAOVqBv7nDHSyBBsfj4ORqe28c8&#xA;UoiM7MSP4e7+sx/VvLNgdUvCfMWnKTPJVSmoVB5nY0tCMz/Fj3vmkvY/XzPEIxo7/UHr/wDzjbpd&#xA;vYzeYDDqVtqHqLa8hbLcrwoZvtfWIYOtduNcuxSB5M8fYuo0P98AOPlRvl/a9wy5tdirsVdirsVd&#xA;irsVdiqRecfOmg+UNMi1TXJXhsZbhLYzIhk4NIGIZlWrcQFNaAn2xVF6D5m8v+YLMXmiahBqFtQF&#xA;ngcMV5bgOv2kPswBxVMsVdirsVdirB/zw/8AJTeZv+YM/wDE1xV8HYsn2T/zj/8A+Si0H/o7/wCo&#xA;2bOI7e/xj4By8P0vRYP76P8A1h+vNdo/76H9aP3tk+RSXONctGQ/7w/89T/xEZspf4kP+G/70NZ+&#xA;v4Lc1bNDeetQ8x6TrHly/wBP1P09Nu9StNMvtJeCJ0lW5dg0omI9VGUdAGp7Z73Hk6VLtQ1nz235&#xA;nJo1tJcW+gO0cgu/qLvbBVhWR4PW9FlZ5GV/i9ZQtQN2FDJDXkq7sf8AlZ3mvTrWLTofqaxhks7I&#xA;W9wAwRgZ5goLVLH7RPKlV2rirIfKf/He86f9tmH/ALo2nYFfMn/OQn/kz9Q/4xw/8RzFyc3daT+7&#xA;DH/yx/5TWx/4x3XT/mFlzD1n91L3MO0P7mX46pnpN1+ZehWsd5q0M996OnrDFEzPMDM8yvzmVWZm&#xA;kUMUJ/lXrvmHkx6bKeGJA9Xu6dPJ5wiB5L/zK1F9R0Py5fSQNbSTi6Z7dwysh/cgqwYKQR8sv0GM&#xA;QjKIN1L9Adz2SKjL3sS8s/8AKR6V/wAxlv8A8nVzOdrLkU61r/jsX/8AzES/8TOYoe0wfRH3B7L/&#xA;AM4xf33mP/Vs/wBc2Zel5l5j2p5Y/wDO/Q94zMeQdirsVdirsVdirxP/AKFK/Lj/AKuWsf8AI61/&#xA;7JsVd/0KV+XH/Vy1j/kda/8AZNiqR+cP+cT9Mj0yL/CN5dzam9wiSHUp4fq6QENzc+lAj1Bp0r8s&#xA;VZN+Wn/OOWkeUr631i+1a6vdXhoyrau9pbqxHxKfTb1JF3p8TAMOq0NMVexYq7FXYq7FUt8yeX9O&#xA;8w6HeaLqIc2N9H6U4jbg3GoOzdumKvM/+hWfyo/3ze/9JJ/5pxW2IecvzQtfyf1KHyLoeiLeaZYw&#xA;LNDNcXLiSty7ysDRD+0xzXarsvDmnxzu/e2wyEDZC+VP+cnb/WPNGj6Q/l6CFdRvra0aYXDsUE8y&#xA;xlgCgrTlXKYdi6eBEhdjfn3JOWRexQaz5cuNRn0y3mil1C1UNc2qTBpIwafbUbjqOviPEZ5rM4ow&#xA;GQ6eQhLkeM0fsdhZuuJN4Vtja7RELz6cj1oPbNlpvy2XS/3ZEfE5cR58I8muXEJc+jvTtf8AfR/4&#xA;I5D8rpP9TP8ApyvFLvSj8z/7nyt/4Eemf8nDnqI5OuX6/D5ok876C8sdgfLMV1WGszLei6+p3A9R&#xA;VZUQijspQMxI+Lb4sKGLeTPLHmOx/MPzdd2ul2uhNdoBZ3Ygubi0Y+qrcnUtapIXWppC68TXl2wq&#xA;yn8u01lL/wA4JrM1vcaiNbX1ZrOJ4IWX9FWHplYpJJ2U+nx5AyN8VabYFecfmraaM/nK5a50m0up&#xA;ikdZplkLnbvxdR+GafV6mUMhAZjUzhsDsxnTn0nTbhr6y0axhuoIZ2ikCSEg+i4PWQ9RtlENQch4&#xA;ZAUXG1mtyeFI3eyj/wArI1j/AJYrH/kS3/NeWflcX80PJ/yvl7o/L9qtqOtW+saHY3WpaTYXEq3N&#xA;1EnKOQBVWO3bYLIOpbfGUvCAEAAH0j2IwR1uHJLJsYyr07dPihtEGifpqw46Dp6N9Zho6pLUH1Bu&#xA;KyHpkY6mVvY6jsXDHHIgy2ievl7km1bzRGmq3q/oXTG4zyjk0Lkmjnc/vMubMOlJgPXPkOv7HrP/&#xA;ADjtqy38uvAWNrZ+mtr/ALyoycuRl+1VmrSm2Zel5l532jw8Ah6pS+rn8HtGZjyyGv8AVNN06NJN&#xA;Qu4bOOV/TieeRIlZ+JbipcircUJp4A4qlcHnvyXNLLFHrlj6kLxRurXEa1a4jWWHhyI5iVJFKMtQ&#xA;3bviqvH5u8py20l1FrVg9tF6XqzrdQmNfrH9zyYNQep+x/N2xV2oea/LunanFpd7fRwahN6Ho2zc&#xA;ub/WpTBFwAHxcpFINPs9TQYqgNR/MjyPp2kR6vd6tEthJJDCJEWSVlkuY/VhV441eRC8fxfEo23x&#xA;VfffmL5CsofWuPMFgErxHC4jkJaklFCoWYkmFwopuw4jfbFW7j8wfJsEcsg1OO4SF4Y3Nosl3V7h&#xA;5I4kX6usvJi0DghakU3piqIXzp5OdPUXXdOaP958Yu4CP3Kh5d+f7CkM3gNziqwefPI5vPqQ8xaY&#xA;bzmIvqwvLf1ebGipw58uRPQUxVVs/OHlK+aVLLW7C6aGJ7iZYbqGQpDGQJJWCsaIhI5MdhiqlN56&#xA;8kQwNPN5h0yOBGRHle8t1QNKhkjUsXpV0Uso7gVxVZL5/wDJMQkZ9cshHFEZ2lEyGMoDKDxcHi7D&#xA;6vJVVJYcTUYq3F598kS273K69YLBGC8kklxFGAgl9DmebL8DS/Cr/ZY9Ca4qnkckcsayRsHjcBkd&#xA;SCrKRUEEdQcVXYq+TP8AnJLyb5v1b8zZrvStD1C/tDaW6i4tbWeaPkoNRzjVlqMUhhn5e/l/59tf&#xA;P3lq5ufLeqwW0Gq2Mk88llcIiIlyjM7syAKqgVJOCXJL6E138ttYdWOg6ncWzS6mdUmhmIEYZxL6&#xA;qRNFGsi+oZq8mZitBTPM9Jkzg/vtPM1j4BUJXW1XexquW12XPlw9Jde9mPlHR9S03y8tpesJrv6x&#xA;cTTSRhuJaeZ5iQCBT7fToOgzMGDJPETHHkiOMUDE3QhGP6ObHiAPMfgpt6E3++2+45T+TzfzJf6U&#xA;p4x3sd/ODUbHTdL8u39/OlrZW3mDTZLi4lYLHGiyGrMx2AHjnow5OAgbywguPzIs9WsvOkSNqkVt&#xA;dabo9J5o3tljId4DHdJbstwit8TRMOhXfclCB/LGHzNL+ZXmzU9WtbmC2uQFtpJrOa0jcI4UcHl5&#xA;eoOK7Vdqfs8VNMKs08p/8d7zp/22Yf8AujadgV51+Zei6jdebLiaCNWjKIATJGvQeDMDmj1uKRyE&#xA;hrkN2Ljy1rJjnAhWrQTKP3sXUxMB+3lODFITDi6vGZYpAc6Y1/g3zF/yzJ/yPg/5rzYU8n/J+bu+&#xA;0frTyHynr3+HbSL6unNby6Yj1oejRW4G/On7JzG1ECafT/YPU49JgyRzEQMpgjr08rVNG8p69Hq9&#xA;jI9ugVLiJmPrQnYOCdg+UQxysPa6ntrSSxyAmLMT393uY3q35febpNUvJEsAUeeRlPrQCoLkjq+Z&#xA;bi4u3NGIAHJG6erf849eXNZ0aXXTqVv6AnW19L443rxMtfsM1PtDrmXpeZdF29r8GoEPCkJVd/Y9&#xA;lzMecY75607yfqOjx2nmq2+uafJcIIbcJNI7TkMF4Jbgyk8S1aDYVJ2xV5xr+r/849SIqT2j6lfa&#xA;cIryz0iCK9FyxdLeCD0YXMKtzjWDgCaFfiG1Tiq/Qte/IqDRhrNnZ3Wl22oTRPd3LLexSQS2UU/o&#xA;mSdHPB/Tif4I5CzBviBDHCqa2Grfldruuadfm8vdf1hmiFhqTwXEAEcRmuoU5QQ2kDxCW0kfcMOa&#xA;/F9leIVQ0jzl+SlktjJYmaG+mFnfW+nGO9e6Q+kunQH0Tz3WKbjxWvIfGOX2sVSrT9V/5xlsrO40&#xA;2zu44YL3/SblPU1Lkxit5VYs7HmrehJIrLUE8qEEkYqmFjB+RWn6HqtrpVvcyaferZzajBa/pR3u&#xA;km9JIOJJ5Til/HzRCftjkK0xVJNMtvyBn0OBb5JdS1mz0Wa+nhm+uwXz2y2g9YBHkVULQJREEnHj&#xA;9g8d8VVYvMX5HSW1raadoV7eW5ndbMWjOXeawjW6HpKblJ5GU6mygKpNeVaKoOFU0tr78g/KWkRR&#xA;zKNHt9Xgmf6vLJdXDNHqI9KcGSJ7lKt9R4vxf4Co+yWFQqLa5/JdNREU8V08jyW96l3OmqSQvJG8&#xA;4ikEsnJSvJJpGYng3xOS25wqkz2X/OO6abC9rpU1xZ2tzBEYoo9RT0zNHcTpPIkpi9SJYRNIX+L4&#xA;elfhGKsw8saD+V2rXd1LotvLPPaPG920rX6hZpJVuxy+sFVM3qRK0n7YoFegoMCs2sLG10+xtrC0&#xA;T0rS0iSC3iqW4xxqERasSTRR3OKq+KuxVZcf3En+q36sVfmziyfTn/OLv/KDar/21D/1Dx5xHtt/&#xA;dY/636HL0nMvYs86c5C/mgAYPK1d/wDnY9L/AOThz3uPJ0qT+ZYbI/nn5YlcKbkWUgj/AH9G2W5A&#xA;JhCMdg7UbkAasDkkPTcCsa8p/wDHe86f9tmH/ujadiryz81f+Uxuf9SP9Wc/r/70tU+bEv8AdVx/&#xA;zDz/APJlsp0/1hw9b/cz/qliebN4llOlf8oxbf8AMbdf8mrbMPWdPj+h6nsX+5P9Y/cEdo3/AB17&#xA;H/mIi/4mMxcf1D3u3a1L/jo3X/GaT/iRy2XMvG5vrl7y9H/JD+81j5W/65M2PZ38Xwd12J/H8P0v&#xA;VM2bv2L/AJk+YND0Dync6lrWnJqlpEQUspFiMbzKC8fJp6Rp8SbMd60CgsQCqwK8/M38o9Anm+u+&#xA;WY7W8t7hreR7SytpAOFxMEcyD0yBytPU+IChoRWlcKt6B+ZX5M65rWn6NZ+V6XGpUtoWfTbUxqHV&#xA;iySFGcqoLurbdSf2anFVQfm1+V+maDo2r3Hl76rLcvNHa2dtbWrywTW6VYAcomQN9dIRiq1EnLZH&#xA;5EKvtfPH5YLe3OnweUobePTLS6F6jW+nxvELaaDnbrGrken6tzVpGZYaqx5GjFSqVQfm3+Uz2N3d&#xA;6r5QjhMM91EscNrZ3jOiyRW7uWj+H976wrxLIQPtttiqLtvzu/J+5aC0h0Gd47xktVVLC2dSHeON&#xA;VZEdm4cYYm+zTiq03FAqz7QLHyfqovnXRNPhuY3udMuYhDA0j2sM0lmof4FPpSrbkBD8NBx3pgVN&#xA;G8p+VmieFtGsWik5F4zbQlW58eVRxoeXppX/AFR4DFXTeUvKs8MME2jWMsFtH6NvE9tCyRxclf00&#xA;UrRV5orUG1QDiq0+T/KRlEp0SwMqyeusn1WHkJS3P1AeNeXP4uXWu+Kqi+VvLKhwukWQEiqkgFvE&#xA;OSpE0KBvh3CxOyDwUkdDiqKsNL0zTojDp9pDZxHjWO3jSJfgUIuyAD4UUKPYUxVE4q7FXYq0680Z&#xA;OnIEV+eKvn3/AKE88u/9TFef8iYv64ptGXMXlr8hPLaWkz3usw6veNKrosSMjCILQ1IFKJmo7X7H&#xA;hroxjKRjwm9m3FlMCk3/AENH5L/6s+pffB/zVmg/0E4f9Ul8g3fmz3PWvzMYNbeVWHRvMWln75Dn&#xA;agOGk/mDVLRvzx8u2K3dZI7WQPahLdgJDHMw+N29VG9NqkBfskU6mslenYFSGTyL5Vk8yHzKbKmt&#xA;FkdrpJZk5NHGIlLxq4jYhFC7r0xVLfMv5b6FrF9Nqt5cXaScKukHFtkH7Kem7k+wzDzaGGSXESWJ&#xA;jaTaZ+VHk3U9Lt9QsdQvJ7HUbYS20waMB4bmKquA0QIqj1FRkIdnwibBLXlwCcTE8iof9C9+UP8A&#xA;lu1D/g4P+qWX/lw6r+QcPfL7P1Jhb/kr5ZgsEskvL0xRyyTBi8XLlKqKR/d0pSIZXk0UZ1ZLsNLo&#xA;oYY8MSau91W1/J3y5b3MVwl3eF4XWRQWioSpqK0j9srj2dAG7LkcAdP+TvlyaeSZru8DSMXYB4qV&#xA;Y12/d5I6CB6l1kux8RJNy3936ky8ieXPL2lw3lzot3NdxTzSWszTU+GWxmkt5VFEjPwyq6n5bbZf&#xA;h08cd11crS6KGC+EnfvZTl7mOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kvnn/nMH&#xA;/jiaB/zEyf8AJs4pD5cxS++fNXl3zHrmo+XVtpbODQ9Nu7bUr1pBK128tsxZUiC0jCt3LGv8Viuk&#xA;8lau3ntfMq6462aup/RnpyH90LYwmAP6/pem0h9b+5ry74qy7FXYq7FXzxDqf5PK149/5OjgtrUy&#xA;EmxuZJwFWQxBPTHoJHICKtFX4FKmprhpbR9zefkBbsyt5cuWdZr23CASBi9ggkkorTqaMPsE+G9M&#xA;FLaGttI/JXXvNOg/o/S7y2iS6uLKS1ZHENzJJACjSObiqrGfslQan23xpbTHQ9O/Ka/gv5L7yxb6&#xA;YbW3guLQTXzkXRuTcCOOKrIef+ikUpWtaAgAs0tqN4v5KxeU7DzBbeXI7qS8fhLpiXUn1mFU5eq7&#xA;IsjsRHx3+EGhGwO2NLb0r8sdR0u88sCLStLj0iwspnghson9RQHVZy9eKfE5mq1f2q7nrirLMVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVUbmys7oAXMEc4XdRIivT5cgcVUP0Hov8A&#xA;1b7b/kTH/TFUbirsVdirsVdiqkPqnF6enxq3qfZpWvxcvevXFWm+p78/T6PWvHp/uz/m7FV/7jn+&#xA;xz5+1efH9fD8MVQGjf4d/R0P6I+q/o/k31f6tw9Ll6j8uHHavqc+neuKo5Pq1Rw4V+LjxpX/ACqU&#xA;/HFUJpH6D4XX6I+r8PrMv136txp9ar+99Tj/ALsr9qu+Ko/FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FX/9k="/>
    </rdf:Alt>
   </xmp:Thumbnails>
   <xmpMM:DerivedFrom
    stRef:instanceID="uuid:b1ac9fe8-11a3-4422-b8f3-ae4b8085b7a8"
    stRef:documentID="uuid:5D20892493BFDB11914A8590D31508C8"/>
   <xmpTPg:MaxPageSize
    stDim:w="612.000000"
    stDim:h="792.000000"
    stDim:unit="Points"/>
   <xmpTPg:Fonts>
    <rdf:Bag>
     <rdf:li
      stFnt:fontName="Calibri"
      stFnt:fontFamily="Calibri"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 1.02"
      stFnt:composite="False"
      stFnt:fontFileName="CALIBRI.TTF"/>
     <rdf:li
      stFnt:fontName="CambriaMath"
      stFnt:fontFamily="Cambria Math"
      stFnt:fontFace="Regular"
      stFnt:fontType="TrueType"
      stFnt:versionString="Version 1.02"
      stFnt:composite="False"
      stFnt:fontFileName="CAMBRIA.TTC"/>
     <rdf:li
      stFnt:fontName="Arial-BoldMT"
      stFnt:fontFamily="Arial"
      stFnt:fontFace="Bold"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 3.00"
      stFnt:composite="False"
      stFnt:fontFileName="ARIALBD.TTF"/>
     <rdf:li
      stFnt:fontName="MyriadPro-Regular"
      stFnt:fontFamily="Myriad Pro"
      stFnt:fontFace="Regular"
      stFnt:fontType="Open Type"
      stFnt:versionString="Version 2.007;PS 002.000;Core 1.0.38;makeotf.lib1.7.9032"
      stFnt:composite="False"
      stFnt:fontFileName="MyriadPro-Regular.otf"/>
    </rdf:Bag>
   </xmpTPg:Fonts>
   <xmpTPg:PlateNames>
    <rdf:Seq>
     <rdf:li>Cyan</rdf:li>
     <rdf:li>Magenta</rdf:li>
     <rdf:li>Yellow</rdf:li>
     <rdf:li>Black</rdf:li>
    </rdf:Seq>
   </xmpTPg:PlateNames>
   <xmpTPg:SwatchGroups>
    <rdf:Seq>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Default Swatch Group"
       xmpG:groupType="0">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="White"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="Black"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="100.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Red"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Yellow"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Green"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Cyan"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Blue"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="CMYK Magenta"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=15 M=100 Y=90 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="14.999998"
         xmpG:magenta="100.000000"
         xmpG:yellow="90.000004"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=0 M=90 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="90.000004"
         xmpG:yellow="84.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=80 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="80.000001"
         xmpG:yellow="94.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=50 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=35 Y=85 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="35.000002"
         xmpG:yellow="84.999996"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=0 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="90.000004"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=20 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="19.999999"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=100 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="100.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=10 Y=100 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="84.999996"
         xmpG:magenta="10.000002"
         xmpG:yellow="100.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=90 M=30 Y=95 K=30"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="90.000004"
         xmpG:magenta="30.000001"
         xmpG:yellow="94.999999"
         xmpG:black="30.000001"/>
        <rdf:li
         xmpG:swatchName="C=75 M=0 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="0.000000"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=10 Y=45 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000001"
         xmpG:magenta="10.000002"
         xmpG:yellow="44.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=70 M=15 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="69.999999"
         xmpG:magenta="14.999998"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=85 M=50 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="84.999996"
         xmpG:magenta="50.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=95 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="94.999999"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=100 M=100 Y=25 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="100.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="25.000000"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=75 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="75.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=100 Y=0 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="100.000000"
         xmpG:yellow="0.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=35 M=100 Y=35 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="35.000002"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=10 M=100 Y=50 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="10.000002"
         xmpG:magenta="100.000000"
         xmpG:yellow="50.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=0 M=95 Y=20 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="94.999999"
         xmpG:yellow="19.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=25 M=25 Y=40 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="25.000000"
         xmpG:yellow="39.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=45 Y=50 K=5"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999998"
         xmpG:magenta="44.999999"
         xmpG:yellow="50.000000"
         xmpG:black="5.000001"/>
        <rdf:li
         xmpG:swatchName="C=50 M=50 Y=60 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="50.000000"
         xmpG:yellow="60.000002"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=55 M=60 Y=65 K=40"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="55.000001"
         xmpG:magenta="60.000002"
         xmpG:yellow="64.999998"
         xmpG:black="39.999998"/>
        <rdf:li
         xmpG:swatchName="C=25 M=40 Y=65 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="25.000000"
         xmpG:magenta="39.999998"
         xmpG:yellow="64.999998"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=50 Y=75 K=10"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000001"
         xmpG:magenta="50.000000"
         xmpG:yellow="75.000000"
         xmpG:black="10.000002"/>
        <rdf:li
         xmpG:swatchName="C=35 M=60 Y=80 K=25"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="35.000002"
         xmpG:magenta="60.000002"
         xmpG:yellow="80.000001"
         xmpG:black="25.000000"/>
        <rdf:li
         xmpG:swatchName="C=40 M=65 Y=90 K=35"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999998"
         xmpG:magenta="64.999998"
         xmpG:yellow="90.000004"
         xmpG:black="35.000002"/>
        <rdf:li
         xmpG:swatchName="C=40 M=70 Y=100 K=50"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="39.999998"
         xmpG:magenta="69.999999"
         xmpG:yellow="100.000000"
         xmpG:black="50.000000"/>
        <rdf:li
         xmpG:swatchName="C=50 M=70 Y=80 K=70"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="50.000000"
         xmpG:magenta="69.999999"
         xmpG:yellow="80.000001"
         xmpG:black="69.999999"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Print Color Group"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="C=0 M=30 Y=70 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="0.000000"
         xmpG:magenta="30.000001"
         xmpG:yellow="69.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=70 Y=90 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="69.999999"
         xmpG:yellow="90.000004"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=5 M=90 Y=75 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="5.000001"
         xmpG:magenta="90.000004"
         xmpG:yellow="75.000000"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=0 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="94.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=5 Y=95 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000002"
         xmpG:magenta="5.000001"
         xmpG:yellow="94.999999"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=30 M=0 Y=10 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="30.000001"
         xmpG:magenta="0.000000"
         xmpG:yellow="10.000002"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=60 M=10 Y=5 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="60.000002"
         xmpG:magenta="10.000002"
         xmpG:yellow="5.000001"
         xmpG:black="0.000000"/>
        <rdf:li
         xmpG:swatchName="C=80 M=5 Y=10 K=0"
         xmpG:mode="CMYK"
         xmpG:type="PROCESS"
         xmpG:cyan="80.000001"
         xmpG:magenta="5.000001"
         xmpG:yellow="10.000002"
         xmpG:black="0.000000"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
     <rdf:li>
      <rdf:Description
       xmpG:groupName="Grayscale"
       xmpG:groupType="1">
      <xmpG:Colorants>
       <rdf:Seq>
        <rdf:li
         xmpG:swatchName="K=100"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="255"/>
        <rdf:li
         xmpG:swatchName="K=90"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="229"/>
        <rdf:li
         xmpG:swatchName="K=80"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="203"/>
        <rdf:li
         xmpG:swatchName="K=70"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="178"/>
        <rdf:li
         xmpG:swatchName="K=60"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="152"/>
        <rdf:li
         xmpG:swatchName="K=50"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="127"/>
        <rdf:li
         xmpG:swatchName="K=40"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="101"/>
        <rdf:li
         xmpG:swatchName="K=30"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="76"/>
        <rdf:li
         xmpG:swatchName="K=20"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="50"/>
        <rdf:li
         xmpG:swatchName="K=10"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="25"/>
        <rdf:li
         xmpG:swatchName="K=5"
         xmpG:mode="GRAY"
         xmpG:type="PROCESS"
         xmpG:gray="12"/>
       </rdf:Seq>
      </xmpG:Colorants>
      </rdf:Description>
     </rdf:li>
    </rdf:Seq>
   </xmpTPg:SwatchGroups>
  </rdf:Description>
 </rdf:RDF>
</x:xmpmeta>
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
                                                                                                                                
<?xpacket end='w'?>


% &end XMP packet& %

[{Doc_Metadata} 2 dict begin /Type /Metadata def /Subtype /XML def currentdict end /PUT pdfmark_5
[/Document 1 dict begin /Metadata {Doc_Metadata} def currentdict end /BDC pdfmark_5
[/NamespacePop pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/capture_mysetup gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -792 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 792 li
612 792 li
612 0 li
cp
clp
[1 0 0 1 0 0 ]ct
75.799 106.81 mo
101.153 106.81 li
101.153 81.415 li
75.799 81.415 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.129 .465 .328 0 cmyk
f
75.799 131.715 mo
101.153 131.715 li
101.153 106.81 li
75.799 106.81 li
cp
.363 .852 .77 .504 cmyk
f
75.799 157.107 mo
101.153 157.107 li
101.153 131.714 li
75.799 131.714 li
cp
.578 .258 .992 .066 cmyk
f
75.799 182.502 mo
101.153 182.502 li
101.153 157.107 li
75.799 157.107 li
cp
f
101.641 182.99 mo
100.666 182.99 li
100.666 80.927 li
101.641 80.927 li
cp
0 0 0 0 cmyk
f
.063 lw
0 lc
1 lj
10 ml
[] 0 dsh
true sadj
101.641 182.99 mo
100.666 182.99 li
100.666 80.927 li
101.641 80.927 li
cp
@
76.288 182.99 mo
75.313 182.99 li
75.313 80.927 li
76.288 80.927 li
cp
f
76.288 182.99 mo
75.313 182.99 li
75.313 80.927 li
76.288 80.927 li
cp
@
75.313 80.927 mo
203.059 80.927 li
203.059 81.904 li
75.313 81.904 li
cp
f
75.313 80.927 mo
203.059 80.927 li
203.059 81.904 li
75.313 81.904 li
cp
@
101.153 106.675 mo
126.508 106.675 li
126.508 81.28 li
101.153 81.28 li
cp
.15 1 .9 .1 cmyk
f
126.508 106.675 mo
151.863 106.675 li
151.863 81.28 li
126.508 81.28 li
cp
0 .9 .85 0 cmyk
f
151.864 106.675 mo
177.218 106.675 li
177.218 81.28 li
151.864 81.28 li
cp
.9 .3 .95 .3 cmyk
f
101.153 131.581 mo
126.508 131.581 li
126.508 106.675 li
101.153 106.675 li
cp
.5 0 1 0 cmyk
f
126.508 131.581 mo
151.863 131.581 li
151.863 106.675 li
126.508 106.675 li
cp
.363 .852 .77 .504 cmyk
f
151.864 131.581 mo
177.218 131.581 li
177.218 106.675 li
151.864 106.675 li
cp
.15 1 .9 .1 cmyk
f
101.153 156.974 mo
126.508 156.974 li
126.508 131.581 li
101.153 131.581 li
cp
.85 .1 1 .1 cmyk
f
126.508 156.974 mo
151.863 156.974 li
151.863 131.581 li
126.508 131.581 li
cp
0 .9 .85 0 cmyk
f
151.864 156.974 mo
177.218 156.974 li
177.218 131.581 li
151.864 131.581 li
cp
.15 1 .9 .1 cmyk
f
101.153 182.368 mo
126.508 182.368 li
126.508 156.973 li
101.153 156.973 li
cp
.85 .1 1 .1 cmyk
f
126.508 182.368 mo
151.863 182.368 li
151.863 156.973 li
126.508 156.973 li
cp
.578 .258 .992 .066 cmyk
f
151.864 182.368 mo
177.218 182.368 li
177.218 156.973 li
151.864 156.973 li
cp
.75 0 1 0 cmyk
f
126.997 182.856 mo
126.022 182.856 li
126.022 80.792 li
126.997 80.792 li
cp
0 0 0 0 cmyk
f
126.997 182.856 mo
126.022 182.856 li
126.022 80.792 li
126.997 80.792 li
cp
@
152.35 182.856 mo
151.375 182.856 li
151.375 80.792 li
152.35 80.792 li
cp
f
152.35 182.856 mo
151.375 182.856 li
151.375 80.792 li
152.35 80.792 li
cp
@
177.706 182.856 mo
176.729 182.856 li
176.729 80.792 li
177.706 80.792 li
cp
f
177.706 182.856 mo
176.729 182.856 li
176.729 80.792 li
177.706 80.792 li
cp
@
75.313 106.187 mo
203.059 106.187 li
203.059 107.164 li
75.313 107.164 li
cp
f
75.313 106.187 mo
203.059 106.187 li
203.059 107.164 li
75.313 107.164 li
cp
@
75.313 131.093 mo
203.059 131.093 li
203.059 132.07 li
75.313 132.07 li
cp
f
75.313 131.093 mo
203.059 131.093 li
203.059 132.07 li
75.313 132.07 li
cp
@
75.313 156.485 mo
203.059 156.485 li
203.059 157.462 li
75.313 157.462 li
cp
f
75.313 156.485 mo
203.059 156.485 li
203.059 157.462 li
75.313 157.462 li
cp
@
203.059 182.856 mo
202.084 182.856 li
202.084 80.792 li
203.059 80.792 li
cp
f
203.059 182.856 mo
202.084 182.856 li
202.084 80.792 li
203.059 80.792 li
cp
@
75.313 181.88 mo
203.059 181.88 li
203.059 182.857 li
75.313 182.857 li
cp
f
75.313 181.88 mo
203.059 181.88 li
203.059 182.857 li
75.313 182.857 li
cp
@
68.0591 178.497 mo
65.2251 178.405 li
63.9441 178.282 li
62.8771 178.161 li
61.9031 177.977 li
61.2021 177.765 li
61.1701 177.733 61.1411 177.733 61.1101 177.702 cv
60.6841 177.458 li
60.5921 177.429 60.5321 177.366 60.5001 177.306 cv
60.3481 177.061 li
60.2881 176.97 60.2561 176.878 60.2561 176.786 cv
60.2561 135.768 li
60.3481 136.043 li
60.1961 135.798 li
60.3791 135.951 li
59.9521 135.707 li
60.0431 135.768 li
59.3731 135.584 li
58.5201 135.401 li
57.4541 135.248 li
56.2641 135.127 li
53.4301 135.035 li
53.1571 135.035 52.9441 134.821 52.9441 134.547 cv
52.9441 134.303 53.1571 134.089 53.4301 134.059 cv
56.2951 133.967 li
57.4831 133.875 li
58.5801 133.753 li
59.4031 133.57 li
60.0431 133.356 li
59.9521 133.418 li
60.3791 133.174 li
60.1961 133.326 li
60.3481 133.082 li
60.2561 133.326 li
60.2561 92.3051 li
60.2561 92.2131 60.2881 92.1521 60.3481 92.0601 cv
60.5001 91.8161 li
60.5321 91.7561 60.5921 91.6941 60.6841 91.6641 cv
61.1101 91.4201 li
61.1411 91.3891 61.1701 91.3581 61.2021 91.3581 cv
61.8711 91.1761 li
62.8171 90.9921 li
63.9141 90.8401 li
65.1941 90.7181 li
68.0591 90.5961 li
68.0881 91.5721 li
65.2861 91.6641 li
64.0671 91.7861 li
63.0301 91.9381 li
62.1471 92.1221 li
61.4751 92.3051 li
61.5671 92.2441 li
61.1411 92.4881 li
61.3231 92.3361 li
61.1701 92.5801 li
61.2331 92.3051 li
61.2331 133.326 li
61.2331 133.418 61.2331 133.509 61.1701 133.601 cv
61.0181 133.845 li
60.9891 133.906 60.9281 133.967 60.8361 133.997 cv
60.4091 134.242 li
60.3791 134.271 60.3481 134.271 60.3191 134.303 cv
59.6181 134.516 li
58.6721 134.699 li
57.5751 134.821 li
56.3271 134.943 li
53.4611 135.035 li
53.4611 134.059 li
56.3561 134.18 li
57.6061 134.303 li
58.7331 134.455 li
59.6471 134.639 li
60.3191 134.821 li
60.3481 134.821 60.3791 134.851 60.4091 134.883 cv
60.8361 135.127 li
60.9281 135.157 60.9891 135.219 61.0181 135.279 cv
61.1701 135.523 li
61.2331 135.615 61.2331 135.676 61.2331 135.768 cv
61.2331 176.786 li
61.1701 176.544 li
61.3231 176.786 li
61.1411 176.634 li
61.5671 176.878 li
61.4751 176.817 li
62.1161 177.03 li
62.9691 177.214 li
64.0361 177.337 li
65.2541 177.429 li
68.0881 177.52 li
cp
.746 .676 .668 .898 cmyk
f
68.0591 178.497 mo
65.2251 178.405 li
63.9441 178.282 li
62.8771 178.161 li
61.9031 177.977 li
61.2021 177.765 li
61.1701 177.733 61.1411 177.733 61.1101 177.702 cv
60.6841 177.458 li
60.5921 177.429 60.5321 177.366 60.5001 177.306 cv
60.3481 177.061 li
60.2881 176.97 60.2561 176.878 60.2561 176.786 cv
60.2561 135.768 li
60.3481 136.043 li
60.1961 135.798 li
60.3791 135.951 li
59.9521 135.707 li
60.0431 135.768 li
59.3731 135.584 li
58.5201 135.401 li
57.4541 135.248 li
56.2641 135.127 li
53.4301 135.035 li
53.1571 135.035 52.9441 134.821 52.9441 134.547 cv
52.9441 134.303 53.1571 134.089 53.4301 134.059 cv
56.2951 133.967 li
57.4831 133.875 li
58.5801 133.753 li
59.4031 133.57 li
60.0431 133.356 li
59.9521 133.418 li
60.3791 133.174 li
60.1961 133.326 li
60.3481 133.082 li
60.2561 133.326 li
60.2561 92.3051 li
60.2561 92.2131 60.2881 92.1521 60.3481 92.0601 cv
60.5001 91.8161 li
60.5321 91.7561 60.5921 91.6941 60.6841 91.6641 cv
61.1101 91.4201 li
61.1411 91.3891 61.1701 91.3581 61.2021 91.3581 cv
61.8711 91.1761 li
62.8171 90.9921 li
63.9141 90.8401 li
65.1941 90.7181 li
68.0591 90.5961 li
68.0881 91.5721 li
65.2861 91.6641 li
64.0671 91.7861 li
63.0301 91.9381 li
62.1471 92.1221 li
61.4751 92.3051 li
61.5671 92.2441 li
61.1411 92.4881 li
61.3231 92.3361 li
61.1701 92.5801 li
61.2331 92.3051 li
61.2331 133.326 li
61.2331 133.418 61.2331 133.509 61.1701 133.601 cv
61.0181 133.845 li
60.9891 133.906 60.9281 133.967 60.8361 133.997 cv
60.4091 134.242 li
60.3791 134.271 60.3481 134.271 60.3191 134.303 cv
59.6181 134.516 li
58.6721 134.699 li
57.5751 134.821 li
56.3271 134.943 li
53.4611 135.035 li
53.4611 134.059 li
56.3561 134.18 li
57.6061 134.303 li
58.7331 134.455 li
59.6471 134.639 li
60.3191 134.821 li
60.3481 134.821 60.3791 134.851 60.4091 134.883 cv
60.8361 135.127 li
60.9281 135.157 60.9891 135.219 61.0181 135.279 cv
61.1701 135.523 li
61.2331 135.615 61.2331 135.676 61.2331 135.768 cv
61.2331 176.786 li
61.1701 176.544 li
61.3231 176.786 li
61.1411 176.634 li
61.5671 176.878 li
61.4751 176.817 li
62.1161 177.03 li
62.9691 177.214 li
64.0361 177.337 li
65.2541 177.429 li
68.0881 177.52 li
68.0591 178.497 li
cp
@
172.165 188.269 mo
172.079 190.192 li
171.863 191.748 li
171.863 191.81 li
171.477 192.877 li
171.477 192.94 171.432 192.969 171.39 193 cv
171.174 193.273 li
171.13 193.367 171.044 193.427 170.957 193.458 cv
170.742 193.549 li
170.611 193.612 170.481 193.612 170.352 193.612 cv
131.161 193.612 li
131.549 193.549 li
131.333 193.641 li
131.549 193.489 li
131.288 193.792 li
131.377 193.641 li
131.03 194.677 li
130.77 196.174 li
130.685 198.036 li
130.685 198.31 130.383 198.495 129.993 198.495 cv
129.649 198.495 129.345 198.31 129.303 198.036 cv
129.217 196.144 li
129.043 194.617 li
129.043 194.708 li
128.654 193.672 li
128.696 193.763 li
128.48 193.458 li
128.741 193.641 li
128.525 193.549 li
128.87 193.612 li
89.6765 193.612 li
89.5895 193.612 89.4595 193.612 89.3325 193.549 cv
89.1165 193.458 li
89.0275 193.427 88.9415 193.367 88.8995 193.305 cv
88.6395 193.031 li
88.5955 193 88.5535 192.94 88.5535 192.877 cv
88.2085 191.81 li
87.9465 190.222 li
87.8195 188.269 li
89.2015 188.239 li
89.2875 190.13 li
89.5485 191.596 li
89.8945 192.664 li
89.8055 192.511 li
90.0665 192.787 li
89.8505 192.633 li
90.0665 192.724 li
89.6765 192.633 li
128.87 192.633 li
128.998 192.633 129.128 192.664 129.259 192.724 cv
129.475 192.817 li
129.561 192.847 129.649 192.94 129.735 193 cv
129.951 193.305 li
129.951 193.336 129.993 193.367 129.993 193.396 cv
130.383 194.433 li
130.383 194.526 li
130.6 196.114 li
130.685 198.005 li
129.303 198.005 li
129.434 196.083 li
129.691 194.464 li
130.037 193.427 li
130.037 193.367 130.08 193.336 130.122 193.273 cv
130.383 192.969 li
130.424 192.909 130.513 192.847 130.6 192.817 cv
130.814 192.724 li
130.945 192.664 131.072 192.633 131.161 192.633 cv
170.352 192.633 li
170.005 192.724 li
170.221 192.633 li
169.963 192.817 li
170.18 192.542 li
170.136 192.633 li
170.526 191.565 li
170.526 191.656 li
170.697 190.162 li
170.783 188.239 li
cp
f
172.165 188.269 mo
172.079 190.192 li
171.863 191.748 li
171.863 191.81 li
171.477 192.877 li
171.477 192.94 171.432 192.969 171.39 193 cv
171.174 193.273 li
171.13 193.367 171.044 193.427 170.957 193.458 cv
170.742 193.549 li
170.611 193.612 170.481 193.612 170.352 193.612 cv
131.161 193.612 li
131.549 193.549 li
131.333 193.641 li
131.549 193.489 li
131.288 193.792 li
131.377 193.641 li
131.03 194.677 li
130.77 196.174 li
130.685 198.036 li
130.685 198.31 130.383 198.495 129.993 198.495 cv
129.649 198.495 129.345 198.31 129.303 198.036 cv
129.217 196.144 li
129.043 194.617 li
129.043 194.708 li
128.654 193.672 li
128.696 193.763 li
128.48 193.458 li
128.741 193.641 li
128.525 193.549 li
128.87 193.612 li
89.6765 193.612 li
89.5895 193.612 89.4595 193.612 89.3325 193.549 cv
89.1165 193.458 li
89.0275 193.427 88.9415 193.367 88.8995 193.305 cv
88.6395 193.031 li
88.5955 193 88.5535 192.94 88.5535 192.877 cv
88.2085 191.81 li
87.9465 190.222 li
87.8195 188.269 li
89.2015 188.239 li
89.2875 190.13 li
89.5485 191.596 li
89.8945 192.664 li
89.8055 192.511 li
90.0665 192.787 li
89.8505 192.633 li
90.0665 192.724 li
89.6765 192.633 li
128.87 192.633 li
128.998 192.633 129.128 192.664 129.259 192.724 cv
129.475 192.817 li
129.561 192.847 129.649 192.94 129.735 193 cv
129.951 193.305 li
129.951 193.336 129.993 193.367 129.993 193.396 cv
130.383 194.433 li
130.383 194.526 li
130.6 196.114 li
130.685 198.005 li
129.303 198.005 li
129.434 196.083 li
129.691 194.464 li
130.037 193.427 li
130.037 193.367 130.08 193.336 130.122 193.273 cv
130.383 192.969 li
130.424 192.909 130.513 192.847 130.6 192.817 cv
130.814 192.724 li
130.945 192.664 131.072 192.633 131.161 192.633 cv
170.352 192.633 li
170.005 192.724 li
170.221 192.633 li
169.963 192.817 li
170.18 192.542 li
170.136 192.633 li
170.526 191.565 li
170.526 191.656 li
170.697 190.162 li
170.783 188.239 li
172.165 188.269 li
cp
@
%ADOBeginSubsetFont: PBAAAA+CambriaMath Initial
ct_T42Dict begin
-1.473 -2.461 2.867 3.113
 256 array 0 1 255 {1 index exch /.notdef put} for  /PBAAAA+CambriaMath
Type42DictBegin
[<00010000000c000c000c000c4f532f327efe8376000000cc000000606376
7420edfefe020000012c0000087e6670676dd0d86432000009ac00000c41
676c796674bec00e0000d2b0000003ec68656164e560aad7000015f00000
00366868656112c225aa0000162800000024686d74787e98c0fb0000164c
000049c86c6f63610047354600006014000049cc6d6178701c5c123e0000
a9e0000000206e616d65986bfd500000aa00000017c670726570920eec87
0000c1c8000010e867646972000000000000000000000000000304c40190
00050008059a05330000009c059a0533000001f7006601fe020f02040503
050406030204a00002ef420020eb00000000000000004d53202000c00000
fb040639fe39016118ef13b52000009f0000000003bc0555000000200003
058d000a000005550010002b000000000000041700100000000000000000
03bc001000000000fff0ff9d0000fff00000000000000000fe52fff00000
000000000000000005b1000d033d000d055500100215fff002e00010ffa0
fff000000000000000000000000000000000000000000000000000000000
03e000100000000000000800000008000000040000000042007d00000000
000000630000000000000063007000000000005600000000000000000000
00000000000000000000000000000000000000c200000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000ce00c900bb00830000000000bc00b300ac0000
0000000000ac00b5008500c200bc0078000000000059004f008400a0004f
00540078005a00490055005e00690000007100a400a50000000000000062
0060003100310000003e000a008a00000000000000ca00e800b601fc00a4
009b0000000000000000000000000000000000930085007200b800c2009b
004a0069003e00910063009400ab009f004b008600910000000000000000
000000d60000000000e00261006a007300a700b000850064006800000000
004d00810048005c0078004600560071006e008a005a00af00b4006500b1
0099007800bc0052009e06be00080274000d033dfff3023afff3008b0000
009602740281028e03800074007c009e00de00f40090008ffec2fff00000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00900098004b0084008e0042005a033d03500360007d0000000000000000
000000000000000000000000000000000000000000000000000000000000
00b700a400c10072007800b300a600ac009e00900125009a0087007d010c
009d00bc0132009100000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
0000000000000000000000b7008c00a60000000000000000000000000000
00c300b900af00a50055008e00520073009b00a800420050000000000000
000000000000000000000128010a0083006a005a010e00fa005f00000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000700063007800540082
006a00720087005800660031007500580068005800750000000000000000
0136013e0088007100a3012d00e400750042007e006e0121013000c60088
0118007a0068009d0042009400ba0130013e007300b4012800f90070005b
008e000000000000000000000000000000000000058d0010000005550010
000000000800011600ce0000040003fa0000000003ea001000000000fff0
00000000fff00000012400c80000fe52fff00000000000000123010d00bc
00b700aa00c600a2009b011b010300f500e100fe012f011c00bc012900d1
012900c600fa00ba00c1010e00ec011b011800d701010000000000000000
00000000000000000000058d001000000555001000000000080000ba008b
0565040000000000000003ea001000000000fff000000000fff0000000b1
008d0000fe52fff0000000000000008100a7009c00c2007d00ac00b400bb
00c1009200b600bb008c00b400a00085009700ad00a600a60091008000a2
00000000000000000000055a0033000005670033000000000800010e00c3
0000040000000000000003c000330000ffd1ffcd00000000ffcd00000000
00000000fe8effcd00000000000000d5006900db003e0050004900000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000207fce305df0249050f
0501ffeb04aa0704fe5b01f5000000a50070009300a5007b007b00670000
000000000000000000000000000000000000000003fd03e805afffee05ba
fe4205110524fe71fe7c000a00d700d900cf00c500e300d300d500ca00e7
033003c503e103f20460040605cd05a200b5042e00770096000000000000
00000000000000000000046e0468045104a4045a042e05270000041c004d
00520057005c00600062006b007200004059645f5e5d5c5b5a5958555452
4d4c4b4a4948474644434241403f3e3d3c3b3a393837363534333231302f
2e2d2c2b2a292827262524232221201f1e1d1c1b1a191817161514131211
100f0e0d0c0b0a090807060504030201002c0118b0184358456ab0194360
b00c2344231020b00c4ef04d2fb000121b21231120332f592d2c0118b018
4358b0052bb000134bb0145058b100403859b0062b1b21231120332f592d
2c0118b01843584eb0032510f221b000124d1b2045b00425b00425234a61
64b0285258212310d61bb0032510f221b0001259592d2cb01a435821211b
b00225b0022549b00325b003254a612064b01050582121211bb00325b003
2549b0005058b0005058b8ffe238211bb0003821591bb0005258b01e3821
1bb0003821595959592d2c0118b0184358b0052bb000134bb0145058b900
00ffc03859b0062b1b21231120332f592d2c4e018a10b10c194344b00014
b1000ce2b00015b90000fff03800b0003cb0282bb0022510b0003c2d2c01
18b0002fb00114f2b00113b001154db000122d2c0118b0184358b0052bb0
0013b90000ffe038b0062b1b21231120332f592d2c0118b018435845646a
23456469b01943646060b00c2344231020b00cf02fb000121b2121208a20
8a525811331b212159592d2c014bb0c85158b10b0a432343650a592d2c00
4bb0c8515800b10a0b4323430b592d2c00b00c2370b1010c3e01b00c2370
b1020c453ab10200080d2d2cb0122bb0022545b00225456ab0408b60b002
2523442121212d2cb0132bb0022545b00225456ab8ffc08c60b002252344
2121212d2cb000b0122b2121212d2cb000b0132b2121212d2c014bb0c851
58b00643b00743650a592d2c2069b04061b0008b20b12cc08a8cb8100062
602b0c642364615c58b00361592d2cb1000325456854b01c4b505a58b003
2545b0032545606820b004252344b0042523441bb00325204568208a2344
b00325456860b003252344592d2cb00325204568208a2344b00325456468
6560b00425b0016023442d2cb00943588721c01bb01243588745b0112bb0
0d2344b00d7ae41b038a45186920b00d23448a8a8720b0a05158b0112bb0
0d2344b00d7ae41b21b00d7ae4595959182d2c208a4523456860442d2c45
6a422d2c01182f2d2c0118b0184358b00425b00425496423456469b0408b
6120b080626ab00225b00225618cb0194360b00c2344218a10b00cf6211b
21212121592d2c01b0184358b0022545b002254564606ab00325456a6120
b00425456a208a8b65b0042523448cb00325234421211b20456a4420456a
44592d2c012045b00055b018435a584568234569b0408b6120b080626a20
8a236120b003258b65b0042523448cb00325234421211b2121b0192b592d
2c018a8a45642345646164422d2cb00425b00425b0192bb0184358b00425
b00425b00325b01b2b01b0022543b04054b0022543b000545a58b0032520
45b040614459b0022543b00054b0022543b040545a58b004252045b04060
445959212121212d2cb0032520b0072587052e23208ab00425b00725b014
2b1021c4212d2cc02d2c4b525845441b2121592d2cb00243583ded181bed
592d2c4b505845441b2121592d2c01184b52588a2fed1b212121592d2c4b
53234b515a58b003254568b003254568b003256054582121211bb0022545
6860b0032523442121591b212121592d2cb00243583dcd181bcd592d2cb0
02435c58462346608a8a462320468a608a61b8ff8062232010238ab10c0c
8a70456020b0005058b00161b8ffba8b1bb0468c59b0106068013a1b2121
212121592d2c2045b0032546524bb013515b58b0022546206861b00325b0
03253f2321381b2111592d2c2045b00325465058b0022546206861b00325
b003253f2321381b2111592d2c004bb0c8515800b00743b006430b592d2c
8a10ec2d2cb00c4358211b2046b0005258b8fff0381bb0103859592d2c20
b0005558b8100063b003254564b00325456461b0005358b0021bb04061b0
0359254569535845441b2121591b21b0022545b00225456164b028515845
441b212159592d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c184b53
58b00425b00425496423456469b0408b6120b080626ab00225b00225618c
b00c2344218a10b00cf6211b218a11231220392f592d2cb00225b0022549
64b0c05458b8fff838b008381b2121592d2cb0134358031b02592d2cb013
4358021b03592d2cb00a2b2310203cb0172b2d2cb00225b8fff038b0282b
8a102320d023b0102bb0054358c01b3c59201011b00012012d2cb0482b2d
2c01b0022510d023c901b00113b0001410b0013cb001162d2c01b00013b0
01b0032549b0031738b001132d2c4b53234b515a5820458a60441b212159
2d2c184b5358b00425b004254964b00325b00325496468b0408b6120b080
626ab00225b00225618cb00c234421b004251023b00cf61bb00425b00425
11122320392f59cc21212d2c0118b0184358b0052546234564611b21b004
25b004254a59b00e23442310b00eec2310b00eec2d2cb01b435820b00160
45b000515820b0016020452068b0005558b0206044211b212121591b20b0
016020452068b0005558b8ffe06044b01c4b50582045b02060441b21591b
21212159591b21592d2cb0022546206861b00325b003253f2321382d2c46
2346608a8a462320468a608a61b8ff8062232010238ab10c0c8a70456020
b0005058b00161b8ff808b1bb0818c59683a2d2cb0402a212d2c2035b001
602d2cb0024354584b53234b515a58381b2121591b21212121592d2c49b0
0e23442d2cb0024354584b53234b515a5820458a60441b2121591b212121
21592d2c8a10b002435821b0301ac9181bb0401a18ed592d2c4b53234b51
5a5820458a60441b2121592d2c4b545820458a60441b2121592d2c4b5323
4b515a58381b2121592d2c4b5458381b2121592d2cb002435458b0462b1b
21212121592d2cb002435458b0472b1b212121592d2cb002435458b0482b
1b21212121592d2cb002435458b0492b1b212121592d2c4b52587d1b7a59
2d2cb1020042b123018851b1400188535a58b910000020885458b2020102
43604259b12401885158b920000040885458b2020202436042b124018854
58b2022002436042004b014b5258b2020802436042591bb9400000808854
58b202040243604259b94000008063b80100885458b202080243604259b9
4000010063b80200885458b202100243604259b94000020063b804008854
58b202400243604259595959592d2c451868234b51582320452064b04050
587c59688a6059442d2cb00016b00225b0022501b001233e00b002233eb1
0102060cb00a236542b00b234201b001233f00b002233fb10102060cb006
236542b0072342b00116012d2c20b82000628a6023622d2cb0072558001b
0159b0042510b00325b0022520b8ffff545821cd1bed5921b006255cb006
255a58b0092b5920b005254ab0042547b004254760b0062547b0806361b0
0225b0005558b00325b00725496359b0082558001b0159b00425b0062549
b009255cb009255a58b0092b59b0072546b0806361b0032520b000555863
1b2159612320b0005558b080631b21b08059b0592bb006255c586959b004
25202010b00048233ab0062658001b0159b0052658b003252f598a122332
21212d2cb00625b00a2587b00625b009254ab0005358b00625b00a251bb0
0925b0072559b00225b00225070cb005256323b00625636020b940000400
63535821b00426b00426b00a1bb94000040063655158b0042665b0042665
b00a1bb00426b00426b000b00325b003250b0d0ab0092eb00725b007250b
0d0ab00b2eb00525b0052507595920b0005558b00525b0052587b00725b0
07250bb0092510b00b25b0092620b8ffff545821cd1bed59b00525b00525
07b00825b00b254923b00625b0062587b00a2510b00b25c15920b00051b8
00522378b00161b00225b00725b0072507b00a25b00d254961b08062b005
25b005250bb00a252338b00625b0062587b00825b008250bb00a2510b00b
25c4b00625b0062507b00925b00c2549b0032554b8ffa723792121212121
212121212121212d2c23b0005458b9400000001bb900004000598ab00054
58b9400000001bb90000400059b05b2b2d2c08b0005458b9400000001bb9
00004000590db05b2b2d2c8a8a080d8ab0005458b9400000001bb9000040
0059b05b2b2d2cb00426b00426080db00426b00426080db05b2b2d2c2045
69442d000000000100000001051f5a3ed1f75f0f3cf5001b080000000000
b9e6983d00000000c125c342f434ec4b16f118ef00000009000200010000
000000010000079afe390000175af434fda416f100010000000000000000
0000000000001272054400be0000000001c3000001c3000004fc000604e4
007904800077054b0078049a0079044b007904e30077057e007902980079
0274001d05090079044b00790686007505720075053a0077048b0079053a
007704f8007903f8007004be0042052f005a04d40016075f001604920015
04900012044d005e04fc000604fc000604fc000604fc000604fc000604fc
000604fc000604fc000604fc000604fc000606ee000006ee000004800077
04800077048000770480007704800077054b007805510032049a0079049a
0079049a0079049a0079049a0079049a0079049a0079049a0079049a0079
04e3007704e3007704e3007704e30077057e007905880079029800330298
00790298001f029800010298004002980035029800140298007902980079
050c00790274000d05090079044b0079044b0079044b00790451000d04fa
007905720075057200750572007505720075053a0077053a0077053a0077
053a0077053a0077053a0077053a0077053a0077053a0065053a0065076e
007704f8007904f8007904f8007903f8007003f8007003f8007003f80070
03f8007004be004204be004204be0042052f005a052f005a052f005a052f
005a052f005a052f005a052f005a052f005a052f005a052f005a075f0016
075f0016075f0016075f001604900012049000120490001204900012044d
005e044d005e044d005e05720075055100320497007903e8005004610030
038700690470006903e70068026c004f03f4003f046a0040023900530221
00050432003f022c003f06a8005304770053043f00690473004904600068
034f00530370005e02b50025046b0049040800130632001d03de00170408
001403a3005103e8005003e8005003e8005003e8005003e8005003e80050
03e8005003e8005003e8005003e800500605005006050050038700690387
0069038700690387006903870069056c00690470006903e7006803e70068
03e7006803e7006803e7006803e7006803e7006803e7006803e7006803f4
003f03f4003f03f4003f03f4003f046a0040046a00340239002302390053
0239fffe0239ffd30239001f023900150239fff00239005302390053045a
00530221fff20432003f043f0053022c003f0314003f022c00390278000d
0302003f0477005304770053047700530477005305850047043f0069043f
0069043f0069043f0069043f0069043f0069043f0069043f0069043f005b
043f005b068c0069034f0053034f0053034f00530370005e0370005e0370
005e0370005e0370005e04d8004f023c004f039b002502b5002502d30035
046b0049046b0049046b0049046b0049046b0049046b0049046b0049046b
0049046b0049046b00490632001d0632001d0632001d0632001d04080014
04080014040800140408001403a3005103a3005103a3005104680053043e
006904610031045dfffe0471006803ef006904aa006a0417006803d50068
044d006904e3006802610068023b00070476006803b7006805bb006504c4
0064048300690433006804830069046a006803a4005e0439003904930047
0447001406a4001d041b00160416001603db0050045dfffe045dfffe045d
fffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe045dfffe
061efffe061efffe03ef006903ef006903ef006903ef006903ef006904aa
006a04b20044041700680417006804170068041700680417006804170068
041700680417006804170068044d0069044d0069044d0069044d006904e3
006804ed00680261003502610068026100130261ffe60261003402610029
026100030261006802610068049c0068023b00010476006803b7006803b7
006803b7006803c50042046e006804c4006404c4006404c4006404c40064
048300690483006904830069048300690483006904830069048300690483
0069048300600483006006790069046a0068046a0068046a006803a4005e
03a4005e03a4005e03a4005e03a4005e0439003904390039043900390493
004704930047049300470493004704930047049300470493004704930047
049300470493004706a4001d06a4001d06a4001d06a4001d041600160416
0016041600160416001603db005003db005003db005004c4006404b20044
0444006802ef004c0346003802ab005d034e005d02ee005d01eb004b02f7
00410349004101c2004e01b400150319004001b9004004db004e0353004e
032c005d035000470346005c0284004e029b0056021c002e034b00470313
00270497002f02e800240313002702bf004d06d1004f093d004f04d8004f
06d6004f0942004f04a5004f0711004f048d004f06f9004f069e004f090a
004f0497004f0703004f05800059050500590247003f0247001f0000fdfd
0000fddd0247008b024700720000fe490000fe30024700060247fff60000
fdc30000fdb4024700060247fff60000fdc40000fdb400e8ffbd0247ffda
0247ffda0000fd980000fd9802470026024700170000fde40000fdd50247
001b0247000c0000fdd90000fdca0247fff60247ffec0000fdb40000fdaa
02470041024700410000fdff0000fdff0247fffc0247fffa0000fdba0000
fdb8024700c7024700c70000fe850000fe850247003c0000fdfa02470088
0000fe460000fdf80000fe7901a40018021c0049021c00aa01a4006d0604
00f902a8006c02a8006c024900c0024900b6024900b60361005c0361004b
0361004b01c5006901c5004701c5006901c5004703010069030100470301
00690301004701a4002e02e2002f026c0064026c0064026c0064026c0064
03e7006403e7006403e7006403e7006403ec003e028800f70400005a0400
005a0800005a0800005a0600005a0600005a038c00950242009901fa008e
030e00b4030e002b030e00b4030e002b02cd00e402cd002b02cd00e402cd
002b0319005f0319002b0319005f0319002b036b004e0422006d0422006d
0400005804b4005104fc000604e40079044a007904c40033049a0079044d
005e057e0079053a0077029800790509007904d800060686007505720075
04930072053a007705650079048b00790462003004be004204dcfff10648
00740492001506430032056f003f04f3000605a6000006800000039a0000
0298004005e30000063a000004dcfff1060d000004980068047100ae041b
007b040effe504330066038d006a033300690458fffb0460007b045e0000
024600b20437004803e70016045e00b503db000b033d0064043f006904d1
000d0442008d049300640373006903d3000c0454000005b2006805c70068
03e3fff605c100450602006404980068038d006a0458fffb024600b20246
00240246ffd2043f006904540000045400000454000006020064045dfffe
0471006803b900680431001e0417006803db005004e30068048300690261
0068047600680445fffe05bb006504c4006403fc00610483006904c40068
0433006803e1002d043900390433fffa0556005b041b00160599002804de
003f045dfffe0417006804e300680261006802610034048300690433fffa
0433fffa04de003f024700c00000fe7e0247ffd20000fd9001f4009601f4
009601f40096021c0049019000460190002a04fc000604cb007904e40079
04460079053d0025049a0079076200250458007105890079058900790533
0079056c002406860075057e0079053a007705650079048b007904800077
04be004204cd0025063b0068049200150560007b0502002f076a0079076a
007905db004206cd007904c700790496006f075e0079050c000e04460079
0404007905e90042048f007703f80070049a0079049a0079029800790298
00400274001d0589007905330079077b0025077500790606004204cd0025
0556007b05c60042053a0077054a002003e800500454007f042f006a0393
006a0477002503e7006805b6001203aa005004b8006a04b8006a0452006a
047900250562006804b6006a043f00690489006a04730049038700690417
003904080014057b006803de0017048f006a043f00290668006a0668006a
04f0003905fc006a041d006a03c300500623006a043f00170393006a0356
006a044e003303c300680370005e03e7006803e700680239005302390020
0221000504b8006a0452006a061b00250662006a046a0034040800140489
006a04fa0039043a00690471001e043b0069045dfffe0455006804710068
03d20068049600240417006806b6003603e6005d04e7006804e70068049d
006804c0002405bb006504e300680483006904c400680433006803ef0069
04390039041a0028055a005c041b001604cb006a0476002a06c1006806c1
006805320039064c00680449006803fb005d068300680490001803d20068
03a400680553003903ed005b03a4005e0417006804170068026100680261
0034023b000704e70068049d00680687002406be0068055e0039041a0028
04c4006a053600390483006904b3001e0247ffdd0247ffda0000fd9b0000
fd98046e009d05b3007d028800f703ec003f02f7000001e5009103250091
071500890715008906ce006e06ce006e056f002606d70064045a007c0507
00230436002305070023046e0023040c007004360085040c0070046e00a2
03870069043a00430436003f043a0043046e0061047cff9804e0004f0436
002604e0003d046e00330356006e036c0078084f007504f4006e0436007b
02bf002b03ae003103b000330436003c03b700570438008103ae00480436
006e043800640436007b043600b10436006f043600810436003c043600a7
0436007e0436008e0436006e04360067046e008102e5002c03e0002903e3
003f0464004803ea005c045a007803da0048046e006f0459005a046e0081
046e00b2046e0081046e0090046e004d046e0096046e0082046e0094046e
006f046e0064034200690342007e03420063034200730342003a03420086
034200670342007c03420063034200560342006603420068034200660256
009202560032034200690342007e03420063034200730342003a03420086
034200670342007c03420063034200560342006603420068034200660256
009202560032034200690342007e03420063034200730342003a03420086
034200670342007c0342006303420056046e004f06ec007e071e007e06ec
0070071e00690a1b0069046e007c046e007f046e007c046e00a801fa008e
046e007f00eafe72046e007c046e007c046e0042046e007c046e007c046e
007c046e007c046e0071030100540425002706ce006e045c005403670046
0541002304c40033056f003f045a00b5067f005b05ab001a04500099036b
005c034200690342007e03420063034200730342003a0342008603420067
0342007c0342006303420056026c004f03b000150395005d0351006403d9
005d035b005d0314005d039b006403f6005d01ef005d01e7002503af005d
031a005d04af005d03f2005d03d500640357005d03d500640399005d02fa
0062035c002c03d4005303940021055b001e03660023036400230322004c
03b000150395005d0351006403d9005d035b005d0314005d039b006403f6
005d01ef005d01e7002503af005d031a005d04af005d03f2005d03d50064
0357005d03d500640399005d02fa0062035c002c03d4005303940021055b
001e03660023036400230322004c02ef004c0346003802ab005d034e005d
02ee005d01eb004b02f700410349004101c2004e01b400150319004001b9
004004db004e0353004e032c005d035000470346005c0284004e029b0056
021c002e034b0047031300270497002f02e800240313002702bf004d03b0
00150395005d0311005d03890036035b005d0322004c03f6005d03d50064
01ef005d03af005d039a001604af005d03f2005d0355005a03d5006403e4
005d0357005d0334002c035c002c0389000f047800550366002304940038
0400003f0382005c03520090033000190321005b02ae005e026e00240353
000f0341006a01ef0090033e0047031e00210352009002e4001c02860024
032c005d038f0016032a00760372005a029a005d02b300160338000f041f
005d02f9000f043600440448005a03b000150395005d0311005d03890036
035b005d0322004c03f6005d03d5006401ef005d03af005d039a001604af
005d03f2005d0355005a03d5006403e4005d0357005d0334002c035c002c
0389000f0478005503660023049400380400003f0382005c035200900330
00190321005b02ae005e026e00240353000f0341006a01ef0090033e0047
031e00210352009002e4001c02860024032c005d038f0016032a00760372
005a029a005d02b300160338000f041f005d02f9000f043600440448005a
046e006803180060022900b302290032034d006b034d006b04f60061034d
006b034d006b034d006b0328005203280071032800240328003a0328002d
0328003703280066032800590328003b03280060022900b302290032034d
006b034d006b04f60061034d006b034d006b034d006b0328005203280071
032800240328003a0328002d0328003703280066032800590328003b0328
00600000fd1b0000fe2c0000fe980000fe130000fd730000fd8c0000fdb4
0000fe440000fe6f0000fe1f0000fe120000fdfe0000fe250000fdfb0085
fecd0000fe3b0000fdd10000fdd10000fdea0000fdf30000fda90000fe94
0000fe850000fde40000fdff0000fe980000fddb0000fda40000fdc40000
fdc30000fdb40000fdb40000fd980000fdd90000fd1b0000fd1b0000fd7f
0000fdb30000fbc10000fd9f0000fd650000fe5f0000fdda0000fe230000
fd880000fdfa0000fe590000fd1b0000fdfd0000fe490000fd480000fe35
0000fea00000fddb0000fdf90000fe120000fdfb0000fd8a0000fd8c0000
fd9d0000fd560000fde4000000000000fe3b0000fe3b0000fd8b0000fdfa
0000fe3b0000fe3b0000fd5f0000fe5f0000fdb80000fdd90000fdd90000
fda20000fdb80000fdd90000fe0d0000fe1b0000fe860000fe0b0000fdf2
0000fe230000fdf40000fdfe0000fd730000fe540000fe390000fdec0000
fdf6044f007b0477000904dcfff105a70067065f000d04590049053a0077
043f0069043d0074036f0064044b00790376009b03c7004d037500460472
002204600022048f000d043d00890380006902210005053a007703a80069
03a800410400000008000000046e000001a4000001550000007200000000
0000045a005a045a005a043b00f70211006c0371006c04db006c041f00b7
02f2000004d50077073c0054052d005a048c008d0491006f070700540516
004b058a00140670007904b5007f0542001506af004705c2007506ce006e
063a002805880079061d00770613003905f5007904d2005e03a30047056f
003e0555ffd90243ffe90509007904fc0006053b007203e30055044b003b
0527005f04c60093045a00220356002c03cf002b032e006c074c00690539
000f049b0079065c007905db001a04cf009403d3002803d30028047c001f
06760039058d006904e6008c0349005c0362ff560568008c0586000b06b4
007303bf005106b4007303bf0050075e007303bf00500538008705380060
053800600538008706b4007306b400730715007307150061077c007303e6
0064077c007303e6006406eb007306eb007306fa007303bf005106fa00b0
03bf005003e700640696007306960088072100730721006909870073079a
007304a2006604870073048700d404870073048700d40514007304860074
0679006d0679007d0551005a073b00bc0641007c0641004d06b4007306b4
0073037701360376005006b4007306b40073037701360377005106b4007a
0645006206b4007a06b4007a0663008406b4007a0663008406b4007a06b4
007a0701007308a200730701007a06ed007304b0005a06ed003304b0005a
0848007304b0005a05d9008705d9005505d9005505d90087071d0073071d
00b907d6007307d6007303e6006403e60064070e007303bf0051070e0073
03bf005106e600b006e6007306e1007f04bf006306e100a504bf006304bf
006304e0007404e0007404e0007404e0007404f6007f071700b3062e00aa
062e006004e00074079000730645006206e4008406b4007306b40073079a
0073071800730718007307fe007307210073072100730893007305070031
042d007704b2008904d500890506007a04c4004d04fc0091051f0091046e
008c04fc009304fc0093046e009306400118067f005a05fa009505fa0095
046e004d03dd0087038c00850516002305160023059f006e058700de0544
005205440052056b0075025800de02ff003903b600de045a003904b80034
04b80036057300a0057300a004b10063076300630a15006304cf006e0799
006e0a49006e0511006e050e006e0533006e0496009a0496009a027000b8
04be00ae05c8007b077b00950636009505e2009505b3007d05e300950675
006e057f004202ed00c805b2007e05fa009505fa009505fa009505fa0095
05fa009505fa009505e3009505fa009505e3009505fa009505f9009505fa
009505fa009505fa009505fa009505fa009505fa0095077b0095077b0095
05fa009505fa009505fa009505fa009505fa009505fa009505fa009506b6
009505fa009505fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505fa0095072000950720009503d500b405fa009505fa009505fa
009505fa009505fa009505fa009505fa009505fa009505fa009505fa0095
05fa009505fa009505fa009505dd009505dd009505dd009505dd009505e4
009505e4009505dd009505dd009505fa009505fa009505fa009505fa0095
05fa009505fa009505fa009505fa009505fa009505fa009504db009504db
009504db009505fa009505fa009505fa009505fa009505b900de05b900de
07f600a207f600a207f600a207f600a207f600a207f600a207f600a207f6
00a207f600a207d000c807d000c807d000c807d000c8056400de054b007c
054e007c03b80052054e007c03b80052042800de042800de05c200de0607
00de071e00de073d00de05c200de05c200de068300de073d00de046e005f
046e009705c8007c05c8008c05c8006b05c8006b0835008508350085073e
007c05c8007c033c006d04b8005204b8005004b80052058700de059a0059
0552003405520036062b00de062b00de039a0082024200ad042700500496
007506a300de060900de0609007a05b900b405b900b405c8007c04b80036
04b8003605bb008905bb0090061500c8061500c8057d00c8052f009505fe
009505fe009509eb009509eb0095060200950602009505fe009505fe0095
05de009505dd009505dd009505dd009505fa009505fa009505fa009505fa
009505fa009505fa009505e4009505e4009505ea009505ea009505fb0095
060b0095027c00c406da009504f200a004f200a005dd006d04fe00a60470
008c04fe009104fe00910470008c04fe009104fe009105dd009504fe0095
04700095051100950470009505d8008c02cd00e402cd002b02cd00e402cd
002b02e0007d02e0006a09d3047209d300e7061100ec061100ec061100ec
0611001e0611044f0611001e02cd004e02cd004e02cd004e02cd002502cd
01ad02cd0025057a0254057a00a9057a0254057a0254057a0025057a0254
057a002509d304720434000005c600d305c600d30be700850be7003504ed
000004ed000005ca006e05250019038500e40385002b02e0007d02e0006a
06f6006c06f6006c06f6006c059100b405db00be0648008c043f0064056e
00160554006f04b4007605c1006f04bd006f0487006f054a007605e4006f
02ea006f02d800320592006f0486006f06e3006c058d006c05ae00790507
006f05ae00790572006f04390063053b00510587005b052c001f07ca0025
04f3001504ef001b04a6005f0466004b04d9003d03de006a04e5006f045d
006a0356004d0451003d04e4004902a200580289001d04df004902950049
073d005804f2005804ac006a04e5004b04d9006f03cf005803ca0060030a
003404e5004f0453001d06770025043400100453001d03f300510511fff3
0540003904c60087058a003904ff003904e30039050a008705d300390308
0039030eff48059600390441003906cf003705dc00370569008704f60039
0569008705190039043c000f04c30046058300a60501005f079900690529
ffeb04d2006804bd000a047500690450005c03ae006904a3006903f80069
0466fff104e5001e0470005c0289008c02e0ff60046a005c0287008a06b5
0018049700180443006e04760018044f006903ce001703b2003203280075
04970018045a004605e900370442001e047a000703de0019039e001003ae
002e033d005f03e1002e036d002e035f002e038d005f0411002e021c002e
02a5000f03e6002e02f5002e04c3002e0419002e03c8005f0386002e03c8
005f038f002e030600290353002803f90093038c00370550003703d1001d
0365003703610028034b005a03230053029e005a0352005a02cc005a0319
000e0360000f0344005201d500730263000f0322005301da007104e90023
037200230312005a035400280323005a02c50023026a001e024e00640372
001e02c400270444002703170014035b001a02bd0014039e001003ae002e
033d005f03e1002e036d002e035f002e038d005f0411002e021c002e02a5
000f03e6002e02f5002e04c3002e0419002e03c8005f0386002e03c8005f
038f002e030600290353002803f90093038c00370550003703d1001d0365
003703610028034b005a03230053029e005a0352005a02cc005a0319000e
0360000f0344005201d500730263000f0322005301da007104e900230372
00230312005a035400280323005a02c50023026a001e024e00640372001e
02c400270444002703170014035b001a02bd00140511fff30540003904dd
003904e7000f04ff003904bd000a05d30039057100870308003905960039
0501000f06cf003705dc003704d2001e0569008705ba003904f600390571
008704db000f04c3004604fc003205d9005a0529ffeb0619006d056e000e
04e700b104cc006904d9000f0434000f044d006403a4005a03cc005a0432
001804800073021400570454005c0424000f0463000f0412000e03db004b
0443006e04be00230484000f04ae005a0375005a03ab0023040c0018056b
005f04a6ffd205a1001805ce005f0473006e03b9006904b1000f049d000a
057700630449006506640023039e001003ae002e0359002e036a000f036d
002e036100280411002e03c8005f021c002e03e6002e038c001004c3002e
0419002e0393003403c8005f0411002e0386002e03c8005f0359000f0353
0028039f00320446005303d1001d0477005f0400002a035f0055037a005a
03a4005303240010031d005a02a2005502c60053033c0023035a006e01c9
0067032000530311001a03880053030c000f02da00500312005a03780025
036f0050036a005a028e005502a5001b0311001e03f6005503940014042e
001e0443005a033d005502b7005a0399001e037500200407005a032b0069
04970025039e001003ae002e0359002e036a000f036d002e036100280411
002e03c8005f021c002e03e6002e038c001004c3002e0419002e03930034
03c8005f0411002e0386002e03c8005f0359000f03530028039f00320446
005303d1001d0477005f0400002a035f0055037a005a03a4005303240010
031d005a02a2005502c60053033c0023035a006e01c90067032000530311
001a03880053030c000f02da00500312005a03780025036f0050036a005a
028e005502a5001b0311001e03f6005503940014042e001e0443005a033d
005502b7005a0399001e037500200407005a032b006904970025054bfff3
05c900390505008706010039053f0039051c0039055f0087064e0039037c
0039035fff480623003904870039074e00370614003705dc0087057f0039
05dc008705930039048a000f04fd004605d000a60531005f07de0069058a
ffeb05140068050f000a04f8006904db005c040a00690526006904650069
0482fff1056a001e050e005c02f8008c031dff6004e5005c02f6008a076b
0018052d0018049d006e04f7001804d60069044b001704040032035b0075
052a001804cd0021064e0037049d001e04c8000704220019054bfff305c9
0039051500390569000f053f0039050f000a064e003905e60087037c0039
062300390531000f074e00370614003704f0001e05dc0087064e0039057f
003905e600870517000f04fd0046055c00320697005a058affeb06b4006d
05de000e056900b1055f0069056b000f04d3000f04a40064041f005a0423
005a04d0001804fe007302aa006704de005c0482000f0516000f0489000e
0421004b049d006e057c002304f8000f050b005a03d6005a041400230492
0018060d005f0541ffd2063800180666005f04dd006e03f90069053f000f
04fc000a061c006304b4006506fa002307230025056e001e04d0005a05e0
001e048a005005960000049900000777000003a3000004f2000a06f60000
04b9000008d4000007bd0000054c006405d200000535002e05e600000497
0025055e000d0625000c05720000086b00000693000005e7000c05800000
0526004b05eb000003d6004a0546004b0491002305df000003b4000003d6
fff605ae00000840000005fa000005b5000e04f9004b05dd0000044e0000
045b001505ed000005ec00000817000004cc000505d70000047500180787
002505e4001e0534005a066b001e04dc004e05fa0000051e0014080d0000
042900000560000a0760000005160000098200000818000005cf00690660
000005ad002e0699000004c7002505d0000d06a1000c05a8000008ae0000
06fa0000066d000c05b6000c0550004b06110000040f004a0570004b043a
005504e10023055800360605fffb03d200000437000505cf0000047c001b
08680000062200000563006206070015055b004b05fa0000047f0000046e
0022060e0000060e000008550000052b00050614000004cd001805bd003c
063000390661003e0549007d054b004206090072052d001305b4001404e4
00100801003c0628003c06700026062300350683002605fb006405b40047
056f00320619003507c600350510000f05c6003203e8007303fa002c02ee
006e03e700500334006e027200270400006e04070032022c0034022b0005
02b1002b02290039064a0000043dfffb03d80050041c002603f9006e02f2
001903590036027a00200449001a03dd002a060f00320354000d0416002b
0300003d059a000605db0079064700780519007904e5007905d800730363
0079033f0009061e007904d2007907440075061d007704ab0071056c0042
05a0005a05620016083b0016057100150546001204c10050052800300428
00690538006904b00068038f004f048e004b055b003f02fc005302e4fffc
0526003f02ef003f07af00530568005304ee0069053b004a0528006803f7
005303d9005e035a0025055b00490486000f06e7001d049e001704870010
044b00500677003c065d003905cf00640688003c05cf00640579004b0662
006405f90010055c001e056b001e0628001e052a001e086d0044068b003c
06a700260658003c06cd00260680004105fb006405f4004605dc0032065c
0035089300350582000f0633003c05a700140466007304570037033a006e
04450052038d006e02b700270462006e0458003802990017029b000f02ef
00280297003f06e0000a04ea000a044000580485001e045a006e03760014
0394003202ab002804d8001e048a00140681001403fb0009048b00140349
00380491000d04b700cc04230076052f00cc040000cc03dd00cc04cf0079
053a00cc024900cc0249ffe0049a00cc03d300cc065800cc057300cc053a
0079045f00cc053a0079049200cc03c90054041a0028051900b9047a0016
075d001a04410005044f00170414004b03ed004b046800ac0377006d0468
006d0402006d02ba003904030046043c00ac01ff00a301ffffca03ce00ac
01ff00ac066d00ac043c00ac0447006d046800ac0468006d030a00ac0348
004f02bf001e043c00a403b700170610001903a6000a03b7ffdf03800046
0527000d052000b90459006b058f00b9043200b9040d00b90536006b058c
00b9029600b90296ffe3050400b9040100b906cd00b905c600b9058c006b
04cb00b9058c006b050800b90417005204560028057100aa04f6001607d8
001b04b9000504c00017044600460459004b04c3009f03ac006004c30060
045b0060030900370475004b049e009f0254009f0254ffc90457009f0254
009f06dc009f049e009f049d006004c3009f04c300600359009f037a0043
02fb0028049e009704160017067b001c0414000a0416ffdb03ac00410509
000004db00400499006e054c0040048400600464004004c3006e054e0040
025d004002a6ff6005460040034e0041066c0040058700400558006e04b9
004a0558006e04a400400409000e04190021052a00780501009607e500a0
0585000f0459001e04bf000f0429004b0476004003c0006404d00064041f
0064037f004304aafff1043c00400259004002afff60045a0040025d0040
066d0040043c0040045b006404a4000f04720064036a00400348fff9032b
007d043c00760414007306700078047100000471ff6003e4000f059a0000
055b004004dc006e05cf004004bf0060049d0040052c006e05c6004002d0
00400301ff6005c30040039b0041070700400600004005bf006e0538004a
05bf006e053300400455000e046300210596007805780096085a00a005f3
000f04ca001e04fb000f049b004b04e600400405006405410064047c0064
03cc0043051afff104b5004002c600400303ff6004dc004002cc004006f3
004004b5004004c400640514000f04e3006403ce0040037cfff9035f007d
04b500760475007306d5007804df000004d1ff600424000f056e00160554
006f0487006f052d003204bd006f04a6005f05e4006f05c3007902ea006f
0592006f054a001606e3006c058d006c049a007205ae007905da006f0507
006f05ae007904a00030053b00510544000006ca007404f3001506bc002c
05e30046052d0042051b006a04e300ad0485ffe704a500660403006a039b
00680501fffc04c5007602d500a804e000540487002604fa00b50435000b
039f006404ac006a053f000b04b5008c03cd006904f700640407000b049b
ffe3062100640461ffe706850052066f006404b1006403e30069050c0006
0495000d0635006404a6006e06f2000b04c9007704c900a404c9007204c9
008504c9003a04c900a304c9007404c9008404c9006604c90063055b0081
03b3002c04720029047f003a04f60048047d00630515006e04430048052d
006f0515005a046e0081046e0091046e006c046e0069046e0051046e00a7
046e0083046e006b046e0067046e005b04e6008104e600b704e6007904e6
008804e6005b04e600bc04e6008304e6008804e6006c04e6007304cd00b0
04cd00bc04cd009a04cd00ad04cd005d04cd00c504cd00a904cd009204cd
009604cd0088046600280221000502840049026b000e01c2004e01b40015
01c2004e01b400150289008c02e0ff60021d008701b1ff75021d008701b1
ff7502f8008c031dff6003b4000003d6fff603d2000004370005022c0034
022b000502990017029b000f02fc005302e4fffc01ff00ac01ffffca0254
009f0254ffc90259004002afff6002c600400303ff6003080042029a004d
03340011036e003c040700580335006d045b001404a1009004a100b704a1
008804a1009d04a1005104a100af04a1008d04a100a604a100810469006d
05d200a905d200a905d200a9036600af0366002205a4007205a400720597
00140574008a0509008e05e2008a051f008a04bc008a057b008e0613008a
02ea008a02d4002d059d008a04c0008a07310088060b008805d6008e0515
008a05d6008e0583008a047c008a0532004705d00072056e002708300025
052600270521002704ca0070046b006704f000470402008205010082046b
008202d400670478005704f900570298006b027f001404b4005502890055
0769006b0507006b04ca00820503006104f0008203c6006b03e900780321
003a04fb0061049b002906f5003604610029049b002b0421006905970014
0574008a04b8008a055c0047051f008a04ca00700613008a05d6008e02ea
008a059d008a0574001707310088060b00880517008405d6008e05f6008a
0515008a04e3003c053200470566000606e600820526002706fb00490613
0055053e0082050500d104b6000804bc00800408008403a5008204f9000a
04eb009702c300d304d7005f0495002704fb00d3045d001d03bf008204ca
00820568001904ca00ac0530007e03eb00820430001904df000c064f0082
0471000c066a005d069a007e04df008003da00820494000d048f000d05fc
0082043d00740689000d04ac0086033701090337004005e5008405e50084
076400ac05d200a904ff009a04ff009a054c0008056d004204da008b05ba
0042051d004205020042053b008d060300420320004203db000005c30042
04600042070a0040060c00400595008b052c00420595008b05420042046c
002904ea004205c900c50537005807d8005c0581000d04ff005c04f30025
04ff008004ca0074040a0080051d00800457008004cd000d0548001b04f9
007402ce00a603c1001904d7007402d200a4077b00290532002904b60082
0509002d04ca0080043c002903df00310386008e0532002504860032068c
003c04ba002105110019043c001d0593000805b6004204fb0042050d0013
05620042053600250654004205510084034a004206110042053700130769
0040065e00400527003905e0008b05f700420599008b0572004204fb0013
052c0042054200400631006c0581000d0676007f05c50029050400960553
0080057d004f04be001404c6007e04080074043c007204d1002905110097
028b008204ca007404a8001d052c004f049900140455006904b600820548
00310526004d0536007a03e10074040e0027049b0025060900760558fffc
06560025067d007c04f2007e04260080056000210538001f061d007c04cf
008a070e00310298006b027f001402ce00a603c1001904c2009904c200b8
04c2009004c200a804c2005504c200c404c2009604c200b504c2009004c2
007d05fa00a905fa00a905fa00a9037600af03760032061a0087061a0087
060d002205e00099057100a40650009905810099050d009905ea00a40680
0099032c0099031f003d060b00990517009907af009906790099064900a4
057b0099064900a405e7009904e200a1058300480648008805df003608c9
003105930039059000390524007d04d0007d055f005c04610099056c0099
04ce00990326007b04dd006b0564006b02e2008002cb00220515006902d4
006907f700800574008005340099056f0074055f0097042100800446008d
0376004b05670074050b00400788004d04c5003b050b00400481007e060d
002205e000990508009905cd0059058100990524007d06800099064900a4
032c0099060b009905e9002407af00990679009905770094064900a40662
0099057b0099054100480583004805cd00190755008b059300390783005c
0690006705c10097057300ec053b0029052200950465009a03fc00990574
0019055700ae032c00ec05520074051d0036057300ec04be002e04240099
0534009905d70024053100c205a7009404450099046e00240548001906c3
009904e0001906e900700706009404df006e03da007004b4000b048f0008
061a00820461007406a1000f0513009d038b0126038b005205e5008405e5
00840824009f05fa00a9056a00b0056a00b005ef001a0609004b0550009c
065d004b059f004b0588004b05d3009c06ac004b0376004b045700190665
004b04da004b07d0004b06b9004b0634009c05c8004b0634009c05d7004b
04f6004305740042068400f105d2005a08b7005a064300300592005a058b
00420567009405250088044b009405730094049700940515001705890019
055c0087030100bd03ea001905240088030a00b9080e003905a70039050a
00940576004205250094048b003903f6003103c800a405a700310499002e
07000040051200210581002b047e002105ef001a0609004b057e004b059a
0019059f004b058b004206ac004b0634009c0376004b0665004b05d2001a
07d0004b06b9004b05dd00550634009c06ac004b05c8004b0634009c057e
00190574004205f1005207030088064300300753009c069000450588008b
05b4009405f900880527001a051c00940452008b048d0088054e00390580
00b402ee00a9052000880508002b05cb00880500001904ae0083050a0094
05b1003d05a20083059a00940431008b0457002c050800310680008b05df
002106db003106fe00940550008b0474009405e7003105ac0034069b0094
053300ac0788003d02e2008002cb0022030100bd03ea0019037100000489
0000078f00000371000004890000078f00000371000004890000078f0000
0371000004890000078f000002f2000002f2000005000334052503ab044f
0000044f000002f200000000fccb0000fcc80000fcc80423000005c50000
0000f7ca0000f7c90000f43404f600000000fc910000fcb10423000004ed
0000065a000005fa009505fa009505fa009505b700b4024200ae05fa0095
041d003205fa009505fa009505e3009505fe009505fe009505fe009505fe
009505fa00950645006c0498007d0499006a04690032066f0032087a0032
0a8500320319005f0319004b032c004b052a006e0319003c0319003c032c
003c052a004602d900e4030800e4033100e4035f00e402d9002d0308002d
0331002d035f002d039800b403f400aa04e000a005de00960398004103f4
004104e0004105de004103c000e403e400e4040e00e4043f00e403c0002d
03e4002d040e002d043f002d02e0007d02e0007d0315007d035c007d02e0
006a02e0003503150035035c003502d900e4030800e4033100e4035f00e4
02d9002d0308002d0331002d035f002d02d900e4030800e4035f00e4035f
00e402d9002d0308002d0331002d035f002d02cd00e402d900e4030800e4
033100e4035f00e402cd002b02d9002d0308002d0331002d035f002d02cd
004e02cd004e02cd004e02cd004e02cd002502cd002d02cd01ad02cd0025
05f100230452001f06010023061e00230624002305fe002306a9002206c7
002207710022082200220bcc002204c1006906740069084600690a6e0069
079c006909a200690c4300690a7700690cd000691040006904db006f0674
006908460069079c006909a200690c4300690a7200690cd0006910400069
0516006906740069096e0191051600690674006908460069051600690674
006908460069091301b50a9b001a10a600ad17310096081400690c120069
11310069175a0069033f000004890000078f00000e730000032100000471
0000078900000e6d0000033f000004890000078f00000e730000033f0000
04710000078900000e6d0000032100000489ffff078900000e6f00000321
000004890000078900000e6f00000321000004700000079000000e740000
0321000004700000079000000e7400000321000004700000079000000e74
00000321000004700000079000000e74000004f0000007f700000bbc0000
0ddd00001111000004f0000007f700000bbc00000ddd00001111000007f3
00000bb800000dd90000110d000007f300000bb800000dd90000110d0000
04f0000007f300000bb800000dd90000110d000004f0000007f300000bb8
00000dd90000110d000004ed000007f300000bb800000dd90000110d0000
0498007d04cd007d0502007d0498006a04cd006a0502006a0357005f0357
005f03b1005f03fa005f034300730357008703b1008703fa0087028800f7
029500f702a700f7043b00f7046600f704a000f707db005a07db005a079f
005a079f007309f80073096f0073096f0073096f0073096f0073096f0073
096f0073096f0073096f0073096f0073096f0073096f0073077c0073077c
007306ed007306ed007a08480073077c007306ed007306ed007a03d2005a
03d2005a05bd005a05bd005a070e0073070e0073070e0073070e00730858
007306b4007303be005003be005006eb007306eb00730858007308580073
0858007306eb007306eb007306eb007306eb0073070e0073070e0073070e
0073070e007305f8008705f8008705340087053400870534008705340087
063c008705ea0087063c008705ea0087059500870595008705ea008705ea
008705ea008705ea0087063c0087063c008706c6007306f6007306f60073
048200730482007303430078034300780677006d0677007d0677007d0677
006d053e004b053e007d061a007d061a007d06b4007a06b4007a06b4007a
06b4007306b4007306b40073075e007303e6006406b4007306b4007303f4
005103f4005106b400730377013606b400730376005006e600b006e60073
037700000377000006e600b006e60073037700510377005106fa007306fa
00b00377000a0377000a06fa007306fa00af037700510377005106b4007a
05b6005006b4007a05b6005006b4007a06b4007a06b4007a06b4007a06b4
007a06b4007a06b4007a06b4007a05b6005005b6005006b4007a06b40073
06b4007306b4007306b4007306b4007305c800730858007305c8007c061e
0089075e0073061e0073047300880473007304c8005004c800500a8700ad
110600c30a8700ad110600c30a8700ad110600c3082e00f00c6300fa082c
00f00c6300fa05db00be076d00be076d00be07ca003c0a11003c07ca003c
0a11003c09d900be0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f05d10000
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f057700820449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
05eb00b40449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0449
003f0449003f0449003f0449003f0449003f0449003f0449003f0449003f
0449003f0449003f0449003f0449003f0449003f0449003f0449003f0454
003f02cd00e402cd002b0b2300be0b2300be1132005a1132005a0f0900a1
053f008205ca0096057700820494005d04ce005e0270000006b10000075d
000006b1000005dc000005dc000005dc000006b10000075d000006b10000
05dc000005dc000005dc000003bf019904b0014002da0095036900b204a5
0095058600b2066d009507a300b2082b009509bf00b2075a00aa05390000
05390264056e0000056e0000039200e40392004206c200aa06c200aa06c2
00aa0539026404b000c904b000c904b000c908c8011b052503ab03210000
0321008803370000033700b004340000033700b00337000001c9000002c1
000002c100000304000003040000073f00aa01b6000001b70000025a0000
025a00000296000002c40000022e00000270000001c5000002cf00000814
00690c12006911310069175a0069074c00370b7b003c074c00370b7b003c
076d00be0b2300be076d00be0b2300be0258000006410073064100000673
00730673000004ae007a04ae000004ae007a04ae000000f700000000fe70
0000fd9f04910000065e0000035200b4035200260319005f0319003c02cd
00e402cd002b03ec00b003ec004202ec00e302ec002d036400610364003e
049700a804970042031200e30312002d03fc006503fc00410574009d0574
0041034400e30344002d04c2006b04c2004502ec00e402ec002d02ec00e4
02ec002d02ec00e402ec002d03d200e403d2002d029100f70521015b0312
00e40312002d031200e40312002d031200e40312002d03f600e403f6002d
02a200f704cc00f7034400e40344002d034400e40344002d034400e40344
002d042600e40426002d02b900f7050e00f702c500f7054e00f700>
<00000000000000ec000000ec000000ec000000ec000000ec000000ec0000
00ec000000ec000000ec000000ec000000ec000000ec000000ec000000ec
000000ec000000ec000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000001fa000001fa0000
01fa000001fa000001fa000001fa000001fa000001fa000001fa000001fa
000001fa000001fa000001fa000001fa000001fa000002a6000002a60000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec000003ec000003ec
000003ec000003ec000003ec000003ec000003ec000003ec000003ec0000
03ec000003ec000003ec000003ec000003ec000003ec00010000127200c0
002d0064000500020010002f00650000093f10e8000300010000002f023a
000000000000000d02980000000000000000000e006c0298000000030000
0000006403040000000300000001001803680000000300000002000e0380
00000003000000030030038e000000030000000400180368000000030000
0005001803be0000000300000006001603d6000000030000000700fa03ec
0000000300000008002a04620000000300000009003204e6000000030000
000a070a0518000000030000000b00560c22000000030000000c00280c78
000000030000000d029c0ca0000000030000000e006c0298000100000000
000000320f3c0001000000000001000c0f6e000100000000000200070f7a
000100000000000300180f810001000000000004000c0f6e000100000000
0005000c0f990001000000000006000b0fa50001000000000007007d0fb0
000100000000000800150feb00010000000000090019102d000100000000
000a03851046000100000000000b002b13cb000100000000000c001413f6
000100000000000d014c140a000100000000000e00361556000300010409
0000006403040003000104090001001803680003000104090002000e0380
00030001040900030030038e000300010409000400180368000300010409
0005001803be0003000104090006001603d6000300010409000700fa03ec
0003000104090008002a04620003000104090009003204e6000300010409
000a070a0518000300010409000b00560c22000300010409000c00280c78
000300010409000d02980000000300010409000e006c02980059006f0075
0020006d0061007900200075007300650020007400680069007300200066
006f006e00740020006100730020007000650072006d0069007400740065
00640020006200790020007400680065002000450055004c004100200066
006f00720020007400680065002000700072006f00640075006300740020
0069006e0020007700680069006300680020007400680069007300200066
006f006e007400200069007300200069006e0063006c0075006400650064
00200074006f00200064006900730070006c0061007900200061006e0064
0020007000720069006e007400200063006f006e00740065006e0074002e
00200059006f00750020006d006100790020006f006e006c007900200028
0069002900200065006d0062006500640020007400680069007300200066
006f006e007400200069006e00200063006f006e00740065006e00740020
006100730020007000650072006d00690074007400650064002000620079
002000740068006500200065006d00620065006400640069006e00670020
007200650073007400720069006300740069006f006e007300200069006e
0063006c007500640065006400200069006e002000740068006900730020
0066006f006e0074003b00200061006e0064002000280069006900290020
00740065006d0070006f0072006100720069006c007900200064006f0077
006e006c006f006100640020007400680069007300200066006f006e0074
00200074006f002000610020007000720069006e0074006500720020006f
00720020006f00740068006500720020006f007500740070007500740020
00640065007600690063006500200074006f002000680065006c00700020
007000720069006e007400200063006f006e00740065006e0074002e0068
007400740070003a002f002f007700770077002e006d006900630072006f
0073006f00660074002e0063006f006d002f007400790070006f00670072
0061007000680079002f0066006f006e00740073002f0064006500660061
0075006c0074002e006100730070007800a9002000320030003000360020
004d006900630072006f0073006f0066007400200043006f00720070006f
0072006100740069006f006e002e00200041006c006c0020005200690067
006800740073002000520065007300650072007600650064002e00430061
006d00620072006900610020004d0061007400680052006500670075006c
00610072004d006900630072006f0073006f00660074003a002000430061
006d0062007200690061003a002000320030003000360056006500720073
0069006f006e00200031002e0030003200430061006d0062007200690061
004d00610074006800430061006d00620072006900610020006900730020
006500690074006800650072002000610020007200650067006900730074
0065007200650064002000740072006100640065006d00610072006b0020
006f007200200061002000740072006100640065006d00610072006b0020
006f00660020004d006900630072006f0073006f0066007400200043006f
00720070006f0072006100740069006f006e00200069006e002000740068
006500200055006e00690074006500640020005300740061007400650073
00200061006e0064002f006f00720020006f007400680065007200200063
006f0075006e00740072006900650073002e00410067006600610020004d
006f006e006f007400790070006500200043006f00720070006f00720061
00740069006f006e00430061006d00620072006900610020006800610073
0020006200650065006e002000640065007300690067006e006500640020
0066006f00720020006f006e002d00730063007200650065006e00200072
0065006100640069006e006700200061006e006400200074006f0020006c
006f006f006b00200067006f006f00640020007700680065006e00200070
00720069006e00740065006400200061007400200073006d0061006c006c
002000730069007a00650073002e00200049007400200068006100730020
00760065007200790020006500760065006e002000730070006100630069
006e006700200061006e0064002000700072006f0070006f007200740069
006f006e0073002e00200044006900610067006f006e0061006c00200061
006e006400200076006500720074006900630061006c0020006800610069
0072006c0069006e0065007300200061006e006400200073006500720069
006600730020006100720065002000720065006c00610074006900760065
006c00790020007300740072006f006e0067002c0020007700680069006c
006500200068006f00720069007a006f006e00740061006c002000730065
0072006900660073002000610072006500200073006d0061006c006c0020
0061006e006400200069006e00740065006e006400200074006f00200065
006d00700068006100730069007a00650020007300740072006f006b0065
00200065006e00640069006e006700730020007200610074006800650072
0020007400680061006e0020007300740061006e00640020006f00750074
0020007400680065006d00730065006c007600650073002e002000540068
006900730020007000720069006e006300690070006c0065002000690073
0020006d006f007300740020006e006f007400690063006500610062006c
006500200069006e00200074006800650020006900740061006c00690063
007300200077006800650072006500200074006800650020006c006f0077
006500720063006100730065002000630068006100720061006300740065
007200730020006100720065002000730075006200640075006500640020
0069006e0020007300740079006c006500200074006f0020006200650020
006100740020007400680065006900720020006200650073007400200061
007300200065006c0065006d0065006e007400730020006f006600200077
006f00720064002d0069006d0061006700650073002e0020005700680065
006e002000430061006d0062007200690061002000690073002000750073
0065006400200066006f0072002000630061007000740069006f006e0073
002000610074002000730069007a006500730020006f0076006500720020
0032003000200070006f0069006e0074002c002000740068006500200020
0069006e007400650072002d006300680061007200610063007400650072
002000730070006100630069006e0067002000730068006f0075006c0064
00200062006500200073006c0069006700680074006c0079002000720065
0064007500630065006400200066006f0072002000620065007300740020
0072006500730075006c00740073002e0020005400680065002000640065
007300690067006e002000690073006e002700740020006a007500730074
00200069006e00740065006e00640065006400200066006f007200200062
007500730069006e00650073007300200064006f00630075006d0065006e
00740073003a002000540068006500200072006500670075006c00610072
002000770065006900670068007400200068006100730020006200650065
006e00200065007800740065006e00640065006400200077006900740068
002000610020006c006100720067006500200073006500740020006f0066
0020006d00610074006800200061006e006400200073006300690065006e
00630065002000730079006d0062006f006c0073002e0020005400680065
00200047007200650065006b00200061006e006400200043007900720069
006c006c0069006300200068006100730020006200650065006e00200064
0065007300690067006e0065006400200075006e00640065007200200063
006c006f007300650020007300750070006500720076006900730069006f
006e0020006f006600200061006e00200069006e007400650072006e0061
00740069006f006e0061006c0020007400650061006d0020006f00660020
0065007800700065007200740073002c002000770068006f002000610069
006d0065006400200074006f002000730065007400200061002000680069
00730074006f0072006900630061006c0020006e00650077002000730074
0061006e006400610072006400200069006e0020006d0075006c00740069
002d00730063007200690070007400200074007900700065002000640065
007300690067006e002e0068007400740070003a002f002f007700770077
002e006d006900630072006f0073006f00660074002e0063006f006d002f
007400790070006f006700720061007000680079002f006300740066006f
006e007400730068007400740070003a002f002f007700770077002e0066
006f006e00740073002e0063006f006d0059006f00750020006d00610079
00200075007300650020007400680069007300200066006f006e00740020
006100730020007000650072006d00690074007400650064002000620079
0020007400680065002000450055004c004100200066006f007200200074
00680065002000700072006f006400750063007400200069006e00200077
00680069006300680020007400680069007300200066006f006e00740020
0069007300200069006e0063006c007500640065006400200074006f0020
0064006900730070006c0061007900200061006e00640020007000720069
006e007400200063006f006e00740065006e0074002e00200059006f0075
0020006d006100790020006f006e006c0079002000280069002900200065
006d0062006500640020007400680069007300200066006f006e00740020
0069006e00200063006f006e00740065006e007400200061007300200070
00650072006d006900740074006500640020006200790020007400680065
00200065006d00620065006400640069006e006700200072006500730074
00720069006300740069006f006e007300200069006e0063006c00750064
0065006400200069006e0020007400680069007300200066006f006e0074
003b00200061006e006400200028006900690029002000740065006d0070
006f0072006100720069006c007900200064006f0077006e006c006f0061
00640020007400680069007300200066006f006e007400200074006f0020
00610020007000720069006e0074006500720020006f00720020006f0074
0068006500720020006f0075007400700075007400200064006500760069
0063006500200074006f002000680065006c00700020007000720069006e
007400200063006f006e00740065006e0074002e000d000aa92032303036
204d6963726f736f667420436f72706f726174696f6e2e20416c6c205269
676874732052657365727665642e43616d62726961204d61746852656775
6c61724d6963726f736f66743a2043616d627269613a2032303036566572
73696f6e20312e303243616d627269614d61746843616d62726961206973
20656974686572206120726567697374657265642074726164656d61726b
206f7220612074726164656d61726b206f66204d6963726f736f66742043
6f72706f726174696f6e20696e2074686520556e69746564205374617465
7320616e642f6f72206f7468657220636f756e74726965732e4167666120
4d6f6e6f7479706520436f72706f726174696f6e43616d62726961206861
73206265656e2064657369676e656420666f72206f6e2d73637265656e20
72656164696e6720616e6420746f206c6f6f6b20676f6f64207768656e20
7072696e74656420617420736d616c6c2073697a65732e20497420686173
2076657279206576656e2073706163696e6720616e642070726f706f7274
696f6e732e20446961676f6e616c20616e6420766572746963616c206861
69726c696e657320616e6420736572696673206172652072656c61746976
656c79207374726f6e672c207768696c6520686f72697a6f6e74616c2073
65726966732061726520736d616c6c20616e6420696e74656e6420746f20
656d70686173697a65207374726f6b6520656e64696e6773207261746865
72207468616e207374616e64206f7574207468656d73656c7665732e2054
686973207072696e6369706c65206973206d6f7374206e6f746963656162
6c6520696e20746865206974616c69637320776865726520746865206c6f
776572636173652063686172616374657273206172652073756264756564
20696e207374796c6520746f206265206174207468656972206265737420
617320656c656d656e7473206f6620776f72642d696d616765732e205768
656e2043616d62726961206973207573656420666f722063617074696f6e
732061742073697a6573206f76657220323020706f696e742c2074686520
20696e7465722d6368617261637465722073706163696e672073686f756c
6420626520736c696768746c79207265647563656420666f722062657374
20726573756c74732e205468652064657369676e2069736e2774206a7573
7420696e74656e64656420666f7220627573696e65737320646f63756d65
6e74733a2054686520726567756c61722077656967687420686173206265
656e20657874656e64656420776974682061206c6172676520736574206f
66206d61746820616e6420736369656e63652073796d626f6c732e205468
6520477265656b20616e6420437972696c6c696320686173206265656e20
64657369676e656420756e64657220636c6f736520737570657276697369
6f6e206f6620616e20696e7465726e6174696f6e616c207465616d206f66
20657870657274732c2077686f2061696d656420746f2073657420612068
6973746f726963616c206e6577207374616e6461726420696e206d756c74
692d73637269707420747970652064657369676e2e687474703a2f2f7777
772e6d6963726f736f66742e636f6d2f7479706f6772617068792f637466
6f6e7473687474703a2f2f7777772e666f6e74732e636f6d596f75206d61
7920757365207468697320666f6e74206173207065726d69747465642062
79207468652045554c4120666f72207468652070726f6475637420696e20
7768696368207468697320666f6e7420697320696e636c7564656420746f
20646973706c617920616e64207072696e7420636f6e74656e742e20596f
75206d6179206f6e6c792028692920656d626564207468697320666f6e74
20696e20636f6e74656e74206173207065726d6974746564206279207468
6520656d62656464696e67207265737472696374696f6e7320696e636c75
64656420696e207468697320666f6e743b20616e6420286969292074656d
706f726172696c7920646f776e6c6f6164207468697320666f6e7420746f
2061207072696e746572206f72206f74686572206f757470757420646576
69636520746f2068656c70207072696e7420636f6e74656e742e68747470
3a2f2f7777772e6d6963726f736f66742e636f6d2f7479706f6772617068
792f666f6e74732f64656661756c742e617370780000b9002001feb40918
014a20b801fab40918014a20b801f9b40918014a20b801f8b40918014a20
b801f7b40918014a20b801f6b40918014a20b801f0b40918014a20b801ef
b40918014a20b801eeb40918014a20b801edb40918014a20b801ecb40918
014a20b801ebb40918014a20b801e6b40918014a20b801e5b40918014a20
b801e4b40918014a20b801e3b40918014a20b801e2b40918014a20b801e1
b40918014a20b801e0b40918014a20b801d3b40918014a20b801d2b40918
014a20b801d1b40918014a20b801cfb40918014a20b801ceb40918014a20
b801cdb40918014a20b801ccb40918014a20b801a0b40918014a20b8018f
b40918014a20b8018eb40918014a20b8018ab40918014a20b80188b40918
014a20b80187b40918014a20b80186b40918014a20b8015bb40918014a20
b8015ab40918014a20b80159b40918014a20b80158b40918014a20b80154
b40918014a20b80150b40918014a20b8014cb40918014a20b8014bb40918
014a20b8014ab40918014a20b80136b40918014a20b80130b40918014a20
b8012fb40918014a20b8012db40918014a20b8012cb40918014a20b80109
b40918014a20b80107b40918014a20b8010540ff0918014a20f40918014a
20f20918014a20f10918014a20f00918014a20ef0918014a20ed0918014a
20ec0918014a20ea0918014a20e50918014a20e40918014a20e30918014a
20e10918014a20de0918014a20da0918014a20d80918014a20d30918014a
20cd0918014a20cc0918014a20ca0918014a20c90918014a20c80918014a
20c60918014a20c40918014a20c20918014a20c00918014a20bf0918014a
20bd0918014a20b30918014a20b10918014a20af0918014a20a50918014a
20a40918014a20a00918014a208e0918014a208d0918014a208c0918014a
208b0918014a208a0918014a20890918014a20850918014a20840918014a
2083091801403e4a20800918014a207f0918014a207e0918014a207d0918
014a20620918014a20510918014a20500918014a20480918014a20420918
014a200e0918014a5f414803ea0001008003f4009003f400a003f400b003
f400c003f400d003f400e003f400f003f40008002f0433003f0433004f04
33005f0433006f0433007f0433008f0433009f043300af043300bf043300
0a001f0434002f0434003f0434004f0434005f0434006f0434007f043400
0700cf042300df042300ef04230003000f0423001f0423003f0423005f04
23009f0423402305f0e201b0fdc0fd02c0fdd0fde0fdf0fd04d0fde0fdf0
fd03c0ffd0ffe0fff0ff0470410a0425000100c0042500d0042500e00425
00f00425400c04e0bef0be02e0bef0be020f41110421003f042100020010
02580001000f025800e002580002000f040a0001000f0408b4010f26010f
411b04070001000f04060001007f02170001000f029c001f029c002f029c
003f029c004f029c005f029c000600df029c00ef029c00ff029c405303df
e016171cd4d516171c7b7c161b7b7c19d1d216171c767716171c6d701617
1c6c6f16171c6b6e161b6b6e7f721a747514151c676a14151c666914151c
6568141b656885711a1973167a4319217943192119413102920099029200
02001c0292002c029200020299029a029b000c028d028e028f000c028a02
8b028c000c001b0299008b02990002000f0299009f029900bb029900db02
99000402a5028b02a7000d029f029a02a1000d029c028e029e000dffe802
8eb2142339b9ffe8029ab2142339411a0282027d0008002b0281027c0005
002b027e027a0004002b027d027a0004002b027a02570005002b02770267
0005002b02670257b2052b20b80270b21b2039bd027202570004002b026e
0257b2042b20b80257b331333909414102710019027100aa025700b80257
00040069027100da025700e802570003028402790006002b028002790004
002b027f02790008002b027b02790008002b027902560006002b02780266
0000002b027602660008002b027502660008002b027302660008002b0266
02560006002b027402560000002b027302560000002b026f0256b2072b29
415002560001008602560001025d025e025f000c025102520253000c024e
024f0250000c000b024e000b0251000a025d003b024e0059025100760251
0075025d009b024e00b5025d00d9024e000a0269024f026b000d0263025e
0265000d026002520262000d0269003c0263003c0260003c025d003c0251
003c024e003c0244023c0005002b024302110002002b0240023c0005002b
023e02110004002b023d0211b2042b464115023c00010046023c00c6023c
0002023b02110007002b023902110006002b023702110004002b02210211
b2072b20b80233b21316394116022f02110004002b022e02110004002b02
2d02110005002b022c02110004002b022b02110004002b022a0211b2052b
474142021100010005021100a502110002003b0233004b02330064021100
7402110004024202100007002b024102100005002b023f02100002002b02
3a02100007002b023802100007002b023602100007002b02350210000700
2b022002100007002b023402100005002b023102100005002b0230021000
07002b022902100007002b02280210b2072b8a416e02100001001a021000
b902320002021702180219000c020b020c020d000c02080209020a000c00
0b0208000b020b000a0217003b02080059020b0076020b00750217009b02
0800b5021700d90208000a022302090225000d021d0218021f000d021a02
0c021c000d0223003c021d003c021a003c0217003c020b003c0208003c01
53014d0002002b014e014d0002002b0156015c0004002b0155015c000400
2b0157015c0002002b01da01d4000a002b01d801d4000a002b01e501e000
05002b01e101e00005002b01e001eb0005002b01ef01eb0002002b01ec01
ebb2052b40b801ebb2090a39b9ffc00104b2313139b9ffc00104b21b2039
b8ffc0b4c71f203940b80103b22c2c39ba010301000100b21f2223b90103
0100b3c01e1e23ba010301000100b21d1d23b901030100b3c01c1c23ba01
0301000100b21b1b23b901030100b3c0141a23b901030100b3800b1323b9
01030100b340090a23b901020101b340508b23b901010100b340508b2341
0a01020100004f001f01010100004f001fffc00100b2505539b9ffc00100
b323233940b80100b71d1e3940e81b1b39b8ffc0b4e724253956b8010840
1301ddd8052b3bd64bd60240b00b0d39c1c0052bb8ffc040379f13133940
9c2f30399c9a012b9b9a052b9a91042ba999042b9992032b40c52c313992
91032b889198910209631863c7630320630d0f39b8fff0b4471f2539cbb8
010a401c019895012b379e019695022b1897262a3917970110953f4039d9
9501bc0136012c0003002b0130b2cd042bb8012fb2cc042bb8012db2cd03
2bb8012cb2cd042bbc014c014a0003002b014ab27f052bb9015b0154b204
2b0f41190154001f01540002018601880002002b018701880004002b0189
01880004002b0188018f0003002b018e018f0004002b018fb385052b3f41
0c01a0000101ce01cc0003002b01d201cc0006002b01d101ccb2062b40b8
0107b2323239b80107b2af032bb8ffc0b3de1e2039b8ffc04011dc181a39
c9ca032bcac8042b40c8212239b8ffc0b3c8151739b8ffc0b3c6242539b8
ffc0b3c6161a39b8ffc04023bf2d31395051032b40511b1b39e5cc042be4
e3032b40e32a2a39cdcc052b40cc424439b8ffc0b3cc272739b8ffc0b7cc
171a39c2ea012bb80109b2da032bb8ffc04033ea252539dfea0140c41b1d
39b3b1052bb1c0052b40c03d3d39c0af042bd3af052baf7d052b20da1216
39c5bd01208e01108e01b8ffc0b38b363839b8ffc0b38b272b39b8ffc040
328b171a398c8d052b8d8a042b898a052b8a7f052bf4ef032bf2ef052bf1
80022bf0a0042bef85052b40ec32343940ec1b1d39b8ffc0b3a0515239b8
ffc0b3a0454739b8ffc0b3a0383c39b8ffc0400ba02c3139dfa001a08002
2bb8ffc0b394313139b8ffc040d480181a39817f012b7e7d052b7d7f052b
ed7f052bd87f017f85251f8885012b8785012b8485052b8385052b298539
854985036685014685013685012685011b37151836151535151234150f33
150c3215093115063015032f15002e15f9fa0f20f930f90226270e28270f
2a2b0e2c2b0f22230e24230f1e1f0e201f0f00051005023c3d0e0b3c743c
993c030f10110c090a0b0c0607080c0304050c0001020c0603641f702a01
0f2a010b0f4b0f020b003b0044037403ab00db0f060b000b030b0f3b003b
0959035b0976039b009b09990fd9000cb9010b010c402a0f1b011d0d1807
1a0d1510170d1204140d2ff96ff99ff9a0f9cff9d0f9063ff940f9aff9b0
f9e0f90500b8010bb22ff92fba010b003f010b402e04fb3cf93cf73cf53c
2c3c2a3c283c263c243c223c203c1e3c1b3c183c153c123c0f3c093c063c
033c003c50335401b0124b004b5442b013014b004b5342b0332b4bb80320
52b0322b4bb009505b58b101018e59b0332bb00288b8010054b00488b802
0054b012435a5b58b80119b101018e851bb900010100b04b60858d592b2b
1db0644b5358b0801d59b0324b5358b0901d59004bb03251b01b23422b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7374752b2b2b2b2b737475
73742b2b2b2b2b2b732b732b2b2b2b2b2bb1282645b02a4561b02c456044
2b2b732b2b2b2b2b2b2b2b2b2b2b0173737373742b2b2b2b2b742b2b2b2b
2b2b2b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b7475732b2b2b2b2b
2b2b2b732b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
732b2b2b2b2b2b732b2b2b012b2b2b2b2b00742b742b2b742b732b2b7474
2b2b2b2b2b2b2b2b2b2b2b732b742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b002b2b2b2b2b2b2b2b2b2b2b2b2b002b2b2b2b2b2b2b2b2b73
2b2b2b0173742b2b2b2b2b2b2b2b2b2b2b2b2b007374752b2b2b2b2b2b2b
2b2b2b2b73742b2b2b2b2b002b2b2b2b2b2b2b2b2b732b2b2b0173742b2b
2b2b2b2b2b2b2b2b2b2b2b0073742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
73742b2b2b0173742b2bb018b03f4b53422b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2bb109322b4bb0505242b002435c4bb064524bb01e505b60b01a2342
4bb0c8524bb036505bb00c23420073747373737373737374737374737573
73747573737473737373b100024354b102024354b1060243545b5b584163
01fe006401fa006401f9006401f8006401f7006401f6006401f0006401ef
006401ee006401ed006401ec006401eb006401e6006401e5006401e40064
01e3006401e2006401e1006401e0006401d3006401d2006401d1006401cf
006401ce006401cd006401cc006401a00064018f0064018e0064018a0064
018800640187006401860064015b0064015a006401590064015800640154
006401500064014c0064014b0064014a00640136006401300064012f0064
012d0064012c006401090064010700640105406964f464f264f164f064ef
64ed64ec64ea64e564e464e364e164de64da64d864d364cd64cc64ca64c9
64c864c664c464c264c064bf64bd64b364b164af64a564a464a0648e648d
648c648b648a64896485648464836480647f647e647d6462645164506448
6442640e642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b592b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
00>
[1005 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

2 0 3 <> PBAAAA+CambriaMath AddT42Char 
2 236 16 <000100750000060d055500360066403b341940091248191933250b0e2703
242524a6440d2500313331a64435171b033303191834180f014d34341f06
ed161735031212381a1b33031f802b2fe1173212392f1733e112392f2b33
33003f17332b110033182f332b11001733111239182f2b333130010e0315
11141e02171521353e023511341237230123012316121511141e02171521
353e023511342e02273521010121060d2c27170b0915292efe5f392c1009
0611fe7473fe901105090915292efe933e2a0d0a17262e0165015f018201
5205240b16214245fc9f433e24180c31310e244651017f97013539fc2103
ef3dfec0a9fe92433e24180c31311027484a0361453f23150d31fc3303cd
>PBAAAA+CambriaMath AddT42Char 
2 506 139 <00020053000001e90544000300190057402a17041904a744191511aa1010
0fa744100f02637003010f03df03020f035f03df0303030183021385020a
b8ffe0b30f014d0ab8ffc0b310014d0a2f2b2bc4e110e1002f5d715ded3f
2b0018104de53f2b110033313001152335033e033511342e022735373311
141616171521017fb8662721170d0418312de93d102d33fe780544c2c2fa
ed0c1220424601b4404e2f17083509fd355643230d31>PBAAAA+CambriaMath AddT42Char 
2 678 141 <0001003f0000043c059700400089b90012ffe8b30f014d13b8ffe8b30f01
4d14b8fff0403d0f014d2a2e3d20171b05152403294002001200020c0400
000f191c31032e2f2ea7441b2f150f0ea7440f0f3e3da7443e0040010e11
15192405002a8536b8ffc0b310014d362f2be1321732003f3f2b00183f2b
00183f332b110017331239182f5f5e5d1acd173311333311123931302b2b
2b0133323736363736363736353426273521150606070701161617152135
36363534262627272e02232315141616171521353e033511342e03273537
33016c202115193c372e2f0908252a01af2e6837e60120325130fe801a19
0b222d77221d201b38102d33fe7332271107030d172733f13c022d07092b
332b3c1915151e22063131094034dafe88423f0a31310311140f1d323ea0
2d1c0cf05643230d31310d1c2743360345604c351e1209340a00>PBAAAA+CambriaMath AddT42Char 
2 0 0 <000400be0000048605540028002c00300034004b4025152f3428292c002c
1d0b312e342c0b2e2e0b2c3404353600292b30331213130e18182e310300
3fcd322fcd322f3fddd6cd3211120117392f2f2f2f10cd10cd113310cd32
10ddc631300135343e02373e0335342623220e02072335363633321e0215
140e02070e031515171523350111211101112111023706162a2417261b0f
413e2030241909603c894346633e1c0f243c2c20261507129001fcfd0603
61fc3801e71616252a3527192f3339234b521424321e821e2e1d33462926
3e3d462d212c27281c066ea1a1fee4049afb6604f7faac055400>PBAAAA+CambriaMath AddT42Char 
PBAAAA+CambriaMath /CharStrings get begin
/space 3 def
/M 16 def
/i 139 def
/k 141 def
end
PBAAAA+CambriaMath /Encoding get
dup 32 /space put
dup 77 /M put
dup 105 /i put
dup 107 /k put
pop
end
%ADOEndSubsetFont
/GCLSWX+CambriaMath /PBAAAA+CambriaMath findfont ct_VMDictPut
/GCLSWX+CambriaMath*1 
[32{/.notdef}rp /space 44{/.notdef}rp /M 27{/.notdef}rp /i /.notdef /k 
148{/.notdef}rp]
GCLSWX+CambriaMath nf
GCLSWX+CambriaMath*1 [14.0874 0 0 -14.0607 0 0 ]msf
103.051 123.021 mo
(M )
[11.4813 0 ]xsh
GCLSWX+CambriaMath*1 [10.2384 0 0 -10.219 0 0 ]msf
115.045 125.945 mo
(ik)
[2.84628 0 ]xsh
0 0 0 1 cmyk
%ADOBeginSubsetFont: HIBBAA+Arial-BoldMT Initial
ct_T42Dict begin
-0.625 -0.375 2 1.008
 256 array 0 1 255 {1 index exch /.notdef put} for  /HIBBAA+Arial-BoldMT
Type42DictBegin
[<00010000000c000c000c000c4f532f320e0b3397000000cc000000566376
7420ef1f94cc000001240000073a6670676d08e8ba2800000860000005d7
676c796659ee3ca4000070c8000013a668656164cee221a800000e380000
003668686561127e12ff00000e7000000024686d7478a006329b00000e94
00001a286c6f6361007b7d7a000028bc00001a2c6d6178700d8312030000
42e8000000206e616d65cc67f6d30000430800001d4f7072657041216403
000060580000106f67646972000000000000000000000000000103d402bc
00050000059a05330000011b059a0533000003d1006602120805020b0704
02020202020400007a878000000000000008000000004d6f6e6f00200020
fffc05d3fe510133073e01b2400001ffffff0000000005ba001c05ba001c
05a7001c0426001c0000ffe40000ffe40000ffe4fe69ffe405ba001cfe69
ffe402ea0000011d0000011d000000000000000000b200ac00d701280120
00b301fa001700f8011901310049000400f7000300af00fd009500140054
00960112002400160055004901040119012b008c019bff76ffe9003d0092
00a2ffb70182ffaa0016008f00c600f8001c00de04010037004e00550055
006500e903e50059ff9a00080087000b003b00520116006100d600d600f5
00000093009400be017cfff80004001400820092003c00410041ffc1fffc
002a008c049005d809b5009100bb0106ff63ff69001e0022008a022bffd6
ffdf0026005900a300ac0104012b01c004480021006b00850098011903c6
006b009500a400fe010c025d034305bf000000490056006e0077008a00aa
00ca0112015005d805f0ff7bffe70006001300280061006900e90135014d
02a5040cff3effda005b00b900c801190119011901c0045b04a7055bfe3f
ff9dffc2001500b7010a01bc01c10532058efd81ffa1ffae000c00260031
003d004e00560062008300c100c900f100f2027fff7f00480053007700c5
011d01200126012801d60219027e027e03d3002e0041005d006b0075009f
00b000b200ba00bb00bd00d600db00e000e50114011b014a0162019101f2
020c026402cf039b03b403d4040104a9001600230025002a007400a500b6
00cc00cd00cf0105012001300150016a016f0197019d01e002b002ec02f7
0408048304fb04fd0526fee0fefbff4efff50018001a004c007a007f0091
00a300b300b400ce00d500f200f300f601100138016801a101b001e001ec
02090222024f0270029602a502ad034e039103c104350442046b04cd04da
0586058b076107fefca6fe93feadfed1ffb7ffd10003000e001800260046
00690081008f00a500bf00d300d500d900dd00e20119012b0138013b015a
015e016801730188019401ad01c501d101ea01f20200020002000222023b
0244024f026f0272027e02820293029402a502cf02cf02d002da02dd02eb
02f5030503220336037103a103b003b803d003e604100426042e0431044f
045a04ff053205320547055305a805ab05c205f0063c0664067006e80782
078408ccfd2afddefe00fe68feb0feb3ffaa00080059007a0091009e00a2
00af00b400bb00ca00cc00ce00d900e000f40114011a01210127012b0139
0146014b014d0157015c01650182018701920198019b01a201ae01c501c5
01d102070222022b024102530261026502840287028d02b402b402ba02c9
02d602d802ed02f503170323032b03310349035a035b036e03710374037e
03840391039103aa03cf03d303e703e803ed04080417041e0475047a0499
04a704b404d1054c056d056d05a205bf05c005d105fc05fc0602061a061c
062f066a06a806e2070607360750078907d407f30870011c012a011a0120
0000000000000000000000000219000b001e02aa0214047f01ed0000001d
0104000f0091002b01880153011201f3003f03fe0168010e047f01ed036e
03150219041300000000064004b00000027401bb003501c5007f06020301
000004e000b201dc02e004c3023d00d50160011904a7036e05ca022100ab
0426009002bc02bb014200b4023c0256029c030001e501a800e5006b0078
0094016b017300ab01ed013a017d0137017f00d4021603530184003cffa2
02040109014901f0006e031500810464005e000000000000000000000000
000000000000000000000000000000000000013900dc00e9fe9e040d047c
012b00b80096005900ac00df01a900fa0105ffec00170003005500610004
008c00a3008500280120005d00d6007f012601190104016c06cf00b40106
00000737063e047a00f000f900e905ba042604420000ffe7fe69049e04e3
ff37ff2d01200105012000a800740068004700f200e500d900bd00a80068
0047005c0048000a0028003200410050005a0064007d00870091ffb0ff9c
ff83ff79ff6f00cb012000fa012c01fa01a000d500b8005c003c00c800c8
008f00d9018b00b300470000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
00000000fe6400c000ea01180125013203b003ed0576059005aa05b405be
05cd063100780084009b00cc00e200f4010a0120016300d100ea00f70108
01420019002c00340041003800480058006c025903bd0043011a007000d3
0028003700420050005a0064007300780082008c009c00a500bd00ce00f0
0110015c00be00d801020117012c016300ea01080041004b0055005f0073
00a60109018301b300410064001e002a00eb00fa010e01380274002c0040
0082009600b600c000cc00dc00e600f000ff010a0120012c013b01440156
016300f70057006401100136005001b10000ffb60039004e004403cc00e5
002401100042012201a400f0006000e0000e001d003905e30102002cfe4e
ff38026903bd011600ff000e00a00054001b003d01710041000f005000fd
0015014f0035fe52002c00d30000404154403f3e3d3c3b3a393837353433
3231302f2e2d2c2b2a292827262524232221201f1e1d1c1b1a1918171615
14131211100f0e0d0c0b0a090807060504030201002c4523466020b02660
b004262348482d2c452346236120b02661b004262348482d2c45234660b0
206120b04660b004262348482d2c4523462361b0206020b02661b02061b0
04262348482d2c45234660b0406120b06660b004262348482d2c45234623
61b0406020b02661b04061b004262348482d2c0110203c003c2d2c204523
20b0cd442320b8015a51582320b08d44235920b0ed51582320b04d442359
20b09051582320b00d44235921212d2c20204518684420b001602045b046
76688a4560442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00
b0172370b101173e01b0172370b10217453ab10200080d2d2c45b01a2344
45b01923442d2c2045b00325456164b050515845441b2121592d2cb00143
632362b0002342b00f2b2d2c2045b0004360442d2c01b00643b00743650a
2d2c2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b0
0361592d2c45b0112bb0172344b0177ae4182d2c45b0112bb01723442d2c
b01243588745b0112bb0172344b0177ae41b038a45186920b01723448a8a
8720b0c05158b0112bb0172344b0177ae41b21b0177ae45959182d2c2d2c
b0022546608a46b040618c482d2c4b53205c58b002855958b00185592d2c
20b0032545b019234445b01a23444565234520b00325606a20b009234223
688a6a606120b01a8ab000527921b21a1a40b9ffe0001a45208a54582321
b03f1b235961441cb114008a5279b31940201945208a54582321b03f1b23
5961442d2cb110114323430b2d2cb10e0f4323430b2d2cb10c0d4323430b
2d2cb10c0d432343650b2d2cb10e0f432343650b2d2cb11011432343650b
2d2c4b525845441b2121592d2c0120b003252349b04060b0206320b00052
5823b002253823b002256538008a63381b212121212159012d2c4bb06451
584569b00943608a103a1b212121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2cb02b
2bb02a2a2d2c00b00743b006430b2d2c3eb02a2a2d2c352d2c76b8023623
701020b802364520b0005058b00161593a2f182d2c21210c6423648bb840
00622d2c21b08051580c6423648bb82000621bb200402f2b59b002602d2c
21b0c051580c6423648bb81555621bb200802f2b59b002602d2c0c642364
8bb84000626023212d2cb4000100000015b00826b00826b00826b008260f
10161345683ab001162d2cb4000100000015b00826b00826b00826b00826
0f1016134568653ab001162d2c4b53234b515a5820458a60441b2121592d
2c4b545820458a60441b2121592d2c4b53234b515a58381b2121592d2c4b
5458381b2121592d2cb0134358031b02592d2cb0134358021b03592d2c4b
54b012435c5a58381b2121592d2cb012435c580cb00425b00425060c6423
646164b0035158b00425b00425012046b01060482046b0106048590a2121
1b2121592d2cb012435c580cb00425b00425060c6423646164b807085158
b00425b00425012046b8fff060482046b8fff06048590a21211b2121592d
2c4b53234b515a58b03a2b1b2121592d2c4b53234b515a58b03b2b1b2121
592d2c4b53234b515ab012435c5a58381b2121592d2c0c8a034b54b00426
024b545a8a8a0ab012435c5a58381b2121592d2c462346608a8a46232046
8a608a61b8ff8062232010238ab902a702a78a70456020b0005058b00161
b8ffba8b1bb0468c59b0106068013a2d2cb1020042b123018851b1400188
535a58b910000020885458b202010243604259b12401885158b920000040
885458b202020243604259b12401885458b2022002436042004b014b5258
b2020802436042591bb940000080885458b202040243604259b940000080
63b80100885458b202080243604259b94000010063b80200885458b20210
02436042595959592d00000100000002e66798cbbafb5f0f3cf508190800
00000000a2e33c1d00000000b9d5b513fafafcfd10000815000100090001
00010000000000010000073efe4e00431000fafafe261000000100000000
00000000000000000000068a0600010000000000023900000239000002aa
00b803cb00700473001204730046071d005905c7005a01e7005c02aa006b
02aa0043031d001c04ac00550239007502aa0073023900930239fffd0473
0056047300a2047300330473004d047300260473005b0473005704730057
047300530473004102aa00c902aa00aa04ac005f04ac005504ac005f04e3
006a07cd003d05c7000005c7009605c7006105c700940556009504e30097
0639006205c700960239008c0473002305c7009904e3009d06aa009105c7
009806390059055600950639005905c700960556004a04e3002c05c70093
0556ffff078d0007055600000556fffd04e3001602aa00920239fffd02aa
002604ac00730473ffed02aa002a0473004904e300870473005504e30054
0473004102aa001804e3005404e30092023900930239ffa2047300890239
0093071d007e04e3009104e3005204e3008b04e3005b031d008704730030
02aa001f04e3008d0473000b063900090473000c0473000e04000022031d
003c023d00b0031d002d04ac004305c7000005c7000005c7006105560095
05c700980639005905c70093047300490473004904730049047300490473
004904730049047300570473004104730041047300410473004102390092
0239ffe90239ffcd0239ffd004e3009104e3005204e3005204e3005204e3
005204e3005204e3008d04e3008d04e3008d04e3008d0473004403330056
047300540473000d0473003b02cd00420473fffe04e3008b05e5fff705e5
fff7080000d802aa00bb02aa0005046400310800ffaa0639003f05b40098
046400320464003c0464003c04730001049c006f03f4002c05b4007a0696
00a1046400000231000002f6002502ec001a06250037071d005804e30057
04e3006502aa00c304ac0055046400540473ffec0464001f04e5001a0473
00600473006a080000c905c7000005c700000639005908000048078d0058
0473fffc08000000040000840400006902390098023900720464003103f4
002f0473000e0556fff70156fea90473ffe002aa004b02aa004b04e3001f
04e3001f047300440239009302390075040000710800000105c700000556
009505c7000005560095055600950239006a0239ffae0239ffbf0239ffc1
06390059063900590639005905c7009305c7009305c700930239009302aa
000302aafff302aa001302aa001a02aa00cd02aa009102aa002602aa0060
02aa00a002aa000304e3000a0239000a0556004a0473003004e300160400
0022023d00b005c7fffd04e300530556fff70473000e0556009504e3008b
04ac005504ac006d02aa005b02aa001902aa002806ac005c06ac005c06ac
0028047300000639006204e300540239008c0556004a0473003005c70061
0473005505c700610473005504e30054046bffed02aa01ea05c700000473
004905c700000473004905c7009405c0005105c7fffd0556009504730041
055600950473004104e3009d0239007904e3009d0315009504e3009a03d5
009005c7009804e3009105c7009804e300910639005904e3005205c70096
031d008705c70096031d00500556004a0473003004e3002c02aa001f04e3
002c03d5001e05c7009304e3008d05c7009304e3008d04e3001604000022
04e300160400002204cf009a063900560691005604eb004e04da004e03cc
004e0579004e0392003005b9004e046bffed04d500b8032b004f08c00029
0800004f040000990800004f040000990800004f040000980400009807d5
016a05c7008f04ab005504d5009d04ac005504d5022204d5010505abffe9
050001c905ab027e05abffe905ab027e05abffe905ab027e05abffe905ab
ffe905abffe905abffe905abffe905ab01c005ab027e05ab01c005ab01c0
05abffe905abffe905abffe905ab027e05ab01c005ab01c005abffe905ab
ffe905abffe905ab027e05ab01c005ab01c005abffe905abffe905abffe9
05abffe905abffe905abffe905abffe905abffe905abffe905abffe905ab
ffe905abffe905abffe905abffe905abffe905abffe905ab02d605ab0066
05abffea05d5ffff04d500920800000007eb013007eb012007eb013007eb
012004d500b204d5008004d5002a082b0198086b01b807550010060000f4
0600006f0440003a0540003704c0003f0415004004000025060000550647
008c0473009005abffc701eb008d03d500860715002303e9001804d50092
02d6005c02d6005c04d500b202d6004d05c700000473004905c700610473
005505c70061047300550556009504730041055600950473004105560095
047300410639006204e300540639006204e300540639006204e3005405c7
009604e3009205c7000504e300190239ffba0239ffbb0239ffda0239ffda
0239ffe10239ffe20239006e02390075047300230239ffa205c700990473
00890473008d04e3009d0239ffed05c7009804e3009105c9009c04e3008e
0639005904e300520639005904e3005205c70096031d002a0556004a0473
003004e3002c02aa000705c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d078d0007063900090556fffd0473000e0239
008d05c70000047300490800ffaa071d00580639003f04e3005702aa00c9
078d000706390009078d000706390009078d0007063900090556fffd0473
000e0239009502aaffd70473000d04cd005a06ac005c06ac002906ac0030
06ac002f02aa00bc02aa002602aa00bb03b8fff405c7ffe806d3ffbb073f
ffbb03caffbb0699ffa6076bffc806b4ff9c0239ff2905c7000005c70096
05c000000556009504e3001605c700960239008c05c700990556000006aa
009105c70098052600660639005905c7009a0556009504cd005a04e3002c
0556fffd0556000006790056066a00620239ffcc0556ffff04eb004e039c
004e04e3008e0239008204a8006c04e200900473000f03af004e04e3008e
0453004e023900930476008e0473000f04e500900473000b0390004e04e3
005204f300760429004e04a80076049b00110607007606c2004e0239ffcd
04a8007604e3004e04a8007606c2004e055a00970715002f048900a405b1
00580556004a0239008c0235ffca0473002308c0001a0880009d07000037
04e2009a04fa000005c0009905c7000005c0009b05c70096048900a405b3
fffa05560095073b00170503002c05c0009905c0009904e2009a059d0020
06aa009105c700960639005905c000990556009505c7006104e3002c04fa
000006d400590556000005d8009a059f007d080a009a0827009a06f5001a
07d5009d05c0009b05b100570840009605c000040473004904f1005c04eb
0096035500880514fff90473004105acffff03fa001804eb008c04eb008c
040100880515001905eb009b04d5008804e3005204d5008804e3008b0473
005503eb00150473000e070000540473000c04eb008904a5007206ab008c
06c0008d05d5002806d5009504eb0099046b003806d5009104abfffb0473
004504e3000003550088046b005104730030023900930240ffd00239ffa2
07c000180740008c04e30000040100880473001204d5008803e500960393
00880800004108eb00a30620003002aa010102aa001e02aa003102aa0031
02aa010102aa007f02aa007e02aa008c02aa008c02aa010102aa001002aa
010102aa01210393007d02aa008c026500c802aa030202aaff0102aa00c9
04a90059049b004103a7000a0466003204ea0082022f0087034e005a04ed
00870503007d022f0087042c002803ed004b03f8004104e30087050a0037
022f00870316004b04e800500459000a04c0006404b2006403ff000a0418
000a04950082042c002805b8005a0563002d045e0087045e0087045e0087
0236005004090050068b0087022fffac042c0028042c002803f8ff1603f8
ff160479003205b8005a05b8005a05b8005a05b8005a04a9005904a90059
04a90059049b004103a2000a0466003204ea008202950000038100000503
007d02950000042c002803ed004b03f80041050a00370316004b04e80050
04c0006404b200640418000a04950082042c002805b8005a0563002d022f
0087049b004103ed004b04b2006404db00410000ffdc0000ff250000ffdc
0000fe51028d00ab028d00a002da004303c0007e0196ffba019c004601e5
0046019c0046019c004601ad0048019c004601b1004601510046047e0188
047e0150047e0104047e009e047e012d047e00ea047e00d5047e009c047e
00bc047e00ee04350085028d00c1043500b3060001000600010002be0058
06000100047e00a5047e00bd047e00de0600010006000100060001000600
01000600010001b100460600010006000100060001000600010006000100
06000100060001000600010004e6ffba0600010006000100060001000532
003905320039022cffba022cffba06000100060001000600010006000100
049e0034047800300430ffba0430ffba0376000a0376000a060e00290708
002902e2ffba0456ffba060e00290708002902e2ffba0456ffba05280097
046f000a0600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010001cf003001b1004601b1004601b1004001b100460600
0100060001000000ffdc0000fe510000ff160000ff160000ff160000ff16
0000ff160000ff160000ff160000ff160000ff160000ffdc0000ff160000
ffdc0000ff200000ffdc0473002d08000000060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
01000600010006000100028d007f028d00670600010005a0002e03c0007e
01e800000207ffc301bc005e01e0fffa039c0006039c000601bc005e01e0
001a05280097049e0011022cffba022cffba01bc008801e0001a05320039
05320039022cffba022cffba02be0036035200030532003905320039022c
ffba022cffba0532003c0532003c022cffba022cffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba02be006902be006902be006902be00690376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba0880004008800040062cffba062cffba
0880004008800040062cffba062cffba0430ffba0430ffba0430ffba0430
ffba0430ffba0430ffba0430ffba0430ffba0454003403c000460454ffba
02e2ffba0454003403c000460454ffba02e2ffba0610002f0610002f0270
ffba0298ffba04e6002704e600270270ffba0298ffba0454002904540029
02e2ffba02e2ffba039c0023039c002301e0ffba01e0ffba02e2002102e2
00210352ffba0352ffba0454003e0454003e022cffba022cffba02be0058
0352000303c0ffba039cffba039c0006039c000605280097046f000a0528
0097049e0011022cffba022cffba0454000004c4000003e400220454001a
03e400220454001a03e400220454001a0600010006000100019c0046019c
00460600010006000100060001000151004601b100460600010006000100
01ad004801e5004606000100060001000600010001b1004601b1004601b1
004601b1004601b1004001cf003006000100019c0046019c004606000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
0100028d00ca028d00c7028d00c606000100060001000600010006000100
060001000600010006000100060001000600010006000100060001000600
010006000100060001000600010006000100060001000600010006000100
0600010006000100060001000600010002be00690100ffba0800ffba1000
ffbb06d3005905b0005206a3009305cb008d0000fd880000fbc10000fc5f
0000fe310000fcad0000fd550000fe260000fdf10000fd180000fc690000
fd950000fbe00000fc700000fed40000fecd0000fea0041b007806ac005c
06ac00190000fe450000fd550000fda60000fc5f0000fe250000fd180000
fbe00000fafa0000fb360000fc700000fb870000fb9b0000fcce0000fc54
0000fbc30000fc940000fbf50000fdb00000fe590000fd7e0000fc820000
fd340000fe500000fe460000fcd10000fd3e0000fd020000fc3a0000fce9
0000fc260000fc070000fc2f0000fb9e0000fb760239009305c700000473
004905c700000473004905c700000473004905c700000473004905c70000
0473004905c700000473004905c700000473004905c700000473004905c7
00000473004905c700000473004905c700000473004905c7000004730049
055600950473004105560095047300410556009504730041055600950473
004105560095047300410556009504730041055600950473004105560095
047300410239006a0239005d0239008c023900930639005904e300520639
005904e300520639005904e300520639005904e300520639005904e30052
0639005904e300520639005904e3005206d3005905b0005206d3005905b0
005206d3005905b0005206d3005905b0005206d3005905b0005205c70093
04e3008d05c7009304e3008d06a3009305cb008d06a3009305cb008d06a3
009305cb008d06a3009305cb008d06a3009305cb008d0556fffd0473000e
0556fffd0473000e0556fffd0473000e05c70000047300490239ffca0239
ffca0639005904e3005205c7009304e3008d05c7009304e3008d05c70093
04e3008d05c7009304e3008d05c7009304e3008d0000fef90000fef90000
fef40000feef0489fffd03550007073b001705acffff04e2009a04010088
04e2009a0401008805c7009604d500880473000104730012047300010473
0012055600000473000c059f007d04a50072059f009c04e3009205cf0059
0473004c0639005604e3005205320039022cffba0270ffba0298ffba04e6
0027022c0065022c0016022c0016022c0011022c0043022cffd20000fef0
01a8000f01a8fff502aa009002aa009001e8000001bc005e01bc005e0000
ffcb01bc000f01e0ffbf01bcfff501e0ffcd01bc001d01e0000901bc0088
01e0001a039c0006039c0006039c0006039c000605280097046f000a0532
003905320039022cffba022cffba0532003905320039022cffba022cffba
0532003905320039022cffba022cffba0532003905320039022cffba022c
ffba0532003905320039022cffba022cffba0532003905320039022cffba
022cffba0532003905320039022cffba022cffba049e0034047800300430
ffba0430ffba049e0034047800300430ffba0430ffba049e003404780030
0430ffba0430ffba049e0034047800300430ffba0430ffba049e00340478
00300430ffba0430ffba049e0034047800300430ffba0430ffba02be004f
02be004f02be006902be006902be006902be006902be004f02be004f02be
006602be006602be006902be006902be006902be006902be002f02be002f
02be002202be00220376000a0376000a0376000a0376000a0376000a0376
000a0376000a0376000a0376000a0376000a0376000a0376000a0376000a
0376000a0376000a0376000a073200400732004004deffba04deffba0732
00400732004004deffba04deffba073200400732004004deffba04deffba
0880004008800040062cffba062cffba0880004008800040062cffba062c
ffba0430ffba0430ffba0454003403c000460454ffba02e2ffba0610002f
0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba0298
ffba0610002f0610002f0270ffba0298ffba0610002f0610002f0270ffba
0298ffba0610002f0610002f0270ffba0298ffba04e6002704e6002704e6
002704e60027060e00290708002902e2ffba0456ffba060e002907080029
02e2ffba0456ffba045400290454002902e2ffba02e2ffba045400290454
002902e2ffba02e2ffba045400290454002902e2ffba02e2ffba060e0029
0708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba060e
00290708002902e2ffba0456ffba060e00290708002902e2ffba0456ffba
060e00290708002902e2ffba0456ffba039c0023039c002301e0ffba01e0
ffba039c0023039c002301e0ffb101e0ffb1039c0023039c002301e0ffba
01e0ffba039c0023039c002301e0ffba01e0ffba0454003e0454003e022c
ffba022cffba0454003e0454003e0454003e0454003e0454003e0454003e
022cffba022cffba0454003e0454003e049e0034047800300430ffba0430
ffba02be005803520003031a001a031a001a031a001a039c0006039c0006
039c0006039c0006039c0006039c0006039c0006039c0006039c0006039c
0006039c0006039c0006039c0006039c0006039c0006039c000605280042
046fffd905280097046f000a022cffba022cffba039c0006039c00060528
0097046f000a022cffba022cffba05280097046f000a067f0044067f0045
067f0044067f004501a800280000fe290000fe8c0000ff250000ff230000
fefa0000ff7a0000fe5908fc003208ad00320000ffb50000ffb60000fef0
0000ff590000fe590000ff8c01b4000002f700000000fe850000ff0704cd
00320000ff580000ff580000ff59073200400732004004deffba04deffba
0880004008800040062cffba062cffba0454003403c000460454ffba02e2
ffba03c0007e02e2002102be0058022cffba0290ffba01f4002f01f4003b
01f4001201f400b101f4006d060e002907080029022f00870000fec80350
0000045e008703e4fff50454fff503e400220454001a03e400220454001a
03e400220454001a03e400220454001a03e400220454001a03e400220454
001a047e0072047e00bd03e4000f0454000f000000000000006c0000006c
0000006c0000006c0000006c0000006c0000006c0000006c0000006c0000
006c0000006c0000006c0000006c0000006c0000006c0000006c0000006c
000000aa000000aa000000aa0000012c0000012c0000012c0000012c0000
012c0000012c0000012c0000012c0000012c0000012c0000012c0000012c
0000012c0000012c0000012c0000012c0000012c0000012c0000012c0000
021600000216000002160000021600000216000002160000021600000216
000002160000046a00000668000006680000066800000668000006680000
066800000668000006680000066800000668000006680000066800000668
000006dc000006dc00000744000007440000074400000744000009520000
09520000095200000a4200000c4e00000c4e00000c4e00000c4e00000cf0
00000cf000000e1c00000e8800000e8800000e8800000f7800000f780000
0f7800000f78000012be000012be000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60000
13a6000013a6000013a6000013a6000013a6000013a6000013a6000013a6
000013a6000013a6000013a6000013a6000013a6000013a6000013a60001
0000068a00f2003c006f000600020010002f00550000064e106f00030002
0000005f047a000000030000000000fe00000000000300000001000a013e
0000000300000002000805de0000000300000003005805c0000000030000
0004001405d20000000300000005001805e8000000030000000600180618
000000030000000700c40630000000030000000800260780000000030000
0009008a0da8000000030000000a04c200fe000000030000000b00620e32
000000030000000c00660e94000000030000000d06b406f4000000030000
000e005c0efa0001000000000000007f0f56000100000000000100050ff5
0001000000000002000412450001000000000003002c1236000100000000
0004000a123f0001000000000005000c124a0001000000000006000c1262
00010000000000070062126e000100000000000800131316000100000000
00090045162a000100000000000a02610fd5000100000000000b0031166f
000100000000000c003316a0000100000000000d035a12d0000100000000
000e002e16d30003000104030002000e170d0003000104030004001a1701
0003000104050002000a172700030001040500040016171b000300010406
00020006173d00030001040600040012173100030001040700020008174f
0003000104070004001417430003000104080002000c1763000300010408
000400181757000300010409000000fe00000003000104090001000a013e
0003000104090002000805de0003000104090003005805c0000300010409
0004001405d20003000104090005001805e8000300010409000600180618
000300010409000700c40630000300010409000800260780000300010409
0009008a0da8000300010409000a04c200fe000300010409000b00620e32
000300010409000c00660e94000300010409000d06b406f4000300010409
000e005c0efa00030001040a0002000e177b00030001040a0004001a176f
00030001040b00020012179500030001040b0004001e178900030001040c
0002000817b300030001040c0004001417a700030001040e0002001017d1
00030001040e0004001c17c50003000104100002001217b3000300010410
0004001e17a70003000104130002000617ed0003000104130004001217e1
0003000104140002000e17ff0003000104140004001a17f3000300010415
00020014181900030001041500040020180d0003000104160002000e1839
0003000104160004001a182d000300010419000200141853000300010419
00040020184700030001041b0002000a187300030001041b000400161867
00030001041d00020006174f00030001041d00040012174300030001041f
0002000a188900030001041f00040016187d0003000104240002000c189f
00030001042400040018189300030001042a0002000818b700030001042a
0004001418ab00030001042d0002000a18cb00030001042d0004001618bf
00030001080a0002000e177b00030001080a0004001a176f000300010816
0002000e18390003000108160004001a182d000300010c0a0002000e177b
000300010c0a0004001a176f000300010c0c0002000817b3000300010c0c
0004001417a700540079007000650066006100630065002000a900200054
006800650020004d006f006e006f007400790070006500200043006f0072
0070006f0072006100740069006f006e00200070006c0063002e00200044
006100740061002000a900200054006800650020004d006f006e006f0074
00790070006500200043006f00720070006f0072006100740069006f006e
00200070006c0063002f005400790070006500200053006f006c00750074
0069006f006e007300200049006e0063002e00200031003900390030002d
0031003900390032002e00200041006c006c002000520069006700680074
00730020005200650073006500720076006500640043006f006e00740065
006d0070006f0072006100720079002000730061006e0073002000730065
007200690066002000640065007300690067006e002c0020004100720069
0061006c00200063006f006e007400610069006e00730020006d006f0072
0065002000680075006d0061006e00690073007400200063006800610072
006100630074006500720069007300740069006300730020007400680061
006e0020006d0061006e00790020006f0066002000690074007300200070
00720065006400650063006500730073006f0072007300200061006e0064
002000610073002000730075006300680020006900730020006d006f0072
006500200069006e002000740075006e0065002000770069007400680020
0074006800650020006d006f006f00640020006f00660020007400680065
0020006c006100730074002000640065006300610064006500730020006f
006600200074006800650020007400770065006e00740069006500740068
002000630065006e0074007500720079002e002000200054006800650020
006f0076006500720061006c006c002000740072006500610074006d0065
006e00740020006f00660020006300750072007600650073002000690073
00200073006f006600740065007200200061006e0064002000660075006c
006c006500720020007400680061006e00200069006e0020006d006f0073
007400200069006e0064007500730074007200690061006c002000730074
0079006c0065002000730061006e00730020007300650072006900660020
00660061006300650073002e00200020005400650072006d0069006e0061
006c0020007300740072006f006b00650073002000610072006500200063
007500740020006f006e002000740068006500200064006900610067006f
006e0061006c002000770068006900630068002000680065006c00700073
00200074006f002000670069007600650020007400680065002000660061
00630065002000610020006c0065007300730020006d0065006300680061
006e006900630061006c00200061007000700065006100720061006e0063
0065002e002000200041007200690061006c00200069007300200061006e
002000650078007400720065006d0065006c007900200076006500720073
006100740069006c0065002000660061006d0069006c00790020006f0066
002000740079007000650066006100630065007300200077006800690063
0068002000630061006e0020006200650020007500730065006400200077
00690074006800200065007100750061006c002000730075006300630065
0073007300200066006f0072002000740065007800740020007300650074
00740069006e006700200069006e0020007200650070006f007200740073
002c002000700072006500730065006e0074006100740069006f006e0073
002c0020006d006100670061007a0069006e006500730020006500740063
002c00200061006e006400200066006f007200200064006900730070006c
00610079002000750073006500200069006e0020006e0065007700730070
00610070006500720073002c002000610064007600650072007400690073
0069006e006700200061006e0064002000700072006f006d006f00740069
006f006e0073002e004d006f006e006f0074007900700065003a00410072
00690061006c00200042006f006c0064003a00560065007200730069006f
006e00200033002e0030003000200028004d006900630072006f0073006f
0066007400290041007200690061006c002d0042006f006c0064004d0054
0041007200690061006c00ae002000540072006100640065006d00610072
006b0020006f006600200054006800650020004d006f006e006f00740079
0070006500200043006f00720070006f0072006100740069006f006e0020
0070006c0063002000720065006700690073007400650072006500640020
0069006e0020007400680065002000550053002000500061007400200026
00200054004d0020004f00660066002e00200061006e006400200065006c
0073006500770068006500720065002e004e004f00540049004600490043
004100540049004f004e0020004f00460020004c004900430045004e0053
0045002000410047005200450045004d0045004e0054000d000a000d000a
005400680069007300200074007900700065006600610063006500200069
00730020007400680065002000700072006f007000650072007400790020
006f00660020004d006f006e006f00740079007000650020005400790070
006f00670072006100700068007900200061006e00640020006900740073
002000750073006500200062007900200079006f00750020006900730020
0063006f0076006500720065006400200075006e00640065007200200074
006800650020007400650072006d00730020006f0066002000610020006c
006900630065006e00730065002000610067007200650065006d0065006e
0074002e00200059006f0075002000680061007600650020006f00620074
00610069006e006500640020007400680069007300200074007900700065
006600610063006500200073006f00660074007700610072006500200065
006900740068006500720020006400690072006500630074006c00790020
00660072006f006d0020004d006f006e006f00740079007000650020006f
007200200074006f00670065007400680065007200200077006900740068
00200073006f006600740077006100720065002000640069007300740072
0069006200750074006500640020006200790020006f006e00650020006f
00660020004d006f006e006f0074007900700065002700730020006c0069
00630065006e0073006500650073002e000d000a000d000a005400680069
007300200073006f00660074007700610072006500200069007300200061
002000760061006c007500610062006c0065002000610073007300650074
0020006f00660020004d006f006e006f0074007900700065002e00200055
006e006c00650073007300200079006f0075002000680061007600650020
0065006e0074006500720065006400200069006e0074006f002000610020
007300700065006300690066006900630020006c006900630065006e0073
0065002000610067007200650065006d0065006e00740020006700720061
006e00740069006e006700200079006f0075002000610064006400690074
0069006f006e0061006c0020007200690067006800740073002c00200079
006f0075007200200075007300650020006f006600200074006800690073
00200073006f0066007400770061007200650020006900730020006c0069
006d006900740065006400200074006f00200079006f0075007200200077
006f0072006b00730074006100740069006f006e00200066006f00720020
0079006f007500720020006f0077006e0020007000750062006c00690073
00680069006e00670020007500730065002e00200059006f00750020006d
006100790020006e006f007400200063006f007000790020006f00720020
006400690073007400720069006200750074006500200074006800690073
00200073006f006600740077006100720065002e000d000a000d000a0049
006600200079006f00750020006800610076006500200061006e00790020
007100750065007300740069006f006e00200063006f006e006300650072
006e0069006e006700200079006f00750072002000720069006700680074
007300200079006f0075002000730068006f0075006c0064002000720065
007600690065007700200074006800650020006c006900630065006e0073
0065002000610067007200650065006d0065006e007400200079006f0075
002000720065006300650069007600650064002000770069007400680020
00740068006500200073006f0066007400770061007200650020006f0072
00200063006f006e00740061006300740020004d006f006e006f00740079
0070006500200066006f00720020006100200063006f007000790020006f
006600200074006800650020006c006900630065006e0073006500200061
0067007200650065006d0065006e0074002e000d000a000d000a004d006f
006e006f0074007900700065002000630061006e00200062006500200063
006f006e007400610063007400650064002000610074003a000d000a000d
000a0055005300410020002d002000280038003400370029002000370031
0038002d0030003400300030000900090055004b0020002d002000300031
003100340034002000300031003700330037002000370036003500390035
0039000d000a0068007400740070003a002f002f007700770077002e006d
006f006e006f0074007900700065002e0063006f006d004d006f006e006f
007400790070006500200054007900700065002000440072006100770069
006e00670020004f006600660069006300650020002d00200052006f0062
0069006e0020004e006900630068006f006c00610073002c002000500061
0074007200690063006900610020005300610075006e0064006500720073
002000310039003800320068007400740070003a002f002f007700770077
002e006d006f006e006f0074007900700065002e0063006f006d002f0068
0074006d006c002f006d0074006e0061006d0065002f006d0073005f0061
007200690061006c002e00680074006d006c0068007400740070003a002f
002f007700770077002e006d006f006e006f0074007900700065002e0063
006f006d002f00680074006d006c002f006d0074006e0061006d0065002f
006d0073005f00770065006c0063006f006d0065002e00680074006d006c
0068007400740070003a002f002f007700770077002e006d006f006e006f
0074007900700065002e0063006f006d002f00680074006d006c002f0074
007900700065002f006c006900630065006e00730065002e00680074006d
006c547970656661636520a920546865204d6f6e6f7479706520436f7270
6f726174696f6e20706c632e204461746120a920546865204d6f6e6f7479
706520436f72706f726174696f6e20706c632f5479706520536f6c757469
6f6e7320496e632e20313939302d313939322e20416c6c20526967687473
205265736572766564436f6e74656d706f726172792073616e7320736572
69662064657369676e2c20417269616c20636f6e7461696e73206d6f7265
2068756d616e69737420636861726163746572697374696373207468616e
206d616e79206f6620697473207072656465636573736f727320616e6420
61732073756368206973206d6f726520696e2074756e6520776974682074
6865206d6f6f64206f6620746865206c6173742064656361646573206f66
20746865207477656e74696574682063656e747572792e2020546865206f
766572616c6c2074726561746d656e74206f662063757276657320697320
736f6674657220616e642066756c6c6572207468616e20696e206d6f7374
20696e647573747269616c207374796c652073616e732073657269662066
616365732e20205465726d696e616c207374726f6b657320617265206375
74206f6e2074686520646961676f6e616c2077686963682068656c707320
746f20676976652074686520666163652061206c657373206d656368616e
6963616c20617070656172616e63652e2020417269616c20697320616e20
65787472656d656c7920766572736174696c652066616d696c79206f6620
7479706566616365732077686963682063616e2062652075736564207769
746820657175616c207375636365737320666f7220746578742073657474
696e6720696e207265706f7274732c2070726573656e746174696f6e732c
206d6167617a696e6573206574632c20616e6420666f7220646973706c61
792075736520696e206e6577737061706572732c20616476657274697369
6e6720616e642070726f6d6f74696f6e732e4d6f6e6f747970653a417269
616c20426f6c643a56657273696f6e20332e303020284d6963726f736f66
7429417269616c2d426f6c644d54417269616ca82054726164656d61726b
206f6620546865204d6f6e6f7479706520436f72706f726174696f6e2070
6c63207265676973746572656420696e2074686520555320506174202620
544d204f66662e20616e6420656c736577686572652e4e4f544946494341
54494f4e204f46204c4943454e53452041475245454d454e540d0a0d0a54
686973207479706566616365206973207468652070726f7065727479206f
66204d6f6e6f74797065205479706f67726170687920616e642069747320
75736520627920796f7520697320636f766572656420756e646572207468
65207465726d73206f662061206c6963656e73652061677265656d656e74
2e20596f752068617665206f627461696e65642074686973207479706566
61636520736f66747761726520656974686572206469726563746c792066
726f6d204d6f6e6f74797065206f7220746f676574686572207769746820
736f667477617265206469737472696275746564206279206f6e65206f66
204d6f6e6f747970652773206c6963656e736565732e0d0a0d0a54686973
20736f66747761726520697320612076616c7561626c6520617373657420
6f66204d6f6e6f747970652e20556e6c65737320796f7520686176652065
6e746572656420696e746f2061207370656369666963206c6963656e7365
2061677265656d656e74206772616e74696e6720796f7520616464697469
6f6e616c207269676874732c20796f757220757365206f66207468697320
736f667477617265206973206c696d6974656420746f20796f757220776f
726b73746174696f6e20666f7220796f7572206f776e207075626c697368
696e67207573652e20596f75206d6179206e6f7420636f7079206f722064
697374726962757465207468697320736f6674776172652e0d0a0d0a4966
20796f75206861766520616e79207175657374696f6e20636f6e6365726e
696e6720796f75722072696768747320796f752073686f756c6420726576
69657720746865206c6963656e73652061677265656d656e7420796f7520
726563656976656420776974682074686520736f667477617265206f7220
636f6e74616374204d6f6e6f7479706520666f72206120636f7079206f66
20746865206c6963656e73652061677265656d656e742e0d0a0d0a4d6f6e
6f747970652063616e20626520636f6e7461637465642061743a0d0a0d0a
555341202d202838343729203731382d303430300909554b202d20303131
3434203031373337203736353935390d0a687474703a2f2f7777772e6d6f
6e6f747970652e636f6d4d6f6e6f7479706520547970652044726177696e
67204f6666696365202d20526f62696e204e6963686f6c61732c20506174
7269636961205361756e646572732031393832687474703a2f2f7777772e
6d6f6e6f747970652e636f6d2f68746d6c2f6d746e616d652f6d735f6172
69616c2e68746d6c687474703a2f2f7777772e6d6f6e6f747970652e636f
6d2f68746d6c2f6d746e616d652f6d735f77656c636f6d652e68746d6c68
7474703a2f2f7777772e6d6f6e6f747970652e636f6d2f68746d6c2f7479
70652f6c6963656e73652e68746d6c0041007200690061006c0020004e00
65006700720065007400610041007200690061006c002000740075010d00
6e00e90041007200690061006c0020006600650064004100720069006100
6c002000460065007400740041007200690061006c0020038803bd03c403
bf03bd03b10041007200690061006c0020004e0065006700720069007400
610041007200690061006c0020004c0069006800610076006f0069007400
750041007200690061006c00200047007200610073007300650074007400
6f0041007200690061006c0020004600e9006c006b00f6007600e9007200
41007200690061006c00200056006500740041007200690061006c002000
480061006c00760066006500740041007200690061006c00200050006f00
670072007500620069006f006e00790041007200690061006c0020004e00
650067007200690074006f0041007200690061006c0020041f043e043b04
43043604380440043d044b04390041007200690061006c00200054007501
0d006e00e90041007200690061006c0020004b0061006c0131006e004100
7200690061006c0020004b007200650070006b006f004100720069006100
6c0020011100e20323006d0041007200690061006c0020004c006f006400
69006100be0054039a000f0101001fffc00398b310143240b80399b30f13
32404110039500500395000200b0034d00c0034d0002006f0391007f0391
0002ffc0034bb22d3132b9ffc0034bb30a0e32104110038b0020038b0080
038b000300a0038b00010020038b0040038b0002ffc0038bb313163240b8
0383b20f1132b9ffc0037bb2303432b9ffc0037bb3101832504114037800
010365036e0023001f037e036e001e001f0363036e001d001f0362036400
0d001fffc00340b30f1032804110033f0001033f03150029001f03410316
0032001f0344031a001b001fffc00375b20e1132b9ffc00375b2282a3241
0a034303180032001f030f030d0034001f03080307b2321f20bb03400001
00400388b3090b3240b80388b2101532bd038503070014001f03800307b2
171f0fbd030a002f030a0002ffc00354b3090d3290410c035400a0035400
02001f036e0001009f036e00010040036eb2090b32410a0345031c001600
1f036b031d0015001f0346031eb2151fc0bb0393000100400392b3090d32
40b8033eb2083340b8033eb30d0e32c04109033e000100b0038e00c0038e
0002ffc00390b326383200412603280030032800020020037f0030037f00
020010038a0030038a0050038a006f038a007f038a009f038a0006000003
89003003890002002f037a0070037700900377009f037a0004ffc00315b2
0f1032b9ffc00315b2242832b903190318b2321f10bb031a0001ffc0031a
b3090e3240b80318b2121332b9ffc00318b30c0e323fbd0373004f037300
0200400374b31718326fbb032a00010040032cb3181b3240b80370b2090c
32bd031703160032001fffc00316b20e1132bd031c031e0016001f031d03
1eb2151fb0411f031e0001000f031f000102ca02d00015001f02d302d500
0d001f02cf02d0000d001f02cb02d0000d001f02cd02d0000d001f02ce02
d0000d001fffc002d0b3090c3240b802d2b3090c32e0411c02e50001005f
02dd009f02e5000202bb02c30030001f02da02b80032001f02d902b9003f
001f02d802b80064001f02b902b80033001f02bab221c81fb802b8b321c8
1f40b8039bb20d1632b9ffc002c3b22b2f32b9ffc002c3b21f2532b9ffc0
02c3b2171b32b9ffc002c3b2121632412502c202c1001c001f02d702c100
24001f02c102c00022001f02bf02c00018001f02c0027400c8001f02b502
35003b001f02b40235003b001f02c402bc001e001f02b702b60038001f02
b3b20ec81fb802b0b207c81fb802afb206c81fb802aeb200c81fb802afb2
502f1fbc02ae02ab001a001f02adb2261a1fb802a8b326241f0fbb023500
0102a50274b21d1f12410a02a1015801f4001f02a000d801f4001f001202
a2b237c81fb80290b2bc201fb9029002904018374025402d40a603302530
2d30a6032025202d203720a6204110028e0005009f028b0001028b028b00
3700200289003002890040028900900289b20437b041fd027400c0027400
020080027400a00274000200600274007002740002000002740010027400
020080027400f002740002003f0285004f028500020090027e0090027f00
9002800090028100040090027a0090027b0090027c0090027d0004009002
74009002750090027700030070027e0070027f0070028000700281000400
70027a0070027b0070027c0070027d000400700274007002750070027700
030060027e0060027f006002800060028100040060027a0060027b006002
7c0060027d000400600274006002750060027700030050027e0050027f00
5002800050028100040050027a0050027b0050027c0050027d0004005002
74005002750050027700030040027e0040027f0040028000400281000400
40027a0040027b0040027c0040027d000400400274004002750040027700
030030027e0030027f003002800030028100040030027a0030027b003002
7c0030027d000400300274003002750030027700030020027e0020027f00
2002800020028100040020027a0020027b0020027c0020027d0004002002
74002002750020027700030010027e0010027f0010028000100281000400
10027a0010027b0010027c0010027d000400100274001002750010027700
0300e0027e00e0027f00e0028000e00281000400e0027a00e0027b00e002
7c00e0027d000400e0027400e0027500e00277b103d041c5027e00d0027f
00d0028000d00281000400d0027a00d0027b00d0027c00d0027d000400d0
027400d0027500d0027700030030027400400274000200c0027e00c0027f
00c0028000c00281000400c0027a00c0027b00c0027c00c0027d000400c0
027400c0027500c00277000300b0027e00b0027f00b0028000b002810004
00b0027a00b0027b00b0027c00b0027d000400b0027400b0027500b00277
000300a0027e00a0027f00a0028000a00281000400a0027a00a0027b00a0
027c00a0027d000400a0027400a0027500a0027700030090027e0090027f
009002800090028100040090027a0090027b0090027c0090027d00040090
0274009002750090027700030020027e0020027f00200280002002810004
0020027a0020027b0020027c0020027d0004002002740020027500200277
0003028101580801001f028001290801001f027f00ec0801001f027e00d8
0801001f027d00b10801001f027c00a60801001f027b00820801001f027a
00370801001f027700260801001f027500200801001f0274001f0801b21f
370f41160235004f0235005f0235006f0235009f023500af023500bf0235
000700af023500cf023500df023500ff02354022040f074f079f07af07bf
0705af07e007020f064f069f06af06bf0605af06e0060220411b020d0001
005f02350001008f02350001007f023500ef02350002002f0235003f0235
0002003f0234004f0234000202350235023402344011ed20ef2a01cf2a01
bf2a01af2a018f2a01410902470104001e001f022000370201001f015840
0c263e1fd8263e1f3726273e1fb8028eb6ec171fb226361fb801bcb22636
1fb80129402b26361fec26361fb126361fa626361f8226361f3726361f32
26361f2d26361f2526361f1f26361f37262a1fb801584022263e1fd8263e
1fbc263e1f27263e1f21263e1f20263e1f3700161600000012110840b902
0d01a6b3c50d0009b801bcb227281fb801bbb227301fb801b8b2274f1fb8
01b7b227621f410901b600270101001f01b5002002ab001f01afb21fe41f
b801adb21fe41fb801acb21fbb1fb801a8b21f341fb8015db2272e1fb801
5bb227cd1f410d0155001f0401001f0154001f0401001f0153001f020100
1f0152b21f561fb80151b21f291fb8012bb227261f410d012a0027012500
1f0129015800e4001f0125001f0401001f0124b21fe41fb80123b21f3b1f
b80122b21f391f410d010800270801001f0106002d0101001f0105001f01
01001f0103b31fbb1fefb901580401400b1fed1f931fec1fe41feb1fb802
01b21fd920b80401b21fcf25b80156400a1fbc2d9e1fbb1f411fb2410a01
580401001f00b101580401001f00b001580401b51fa625891f9bb9015801
25b61f991f2e1f8e2db80801b51f8d1f291f89b901580401b21f8220b802
ab40131f801f301f742de41f731f4a1f611f521f5d25b802abb21f5c1fbc
0801001f0059015802abb61f5025891f491fb80125b21f4725b80401400b
1f461f791f401f271f3920bc02ab001f003801580401b21f372dbc012500
1f003201580125b61f2c1f341f2a25b80801b21f5537b80111402a07f007
90075b0742073b07230722071e071d071408120810080e080c080a080808
060804080208000814b8ffe0402b00000100140610000001000604000001
000410000001001002000001000200000001000002010802004a00b01303
4b024b5342014bb0c063004b6220b0f65323b8010a515ab005234201b012
4b004b5442b0382b4bb807ff52b0372b4bb007505b58b101018e59b0382b
b00288b801005458b801ffb101018e851bb0124358b10100858d1bb90001
0119858d5959001816763f183f123e113946443e113946443e113946443e
113946443e11394660443e11394660442b2b2b2b2b2b2b2b2b2b2b182b2b
2b2b2b2b2b2b2b2b182b1db0964b5358b0aa1d59b0324b5358b0ff1d594b
b08153205c58b9020f020d4544b9020e020d45445958b90470020f455258
b9020f04704459594bb0e453205c58b90020020e4544b90027020e454459
58b908420020455258b9002008424459594bb8012553205c58b90026020f
4544b90021020f45445958b90a0d0026455258b900260a0d4459594bb804
0153205c58b1d8204544b1202045445958b9250000d8455258b900d82500
4459594bb8040153205c58b9015800264544b1262645445958b923200158
455258b9015823204459594bb02953205c58b11f1f4544b12d1f45445958
b9010d001f455258b9001f010d4459594bb02f53205c58b11f1f4544b125
1f45445958b90135001f455258b9001f01354459594bb8030153205c58b1
1f1f4544b11f1f45445958b91428001f455258b9001f14284459592b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b65422b01b331757ec3456523456023456560234560b08b766818b08062
2020b17e754565234520b003266062636820b003266165b075236544b07e
234420b131c34565234520b003266062636820b003266165b0c3236544b0
312344b100c3455458b1c3406544b23140314523614459b33f3c58414565
23456023456560234560b089766818b080622020b1583c4565234520b003
266062636820b003266165b03c236544b058234420b13f414565234520b0
03266062636820b003266165b041236544b03f2344b10041455458b14140
6544b23f403f452361445945695342014b5058b108004259435c58b10800
4259b3020b0a124358601b2159421610703eb0124358b93b21187e1bba04
0001a8000b2b59b00c2342b00d2342b0124358b92d412d411bba04000400
000b2b59b00e2342b00f2342b0124358b9187e3b211bba01a80400000b2b
59b0102342b0112342002b2b2b2b2b2b2b2b00b01243584bb035514bb021
535a58b1262645b040614459592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b737373737345b0406144180045694445694473737374737373747374
73742b2b2b2b2b2b2b2b2b2b2b2b00737373737373737373737373737373
737373737373737474747474747474747474747474747474747474747575
757374757575752b7300004bb02a534bb036515a58b1070745b040604459
004bb02e534bb036515a58b1030345b0406044b1090945b8ffc06044592b
4569440174007373732b4569442b012b435c58400a0006000702a006a007
02b9ffc00274b31a1d326fbd0277007f02770002ffc00277b22f3132b9ff
c00277b322253240b80274b32f353240b80274b3282a3240b80274b21a21
32b8ffc0b3371a1d32b8ffc0b3251a1d32b8ffc040112d1a1d329025902d
9037a025a02da03706b8ffc0b6a61a1d321fa61fb8028eb22fa60300742b
732b2b2b2b2b2b2b2b742b737459002b2b435c58b9ffc002a1b21c1d32b9
ffc002a0b21c1d322b2b592b73012b2b2b2b002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b012b2b2b2b2b2b2b73742b2b2b2b2b2b2b2b73732b2b2b
2b2b2b732b732b2b2b742b2b2b73737373732b73732b2b2b73002b2b2b2b
7374732b732b2b2b2b752b2b2b2b2b2b2b2b752b2b2b2b2b732b2b2b2b73
74752b2b7373732b2b2b2b0000>
[5031 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> HIBBAA+Arial-BoldMT AddT42Char 
1 108 17 <00010093000001ac01190003002440150238000a02260f001f0020003000
040019046776182b4e10f45d4dfd003f4ded3130331121119301190119fe
e700>HIBBAA+Arial-BoldMT AddT42Char 
1 170 20 <000100a20000032605c00009005640096b027b028b02030204b80129b35f
050105b8025eb708090501000c0900bb015800020001025d400d0500041f
042004b0040404190aba01a701a000182b4e10f45d3c4df63cfd3c003f3c
3f3cf45ded393130005d212111060735362437330326fee79ad16e010230
e404239045ff24c98600>HIBBAA+Arial-BoldMT AddT42Char 
1 300 39 <000200940000056105ba0010001f007f40332805280a47176504650c052a
173917481659166816053917361b871b9905960b051f1125010002131225
0f10081927af070107b8ffc0b3090b3407b8028c40138021012021302102
2111122000201030100210b8028bb3203153182b4e10f45d3c4dfd3c4d10
5d71f62b714ded003f3cfd3c3f3cfd3c3130005d71015d13213217161612
1514070607060706232101113332373e023534262627262394021db76081
b8602d37664d8362a4fdd30128dd7c37485f3c3c6c533eb505ba1c26c2fe
e7ceb583a0634b2a1f04c2fc350e1256c5aaaab666120e00>HIBBAA+Arial-BoldMT AddT42Char 
1 534 48 <000100910000061905ba000c0218400b0b032608260b0304030103b8ff80
40091c3a340a203a3b3409b8ffe0b33a3b3409b8ffe040a41c2e340a201c
2e340609080ae309ec0a0404090a0a13021c0410091f0a23022c0420092f
0a6702680465096a0a77027804a409aa0ab509ba0af609fa0a169f049009
9f0ac609c90ad702d804d609d90ae702e804e509ea0a0d7709780a83028c
0483098c0a900207580b65026a046709680a760279040744024b0444094b
0a57085709580a07180a2f0e34023a0434093b0a3f0e0703020c04060909
0a15021a04170907b10602435458401f0204030a09050c070732060e0c32
0000031003020850080d340b50080d3403b8ff80400e0b0d3408400e2734
0b400e273403b8ff9c40100e2734030b08030100040102070a0008003f3c
3c3f3c111217392b2b2b2b2b2b5d012fed10d4ed111217391bb8ff3b402d
030a09200408090932030414030304020b0a0a320302140303020b080303
0c0402020c0a0a090907081f0e010eb8010db307060504ba02380005ffc0
b35b5d3405b8ffc0401753543405320740077f080108bd7f030103bd0b20
0b0c02b802384012010000405b5d34004053543400321f0c010cb8010db3
0d3175182b10f471ed2b2b103cee103c1a1910fd71fd713c1a1810fd2b2b
ee103c10e471003f3c103c103c3f3c12173987052e2b877dc4872e182b87
7dc42b593130014bb0135358b90008ffe0b10b20383859015d5d5d5d5d5d
71722b2b2b2b002b715d331121010121112111012101119101bb010a0107
01bcfeedfeddfee3fede05bafc1803e8fa460482fb7e0482fb7e>HIBBAA+Arial-BoldMT AddT42Char 
1 1130 49 <000100980000052305ba000901ce400e0903060819031708041208020303
b8ff00b3120b3f03b8ffc0b35b5d3403b8ffc0402a535434033207081407
0708030802020703090402020907080304405b5d340440535434043206cf
050105b8028b4019400b500b600b03700b800b02a00bc00b02200b300b02
0b0809b8ffc0b35b5d3409b8ffc0400e53533409320120003000c0000300
b8028bb30a3175182b4e10f45d3c4dfd2b2b3c4d105d5d7172f65d3c4dfd
2b2b3c003f3c3f3c011112393900123939872e2b2b2b2b877dc4b1060243
5458b90003ffe040090e273408200e273403b8ffc0b7090d340840090d34
002b2b2b2b5931304358b90003ff80b60b3508800b3503b8ffc0403d1a2e
3408531a2e34050316033203400304460385089008a008b208e40306c403
cf08da080320032f0834033b084f0892039f08a003af08b003bf080b07b8
ffc04009333534024033353407b8ffe0400d2f323402202f323402071435
07b8ff974009212e340254212e3407b8ffc040461e203402541e20340802
070718020317072c0227073b0233074e0240075c0256070914021b074d02
45079a07ab07cb02d902e802e707f9020b270228074a0778078807ac0206
015d7172722b2b2b2b2b2b2b2b2b005d5d71722b2b2b2b59005d33112101
11211121011198012002580113fed7fdb105bafc2d03d3fa4603bcfc4400
>HIBBAA+Arial-BoldMT AddT42Char 
1 1640 62 <00010092fe63028405ba000700504032063005400502053700033f044f04
020437011000120302060207040510070107f4059b000020013001d00103
016008677c182b10f65d3c10eded5d103c103c3c103c003f3ffd5d3c10fd
5d3c313013112115231133159201f2e7e7fe630757ddfa63dd00>HIBBAA+Arial-BoldMT AddT42Char 
1 1756 64 <00010026fe63021805ba00070044402a3f054f0502053700300440040204
3701120010070606021f030103f40105049b00df0101016009a376182b10
f65d3cfd3c10fd5d3c3c103c003f3fed5d10ed5d31300111213533112335
0218fe0ee7e705baf8a9dd059fdb>HIBBAA+Arial-BoldMT AddT42Char 
1 1860 68 <00020049ffe8042e043e0023003201714068071a081c051d161a4a1b481c
4925db10df11093619461957266619672686269219931aa61ab91bc71ac8
1b0c06060d151606191627062915591977028602a606b506c6060cbf34d9
10021d243231112c0d24402b2e3424402228342440191d346f24fc240224
461db8ffc040300e0f343d1d01001d101db01df91d041d1d2c013300400e
0f340f001f0002005521401c113f21401b103f2140181a3421b80274b504
070c0d0a2cb8ffc0b31c113f2cb8ffc0b31b103f2cb8ffc0b3181a342cb8
02744040140b1e3126082909280d591f0c9f0c021f0c01ff0c010c400e16
340c1a4f340134600001008e300101013329215f1701df17014f175f176f
17031719336941182b4e10f45d71724dedf471ed5d4e105df62b5d71724d
edf4e4fd3c003fed2b2b2b3f3c3ffd2b2b2bf45d2be412392f5d712bb106
02435458b22f1d017159edb10602435458b90024ffc0b71b1d3454246424
025d2b595d2b2b2b111239030e103c3c3c313001715d005d710127363633
321616150314161721262726270606232226353436363736373534262322
060106060706151416333237363736350165ff2bd2cfbcb84b031b25feea
0b10070348a45da4bd569b92c54c506f4b54015e36ea243758444c453310
0b02e22e9a945989b7feb88c854c1c3719084646b2885a8d4b1c25201c51
453bfed2123218273c3b563226372465>HIBBAA+Arial-BoldMT AddT42Char 
1 2386 71 <00020054ffe8046105ba000f001c0090402d125906590a59125616561859
1c98079909f80909701e801e023a03340c3a1534194a03440c4a15441999
090914b80274b2050b1ab80274400e0b070e0f0001000a17290e0d2601b8
0129400f0f001a8f1e011e102108191d583c182b4e10f44ded4e1071f63c
4dedfd3ce6003f3c3f3c3fed3fed3130005d01715d4358400d6906690a69
1266166618691c065d592121350606232200111012333217112101141716
3332363534262322060461fefb41b15ab7fefbfec2b2820119fd122f447a
6188846764879c5b5901270108010e0119940210fc70aa4c6ea5a4b7a19f
>HIBBAA+Arial-BoldMT AddT42Char 
1 2626 72 <00020041ffe80427043e0014001c01a3b90010fff840460b3999099a0d96
10a805a70abb09bb0db81a0808140148024706460a4f1ea80db606b61ac7
0ac80cd60ad80cf807f70d0d1c0f1c15401b1d3415400e11340f15bf15cf
150315b8ffc0b30f1e3f15b8ffc0b30e173f15b8028d400c0f0e12500e60
0e020e181201b8ffc0b6191b3401331200b8ffc0b31d203400b8ffc0b322
293400b8ffc0b32b2d3400b8ffc0b3181c3400b8ffc0400f0e0f34a00001
0000100002005f1212b80274b3040b1218b8027440240b070021012f1521
4f0e010e1a2f1e5f1e6f1e9f1e041e0f2108400d0f3408191d6941182b4e
10f42b4ded4e105df65d4dedf4ed003fed435c584014184028143f18401e
0f3f18401b103f18401c113f2b2b2b2b593ffd435c58b90012ffc0b32814
3f12b8ffc0b31e0f3f12b8ffc0b31b103f12b8ffc0b21c113f2b2b2b2b59
f45d712b2b2b2b2b435c58b90000ffc0b2123900b8ffc0b2173900b8ffb0
b3090a3e00b8ffc0b241213f2b002b2b2b59e42b1112395d435c5840140e
400f1e3f0e401c113f0e401b103f0e400e173f002b2b2b2b592f3cfd2b2b
722b2b3c0111333130015d71005d2b010506062320272635100033320003
211616333236132626232207061702fa011836e9affeeb85690114d3ed01
1206fd40038261425a270378565c3c3c0101522f9aa1b591dd0108012bfe
c7febd7d8b48016c7a7f43437300>HIBBAA+Arial-BoldMT AddT42Char 
1 3150 76 <00020093000001ac05ba000300070077b90009ffc0403f110a3f40095009
028009b009c009d009ef09051f0960097f09a009b0090503060700050403
0f00014000d000e00003005d02010006050607040a0207260104b8ffc040
092124340419083f3c182b4e10f42b3c4dfd3c003f3c3f3c3f3cfd5d713c
0305103c3c103c3c313001715d722b1311211101112111930119fee70119
04b60104fefcfb4a0426fbda>HIBBAA+Arial-BoldMT AddT42Char 
1 3312 78 <000100890000045f05ba000b00f3b90003ffddb30d113f03b8ffc0407d19
2d3407031003130627096606af0abf0ac809cb0ada0a0a53036003020d07
180946065708760605b609df04ed04fc04f506054e074e0866067d048c04
9b049c059a069a079a080a1f0412062b042b052a062a072a082f0d4b044b
050a060607090a09080a050a090306040b050406020100000b0b08070a03
0a0a0b04b8026d401a052f08391f070107650d020b26018000011f000100
190c3f7b182b4e10f45d713c4dfd3c1910f67118edf4ed103c103c003f3c
3c103c3f3c3f3c12173987087d10c4083cb10602435458b90003ffc8b209
2134002b593130015d5d5d7100725d2b2b33112111012101012101071189
01190149015afe950185fed1fef58305bafcf60176fe7cfd5e01dd89feac
>HIBBAA+Arial-BoldMT AddT42Char 
1 3612 79 <00010093000001ac05ba00030053b90005ffc04029110a3f400550050280
05b005c005d005ef05051f0560057f05a005b0050502010003000a020326
0100b8ffc040092124340019043f3c182b4e10f42b3c4dfd3c003f3c3f3c
313001715d722b3311211193011905bafa46>HIBBAA+Arial-BoldMT AddT42Char 
1 3720 82 <00020052ffe8049a043e000d001900974048e801e708f713f71504c702e8
05021219051909025910561356165918970298069808970cb809d502db05
dc09d50ce705e706e80d10a708cb02cc06c308c60c057508890684080311
b80274b20a0b17b80274401404071439071a601b701b021b0e2100191a58
41182b4e10f44ded4e1071f64ded003fed3fed313000715d015d71435840
09691066126616691804015d59005d015d13341236333200151400232224
26251416333236353426232206528afd9cf10134fec9ec92fef78a012096
6e6e95956e6e9602228c01068afec7eff1fec384ffa89ea8a8a09ca8a800
>HIBBAA+Arial-BoldMT AddT42Char 
1 3960 86 <00010030ffe80410043e002a02c240c00611062308271711172398129814
9727952a09071446140212bb0db90ec721e523f80df62206290d550d650d
950b9712a722b90c07412340244426672264268712871486228324093726
4506460b4a0d4f0f462142220722242726370c352135223523352407060a
05110921180d270c22222223072422402c730c781479157629752a881584
2a9a15952ab422b4230d80018f178c18992aa92ab02c0617211640212334
16401c1f341f1601df16011633082150258f25022540181d34251a2cb8ff
c04017110a3f502c01302c012f2c012c1e213010011033012100b8ffc0b3
0f093f00b8ffc0b3110a3f00b8ffc04009090d3400192b78b8182b4e10fc
2b2b2b4dedf471ed4e105d71722bf62b714dedf471722b2bed00b1060243
54584035060101060116012622362146215401591764016917f6010a0117
02041a21220228130d0c02281a5f04010446280b501a011a4613073ffd5d
3ffd5d1112173911121739111217395d711bb90022ffcbb3282a3421b8ff
cbb3282a3422b8ffe0b31e243421b8ffe0b31f243422b8ffe0b3191a3421
b8ffe0401b191a346b0d0136224622980d9422c422d4220621220c0d0404
1a00b8ffc0b5191b34003301b8ffc0b3172d3f01b8ffb0b3090a3e01b8ff
c0b322253401b8ffc0401d1a1c3400013001400150010460018001f00103
00011001500160010401b8ffc0b313163401b80101404d0004015f04f004
020446280b1640191b3416331740172d3f1740090a3e174035373417402b
2e34174025293417401a1c340f171f175f176f170417551a402224340f1a
01501aff1a021a4613073ffd5d712bf45d2b2b2b2b2b2be42b3ffd5d71f4
2b5d71722b2b2b2be42b111217395d712b2b2b2b2b2b59313001715d0071
7171715d5d435c58b90024ffc940090b123f0f280b123f21b8ffecb60d39
0c140c3921b8ffecb20c3922b8ffeab10b39002b2b2b2b012b2b5900715d
132516163332373635342726272427263534363332161705262623220706
1514171604171615140623222630011a126e636d3725141549feac5b7eda
e5dad428fef7115f586f30201c2601c15958f4efd9fd012f2b5255281c2f
201514114b3e56998abc8e8b313e421f16231e151c664a4b8692d2b0>HIBBAA+Arial-BoldMT AddT42Char 
1 4798 88 <0001008dffe8045304260016009c401757116711960503090619063c023c
114b024b11e702070fb802744011040b16000a1514140a09061314261515
00b80129400e1640202434af1601ff1601161a18b8ffc040162224349018
a018027018f01802ef1801180a0b260908b8ffc0400f202434a00801f008
010819173f3c182b4e10f471722b3c4dfd3c4e105d71722bf671722b4ded
3c10fd3c003f3c3c103c3f3c3fed3130005d015d21350606232226263511
21111416163332363635112111034e3abd696baa4c01191f523f48722a01
199f55625eaa9602a0fe18e0653b4f75e401c0fbda00>HIBBAA+Arial-BoldMT AddT42Char 
1 0 0 <00020100000005000500000300070042b40201fe0607b8023f4013000504
fe03000a0704fe010019080605fe0203bc0126000901b0011800182b10f6
3cfd3c4e10f43c4dfd3c003f3cfd3c10fc3cfd3c31302111211125211121
01000400fc2003c0fc400500fb002004c000>HIBBAA+Arial-BoldMT AddT42Char 
HIBBAA+Arial-BoldMT /CharStrings get begin
/space 3 def
/period 17 def
/one 20 def
/D 39 def
/M 48 def
/N 49 def
/bracketleft 62 def
/bracketright 64 def
/a 68 def
/d 71 def
/e 72 def
/i 76 def
/k 78 def
/l 79 def
/o 82 def
/s 86 def
/u 88 def
end
HIBBAA+Arial-BoldMT /Encoding get
dup 32 /space put
dup 46 /period put
dup 49 /one put
dup 68 /D put
dup 77 /M put
dup 78 /N put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 111 /o put
dup 115 /s put
dup 117 /u put
pop
end
%ADOEndSubsetFont
/GCLSWY+Arial-BoldMT /HIBBAA+Arial-BoldMT findfont ct_VMDictPut
/GCLSWY+Arial-BoldMT*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 2{/.notdef}rp /one 18{/.notdef}rp /D 
8{/.notdef}rp /M /N 12{/.notdef}rp /bracketleft /.notdef /bracketright 3{/.notdef}rp 
/a 2{/.notdef}rp /d /e 3{/.notdef}rp /i /.notdef /k 
/l 2{/.notdef}rp /o 3{/.notdef}rp /s /.notdef /u 138{/.notdef}rp]
GCLSWY+Arial-BoldMT nf
GCLSWY+Arial-BoldMT*1 [0 -10.2391 -10.2391 0 0 0 ]msf
48.5259 157.177 mo
(Modules i....)
[-8.52911 -6.25598 -6.25604 -6.25598 -2.8465 -5.69293 -5.69293 -2.84644 -2.8465 -2.8465 -2.84644 -2.8465 
0 ]ysh
GCLSWY+Arial-BoldMT*1 [10.2391 0 0 -10.2391 0 0 ]msf
89.0928 208.163 mo
(Diseases [1..k..N])
[7.39263 2.84647 5.69294 5.69294 5.69293 5.69294 5.69294 5.69293 2.84648 3.40953 5.69295 2.84647 
2.84647 5.69293 2.84647 2.84647 7.39264 0 ]xsh
420.975 117.778 mo
446.329 117.778 li
446.329 92.383 li
420.975 92.383 li
cp
ef
420.975 142.684 mo
446.329 142.684 li
446.329 117.779 li
420.975 117.779 li
cp
0 0 0 0 cmyk
ef
420.975 168.076 mo
446.329 168.076 li
446.329 142.683 li
420.975 142.683 li
cp
ef
420.975 193.471 mo
446.329 193.471 li
446.329 168.076 li
420.975 168.076 li
cp
ef
446.816 193.959 mo
445.841 193.959 li
445.841 91.896 li
446.816 91.896 li
cp
f
446.816 193.959 mo
445.841 193.959 li
445.841 91.896 li
446.816 91.896 li
cp
@
421.463 193.959 mo
420.488 193.959 li
420.488 91.896 li
421.463 91.896 li
cp
f
421.463 193.959 mo
420.488 193.959 li
420.488 91.896 li
421.463 91.896 li
cp
@
420.488 91.896 mo
548.234 91.896 li
548.234 92.873 li
420.488 92.873 li
cp
f
420.488 91.896 mo
548.234 91.896 li
548.234 92.873 li
420.488 92.873 li
cp
@
446.328 117.644 mo
471.683 117.644 li
471.683 92.249 li
446.328 92.249 li
cp
0 0 .697 0 cmyk
ef
471.684 117.644 mo
497.039 117.644 li
497.039 92.249 li
471.684 92.249 li
cp
.024 .031 .953 0 cmyk
ef
497.039 117.644 mo
522.393 117.644 li
522.393 92.249 li
497.039 92.249 li
cp
0 0 .93 0 cmyk
ef
446.328 142.55 mo
471.683 142.55 li
471.683 117.644 li
446.328 117.644 li
cp
0 0 0 1 cmyk
ef
471.684 142.55 mo
497.039 142.55 li
497.039 117.644 li
471.684 117.644 li
cp
0 0 .93 0 cmyk
ef
497.039 142.55 mo
522.393 142.55 li
522.393 117.644 li
497.039 117.644 li
cp
0 0 .697 0 cmyk
ef
446.328 167.942 mo
471.683 167.942 li
471.683 142.549 li
446.328 142.549 li
cp
0 0 0 0 cmyk
ef
471.684 167.942 mo
497.039 167.942 li
497.039 142.549 li
471.684 142.549 li
cp
0 0 0 1 cmyk
ef
497.039 167.942 mo
522.393 167.942 li
522.393 142.549 li
497.039 142.549 li
cp
0 0 .93 0 cmyk
ef
446.328 193.337 mo
471.683 193.337 li
471.683 167.942 li
446.328 167.942 li
cp
0 0 0 0 cmyk
ef
471.684 193.337 mo
497.039 193.337 li
497.039 167.942 li
471.684 167.942 li
cp
ef
497.039 193.337 mo
522.393 193.337 li
522.393 167.942 li
497.039 167.942 li
cp
0 0 0 1 cmyk
ef
472.172 193.825 mo
471.197 193.825 li
471.197 91.761 li
472.172 91.761 li
cp
0 0 0 0 cmyk
f
472.172 193.825 mo
471.197 193.825 li
471.197 91.761 li
472.172 91.761 li
cp
@
497.525 193.825 mo
496.55 193.825 li
496.55 91.761 li
497.525 91.761 li
cp
f
497.525 193.825 mo
496.55 193.825 li
496.55 91.761 li
497.525 91.761 li
cp
@
522.881 193.825 mo
521.904 193.825 li
521.904 91.761 li
522.881 91.761 li
cp
f
522.881 193.825 mo
521.904 193.825 li
521.904 91.761 li
522.881 91.761 li
cp
@
420.488 117.155 mo
548.234 117.155 li
548.234 118.132 li
420.488 118.132 li
cp
f
420.488 117.155 mo
548.234 117.155 li
548.234 118.132 li
420.488 118.132 li
cp
@
420.488 142.062 mo
548.234 142.062 li
548.234 143.039 li
420.488 143.039 li
cp
f
420.488 142.062 mo
548.234 142.062 li
548.234 143.039 li
420.488 143.039 li
cp
@
420.488 167.454 mo
548.234 167.454 li
548.234 168.431 li
420.488 168.431 li
cp
f
420.488 167.454 mo
548.234 167.454 li
548.234 168.431 li
420.488 168.431 li
cp
@
548.234 193.825 mo
547.259 193.825 li
547.259 91.761 li
548.234 91.761 li
cp
f
548.234 193.825 mo
547.259 193.825 li
547.259 91.761 li
548.234 91.761 li
cp
@
420.488 192.849 mo
548.234 192.849 li
548.234 193.826 li
420.488 193.826 li
cp
f
420.488 192.849 mo
548.234 192.849 li
548.234 193.826 li
420.488 193.826 li
cp
@
528.556 100.132 mo
530.478 100.218 li
532.035 100.434 li
532.097 100.434 li
533.163 100.82 li
533.226 100.82 533.255 100.865 533.286 100.907 cv
533.56 101.123 li
533.654 101.167 533.714 101.253 533.744 101.34 cv
533.835 101.555 li
533.898 101.686 533.898 101.816 533.898 101.945 cv
533.898 141.136 li
533.835 140.748 li
533.927 140.964 li
533.775 140.748 li
534.079 141.009 li
533.927 140.92 li
534.964 141.267 li
536.46 141.527 li
538.322 141.612 li
538.597 141.612 538.781 141.914 538.781 142.304 cv
538.781 142.648 538.597 142.952 538.322 142.994 cv
536.431 143.08 li
534.904 143.254 li
534.995 143.254 li
533.958 143.643 li
534.05 143.601 li
533.744 143.817 li
533.927 143.556 li
533.835 143.772 li
533.898 143.427 li
533.898 182.621 li
533.898 182.708 533.898 182.838 533.835 182.965 cv
533.744 183.181 li
533.714 183.27 533.654 183.356 533.591 183.398 cv
533.318 183.658 li
533.286 183.702 533.226 183.744 533.163 183.744 cv
532.097 184.089 li
530.509 184.351 li
528.556 184.478 li
528.525 183.096 li
530.417 183.01 li
531.882 182.749 li
532.951 182.403 li
532.798 182.492 li
533.074 182.231 li
532.919 182.447 li
533.011 182.231 li
532.919 182.621 li
532.919 143.427 li
532.919 143.299 532.951 143.169 533.011 143.038 cv
533.103 142.822 li
533.134 142.736 533.226 142.648 533.286 142.562 cv
533.591 142.346 li
533.622 142.346 533.654 142.304 533.683 142.304 cv
534.72 141.914 li
534.812 141.914 li
536.4 141.697 li
538.292 141.612 li
538.292 142.994 li
536.369 142.863 li
534.751 142.606 li
533.714 142.26 li
533.654 142.26 533.622 142.217 533.56 142.175 cv
533.255 141.914 li
533.195 141.873 533.134 141.784 533.103 141.697 cv
533.011 141.483 li
532.951 141.352 532.919 141.225 532.919 141.136 cv
532.919 101.945 li
533.011 102.292 li
532.919 102.076 li
533.103 102.334 li
532.829 102.117 li
532.919 102.161 li
531.851 101.771 li
531.943 101.771 li
530.449 101.6 li
528.525 101.514 li
cp
.746 .676 .668 .898 cmyk
f
528.556 100.132 mo
530.478 100.218 li
532.035 100.434 li
532.097 100.434 li
533.163 100.82 li
533.226 100.82 533.255 100.865 533.286 100.907 cv
533.56 101.123 li
533.654 101.167 533.714 101.253 533.744 101.34 cv
533.835 101.555 li
533.898 101.686 533.898 101.816 533.898 101.945 cv
533.898 141.136 li
533.835 140.748 li
533.927 140.964 li
533.775 140.748 li
534.079 141.009 li
533.927 140.92 li
534.964 141.267 li
536.46 141.527 li
538.322 141.612 li
538.597 141.612 538.781 141.914 538.781 142.304 cv
538.781 142.648 538.597 142.952 538.322 142.994 cv
536.431 143.08 li
534.904 143.254 li
534.995 143.254 li
533.958 143.643 li
534.05 143.601 li
533.744 143.817 li
533.927 143.556 li
533.835 143.772 li
533.898 143.427 li
533.898 182.621 li
533.898 182.708 533.898 182.838 533.835 182.965 cv
533.744 183.181 li
533.714 183.27 533.654 183.356 533.591 183.398 cv
533.318 183.658 li
533.286 183.702 533.226 183.744 533.163 183.744 cv
532.097 184.089 li
530.509 184.351 li
528.556 184.478 li
528.525 183.096 li
530.417 183.01 li
531.882 182.749 li
532.951 182.403 li
532.798 182.492 li
533.074 182.231 li
532.919 182.447 li
533.011 182.231 li
532.919 182.621 li
532.919 143.427 li
532.919 143.299 532.951 143.169 533.011 143.038 cv
533.103 142.822 li
533.134 142.736 533.226 142.648 533.286 142.562 cv
533.591 142.346 li
533.622 142.346 533.654 142.304 533.683 142.304 cv
534.72 141.914 li
534.812 141.914 li
536.4 141.697 li
538.292 141.612 li
538.292 142.994 li
536.369 142.863 li
534.751 142.606 li
533.714 142.26 li
533.654 142.26 533.622 142.217 533.56 142.175 cv
533.255 141.914 li
533.195 141.873 533.134 141.784 533.103 141.697 cv
533.011 141.483 li
532.951 141.352 532.919 141.225 532.919 141.136 cv
532.919 101.945 li
533.011 102.292 li
532.919 102.076 li
533.103 102.334 li
532.829 102.117 li
532.919 102.161 li
531.851 101.771 li
531.943 101.771 li
530.449 101.6 li
528.525 101.514 li
528.556 100.132 li
cp
@
427.561 86.5762 mo
427.647 84.6542 li
427.863 83.0972 li
427.863 83.0352 li
428.249 81.9692 li
428.249 81.9062 428.294 81.8772 428.336 81.8462 cv
428.552 81.5722 li
428.596 81.4782 428.682 81.4182 428.769 81.3882 cv
428.984 81.2972 li
429.115 81.2342 429.245 81.2342 429.374 81.2342 cv
468.565 81.2342 li
468.177 81.2972 li
468.393 81.2052 li
468.177 81.3572 li
468.438 81.0532 li
468.349 81.2052 li
468.696 80.1682 li
468.956 78.6722 li
469.041 76.8102 li
469.041 76.5352 469.343 76.3512 469.733 76.3512 cv
470.077 76.3512 470.381 76.5352 470.423 76.8102 cv
470.509 78.7012 li
470.683 80.2282 li
470.683 80.1372 li
471.072 81.1742 li
471.03 81.0822 li
471.246 81.3882 li
470.985 81.2052 li
471.201 81.2972 li
470.856 81.2342 li
510.05 81.2342 li
510.137 81.2342 510.267 81.2342 510.394 81.2972 cv
510.61 81.3882 li
510.699 81.4182 510.785 81.4782 510.827 81.5412 cv
511.087 81.8142 li
511.131 81.8462 511.173 81.9062 511.173 81.9692 cv
511.518 83.0352 li
511.78 84.6232 li
511.907 86.5762 li
510.525 86.6072 li
510.439 84.7152 li
510.178 83.2502 li
509.832 82.1812 li
509.921 82.3342 li
509.66 82.0582 li
509.876 82.2132 li
509.66 82.1212 li
510.05 82.2132 li
470.856 82.2132 li
470.728 82.2132 470.598 82.1812 470.467 82.1212 cv
470.251 82.0292 li
470.165 81.9982 470.077 81.9062 469.991 81.8462 cv
469.775 81.5412 li
469.775 81.5102 469.733 81.4782 469.733 81.4492 cv
469.343 80.4122 li
469.343 80.3202 li
469.126 78.7322 li
469.041 76.8402 li
470.423 76.8402 li
470.292 78.7632 li
470.035 80.3812 li
469.689 81.4182 li
469.689 81.4782 469.646 81.5102 469.604 81.5722 cv
469.343 81.8772 li
469.302 81.9372 469.213 81.9982 469.126 82.0292 cv
468.912 82.1212 li
468.781 82.1812 468.654 82.2132 468.565 82.2132 cv
429.374 82.2132 li
429.721 82.1212 li
429.505 82.2132 li
429.763 82.0292 li
429.546 82.3032 li
429.59 82.2132 li
429.2 83.2812 li
429.2 83.1892 li
429.029 84.6832 li
428.943 86.6072 li
cp
f
427.561 86.5762 mo
427.647 84.6542 li
427.863 83.0972 li
427.863 83.0352 li
428.249 81.9692 li
428.249 81.9062 428.294 81.8772 428.336 81.8462 cv
428.552 81.5722 li
428.596 81.4782 428.682 81.4182 428.769 81.3882 cv
428.984 81.2972 li
429.115 81.2342 429.245 81.2342 429.374 81.2342 cv
468.565 81.2342 li
468.177 81.2972 li
468.393 81.2052 li
468.177 81.3572 li
468.438 81.0532 li
468.349 81.2052 li
468.696 80.1682 li
468.956 78.6722 li
469.041 76.8102 li
469.041 76.5352 469.343 76.3512 469.733 76.3512 cv
470.077 76.3512 470.381 76.5352 470.423 76.8102 cv
470.509 78.7012 li
470.683 80.2282 li
470.683 80.1372 li
471.072 81.1742 li
471.03 81.0822 li
471.246 81.3882 li
470.985 81.2052 li
471.201 81.2972 li
470.856 81.2342 li
510.05 81.2342 li
510.137 81.2342 510.267 81.2342 510.394 81.2972 cv
510.61 81.3882 li
510.699 81.4182 510.785 81.4782 510.827 81.5412 cv
511.087 81.8142 li
511.131 81.8462 511.173 81.9062 511.173 81.9692 cv
511.518 83.0352 li
511.78 84.6232 li
511.907 86.5762 li
510.525 86.6072 li
510.439 84.7152 li
510.178 83.2502 li
509.832 82.1812 li
509.921 82.3342 li
509.66 82.0582 li
509.876 82.2132 li
509.66 82.1212 li
510.05 82.2132 li
470.856 82.2132 li
470.728 82.2132 470.598 82.1812 470.467 82.1212 cv
470.251 82.0292 li
470.165 81.9982 470.077 81.9062 469.991 81.8462 cv
469.775 81.5412 li
469.775 81.5102 469.733 81.4782 469.733 81.4492 cv
469.343 80.4122 li
469.343 80.3202 li
469.126 78.7322 li
469.041 76.8402 li
470.423 76.8402 li
470.292 78.7632 li
470.035 80.3812 li
469.689 81.4182 li
469.689 81.4782 469.646 81.5102 469.604 81.5722 cv
469.343 81.8772 li
469.302 81.9372 469.213 81.9982 469.126 82.0292 cv
468.912 82.1212 li
468.781 82.1812 468.654 82.2132 468.565 82.2132 cv
429.374 82.2132 li
429.721 82.1212 li
429.505 82.2132 li
429.763 82.0292 li
429.546 82.3032 li
429.59 82.2132 li
429.2 83.2812 li
429.2 83.1892 li
429.029 84.6832 li
428.943 86.6072 li
427.561 86.5762 li
cp
@
0 0 0 1 cmyk
GCLSWY+Arial-BoldMT*1 [0 -10.2391 -10.2391 0 0 0 ]msf
549.546 183.152 mo
(Diseases [1..k..N])
[-7.39264 -2.84644 -5.69299 -5.69293 -5.69293 -5.69293 -5.69293 -5.69293 -2.8465 -3.40948 -5.69299 -2.84644 
-2.8465 -5.69293 -2.84644 -2.8465 -7.39264 0 ]ysh
GCLSWY+Arial-BoldMT*1 [10.2391 0 0 -10.2391 0 0 ]msf
435.113 71.9355 mo
(Diseases [1..k..N])
[7.39264 2.84647 5.69293 5.69293 5.69293 5.69296 5.69293 5.69293 2.84647 3.40955 5.69293 2.84647 
2.84647 5.69296 2.84644 2.8465 7.39264 0 ]xsh
481.058 127.331 mo
481.058 126.612 li
481.058 126.252 480.699 126.252 480.699 125.893 cv
479.978 125.893 li
479.619 125.893 479.258 126.252 478.537 126.612 cv
478.177 126.971 477.818 127.69 477.456 128.409 cv
477.456 129.128 477.097 129.847 477.097 130.566 cv
477.097 130.925 477.456 131.286 477.456 131.645 cv
477.818 132.003 478.177 132.003 478.537 132.003 cv
478.898 132.003 479.258 132.003 479.619 131.645 cv
479.978 131.645 480.338 131.286 480.699 130.925 cv
481.419 131.286 li
480.699 132.003 480.338 132.364 479.978 132.723 cv
479.258 133.082 478.898 133.082 478.177 133.082 cv
477.456 133.082 476.738 132.723 476.376 132.364 cv
476.017 132.003 475.656 131.286 475.656 130.566 cv
475.656 129.847 476.017 129.128 476.017 128.409 cv
476.376 128.049 476.738 127.331 477.097 126.612 cv
477.456 126.252 477.818 125.893 478.537 125.534 cv
478.898 125.174 479.619 125.174 480.338 125.174 cv
481.058 125.174 481.779 125.174 482.14 125.534 cv
481.779 127.331 li
cp
.746 .676 .668 .898 cmyk
ef
490.423 134.161 mo
490.783 133.442 490.783 132.723 491.144 131.645 cv
491.144 130.926 491.144 130.566 491.504 130.207 cv
491.504 129.129 li
491.504 128.769 li
491.144 128.769 li
490.783 128.769 li
490.783 128.41 li
492.583 128.41 li
492.944 128.41 li
492.583 129.488 492.583 130.566 492.223 131.286 cv
491.862 132.364 491.862 133.083 491.504 134.161 cv
491.504 134.881 li
491.504 135.24 li
491.504 135.599 li
491.862 135.599 li
492.223 135.599 li
492.223 135.599 492.223 135.24 492.583 135.24 cv
492.583 135.24 492.583 134.881 492.944 134.881 cv
493.304 135.24 li
492.583 135.959 li
492.223 135.959 li
491.862 136.319 li
491.144 136.319 li
490.783 136.319 li
490.423 135.959 li
490.423 135.599 li
490.423 135.24 li
490.423 134.881 li
cp
484.66 133.442 mo
483.94 136.319 li
482.86 136.319 li
484.3 130.207 li
484.3 129.488 li
484.3 129.129 li
484.3 128.769 li
483.94 128.769 li
483.58 128.769 li
483.58 128.41 li
485.381 128.41 li
485.74 128.41 li
484.66 133.083 li
485.381 133.083 li
485.74 132.723 li
486.1 132.723 486.1 132.723 486.46 132.364 cv
486.46 132.364 486.46 132.004 486.82 132.004 cv
486.82 132.004 486.82 131.645 487.181 131.645 cv
487.181 131.286 li
487.181 130.926 li
486.82 130.926 li
486.82 130.566 li
488.982 130.566 li
488.982 130.926 li
488.622 131.286 488.622 131.286 488.262 131.645 cv
487.902 131.645 487.902 132.004 487.541 132.004 cv
487.541 132.364 487.181 132.364 486.82 132.364 cv
486.82 132.723 486.46 132.723 486.46 133.083 cv
486.46 133.802 li
486.82 134.161 486.82 134.52 486.82 134.881 cv
487.181 135.24 li
487.181 135.599 li
487.541 135.599 li
487.902 135.599 li
487.902 135.599 487.902 135.24 488.262 135.24 cv
488.262 134.881 li
488.982 135.24 li
488.622 135.599 488.622 135.599 488.262 135.959 cv
487.902 135.959 li
487.902 136.319 487.541 136.319 487.541 136.319 cv
487.181 136.319 li
486.46 136.319 li
486.46 135.959 486.1 135.959 486.1 135.599 cv
486.1 135.599 485.74 135.24 485.74 134.881 cv
485.74 134.52 485.74 134.161 485.381 133.802 cv
485.381 133.442 li
485.021 133.442 li
cp
ef
%ADOBeginSubsetFont: QJJAAA+Calibri Initial
ct_T42Dict begin
-0.473 -0.191 1.211 0.949
 256 array 0 1 255 {1 index exch /.notdef put} for  /QJJAAA+Calibri
Type42DictBegin
[<00010000000c000c000c000c4f532f326c6872b8000000cc000000606376
7420af93b7f90000012c0000050a6670676df6f64d0c000006380000091a
676c796654726750000065000000014268656164e227154000000f540000
0036686865610dae0b3c00000f8c00000024686d74782d65e0e800000fb0
000011846c6f63610005820200002134000011886d6178702801030d0000
32bc000000206e616d65266451ee000032dc00000e1670726570ffeae6e0
000040f40000240b67646972000000000000000000000000000304070190
00050008059905330000011e05990533000003d0008602000800020f0502
020204030204a00002ef4000207b00000000000000004d53202000400020
fb040600fe0001c4079e02262000009f0000000003b7050e000000200003
0000079e0000fe930000000000000000000000000050006a007300800080
0086008d009300bf00db006200830093009900a000a600a900b000c100c9
00d700000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000000000000000000000000000
000000000000000000000000000000000000fe79056d000c03b700060013
0000fffaffedfea6ffedfeb8050e000600130000fffaffedfe93050e0013
0420000600130000fffaffedff10ffee050e00130420000600130000fffa
ffeefe93ff10feb80612000a050e0006000d02d2fffafff301fdfffa023f
0006000dff36fffafff302870006000f0000fffafff1079efeaffea70000
0000000000000000000000500051005a005b005c005d0060006100620064
00680069006a006b006c006d006e00680069006e00600067006e00660068
005f00610063006400660068006a006b006c006d006e006f0070006f0072
0074007500760076007000720073007400750076006f0070007100720073
00750077007700780079007a007b007c007d007b007c007d00770079007a
007c0078007a007c007d0078007d007e007f008000810082007e007f0081
0082007e007f008000810082008300840085008600870088008900830084
008500860087008800890083008400850086008700880089008900860087
00880089008a008b008c008d008e008f008a008b008c008d008e008f008a
008b008c008d008e008f008d008a008b008c008d008e008f009000900091
0092009300940095009600980099009b009c009000910092009300940095
0096009700980099009a009e009f00a60090009100950098009f00900091
0096009700bc00c600b500ae00af00b6006800690063006a006f00700071
006f0070007100720066006c006d00700079007c007f0083008600870088
0089008a0074007500760077007a007b007c007d007e008200850086008a
0088008900830078007b00820083008600870088008900760079007a007c
007d007e0083008500880089008a0073007400750077007a007d00880089
008a008b008c008d008e00900094008b008c008d00910092009300940095
008c008d00910095008f009000910092009300940095008b008c008d008e
008f009000910092009300940095008b008c008d008e008f009000910092
00930096009700980099009c0096009700980099009a009b009c00960099
009a009c0096009700980099009a009b009c009700980099009a009b009c
009700980099009a009b009c0096009d00a000a1009d009e009f00a000a1
00a2009d009f00a000a1009f00a2009d009e009f00a000a100a2009d009e
00a000a1009d009e00a000a2009d00a300a400a500a600a700a300a400a6
00a700a300a400a500a600a700a600a300a700a800a900aa00ab00ac00ac
00a800a900aa00ab00ac00a800a900aa00ab00ac00a800aa00ab00ac00ae
00ad00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00ad
00ae00af00b000b100b200b300b400b500b600b700b800ad00ae00af00b0
00b100b200b300b400b500b600b700b800b300ae00af00b000b200b500b6
00b700b800b900ba00bb00bc00be00c000c100c200c200b900ba00bb00bc
00bd00be00bf00c000c100c200c400ba00bb00be00bf00c000c200c300c4
00b900ba00bf00c000c200c600c700c900ca00cb00cc00cf00c500c700ce
00c500c700c800cf00d000d200d300d7010d00d000d100e900d000fd00d0
00004047645f5e5d5c5b5a59585554535251504f4e4d4c4b4a4948474645
44434241403f3e3d3c3b3a39383736352f2e2d2c2826252423221f181411
100f0d0b0a090807060504030201002c4523466020b02660b00426234848
2d2c452346236120b02661b004262348482d2c45234660b0206120b04660
b004262348482d2c4523462361b0206020b02661b02061b004262348482d
2c45234660b0406120b06660b004262348482d2c4523462361b0406020b0
2661b04061b004262348482d2c0110203c003c2d2c20452320b0cd442320
b8015a51582320b08d44235920b0ed51582320b04d44235920b004265158
2320b00d44235921212d2c20204518684420b001602045b04676688a4560
442d2c01b10b0a432343650a2d2c00b10a0b4323430b2d2c00b0282370b1
01283e01b0282370b10228453ab10200080d2d2c2045b00325456164b050
515845441b2121592d2c2045b0004360442d2c01b00643b00743650a2d2c
2069b04061b0008b20b12cc08a8cb8100062602b0c642364615c58b00361
592d2c8a03458a8a87b0112bb0292344b0297ae4182d2c4565b02c234445
b02b23442d2c4b525845441b2121592d2c01b005251023208af500b00160
23edec2d2c01b005251023208af500b0016123edec2d2c01b0062510f500
edec2d2c20b001600110203c003c2d2c20b001610110203c003c2d2c00b0
0743b006430b2d2c21210c6423648bb84000622d2c21b08051580c642364
8bb82000621bb200402f2b59b002602d2c21b0c051580c6423648bb81555
621bb200802f2b59b002602d2c0c6423648bb84000626023212d2c452345
6023456023456023766818b08062202d2cb00426b00426b00425b0042545
234520b003266062636820b0032661658a2344442d2c2045b0005458b040
442045b04061441b2121592d2c45b1302f4523456160b0016069442d2c4b
5158b02f2370b01423421b2121592d2c4b515820b0032545695358441b21
21591b2121592d2c45b01443b0006063b0016069442d2cb02f45442d2c45
2320458a60442d2c45234560442d2c4b235158b90033ffe0b134201bb333
0034005944442d2cb0164358b00326458a586466b01f601b64b020606620
581b21b04059b001615923586559b02923442310b029e01b212121212159
2d2cb0164358b004254564b020606620581b21b04059b0016123586559b0
292344b00425b00725082058021b0359b0052510b004252046b004252342
3cb0072510b006252046b00425b0016023423c2058011b0059b0052510b0
0425b029e0b0072510b00625b029e0b00425b00725082058021b0359b004
25b003254348b00625b00325b0016043481b2159212121212121212d2cb0
164358b004254564b020606620581b21b04059b0016123581b6559b02923
44b00525b00825082058021b0359b0042510b005252046b0042523423cb0
0425b0072508b0072510b006252046b00425b0016023423c2058011b0059
b0042510b00525b029e0b02920456544b0072510b00625b029e0b00525b0
0825082058021b0359b00525b003254348b00425b0072508b00625b00325
b0016043481b2159212121212121212d2c02b00425202046b004252342b0
052508b003254548212121212d2c02b0032520b0042508b0022543482121
212d2c452320451820b00050205823652359236820b040505821b0405923
5865598a60442d2c4b53234b515a5820458a60441b2121592d2c4b545820
458a60441b2121592d2c4b53234b515a58381b2121592d2cb000214b5458
381b2121592d2cb002435458b0462b1b21212121592d2cb002435458b047
2b1b212121592d2cb002435458b0482b1b21212121592d2cb002435458b0
492b1b212121592d2c208a08234b538a4b515a5823381b2121592d2c0020
b200400325b0062649618b3812342d2c014623466023466123201020468a
61b8ff80628ab140408a704560683a2d2c208a2349648a2353583c1b2159
2d2c4b52587d1b7a592d2cb012004b014b54422d2cb1020042b123018851
b1400188535a58b910000020885458b202010243604259b12401885158b9
20000040885458b2020202436042b12401885458b2022002436042004b01
4b5258b2020802436042591bb940000080885458b202040243604259b940
00008063b80100885458b202080243604259b94000010063b80200885458
b202100243604259b94000020063b80400885458b2024002436042595959
59592d2c451868234b51582320452064b04050587c59688a6059442d2cb0
0016b00225b0022501b001233e00b002233eb10102060cb00a236542b00b
234201b001233f00b002233fb10102060cb006236542b0072342b0011601
2d2c20b82000628a6023622d2cb0072558001b0159b0042510b00325b002
2520b8ffff545821cd1bed5921b006255cb006255a58b0092b5920b00525
4ab0042547b004254760b0062547b0806361b00225b0005558b00325b007
25496359b0082558001b0159b00425b0062549b009255cb009255a58b009
2b59b0072546b0806361b0032520b0005558631b2159612320b0005558b0
80631b21b08059b0592bb006255c586959b00425202010b00048233ab006
2658001b0159b0052658b003252f598a12233221212d2cb00625b00a2587
b00625b009254ab0005358b00625b00a251bb00925b0072559b00225b002
25070cb005256323b00625636020b94000040063535821b00426b00426b0
0a1bb94000040063655158b0042665b0042665b00a1bb00426b00426b000
b00325b003250b0d0ab0092eb00725b007250b0d0ab00b2eb00525b00525
07595920b0005558b00525b0052587b00725b007250bb0092510b00b25b0
092620b8ffff545821cd1bed59b00525b0052507b00825b00b254923b006
25b0062587b00a2510b00b25c15920b00051b800522378b00161b00225b0
0725b0072507b00a25b00d254961b08062b00525b005250bb00a252338b0
0625b0062587b00825b008250bb00a2510b00b25c4b00625b0062507b009
25b00c2549b0032554b8ffa723792121212121212121212121212d2c23b0
005458b9400000001bb900004000598ab0005458b9400000001bb9000040
0059b05b2b2d2c08b0005458b9400000001bb900004000590db05b2b2d2c
8a8a080d8ab0005458b9400000001bb90000400059b05b2b2d2cb00426b0
0426080db00426b00426080db05b2b2d2c204569442d0000000100000001
051fbe948c725f0f3cf50019080000000000bbeb7ccc00000000c1274845
fc31fe7309b6079e000000090002000100000000000100000600fe0001c4
0a4efc31fe8c09b6000100000000000000000000000000000461040e0000
000000000000000001cf000004a1002304a1002304a1002304a1002304a1
002304a1002304a1002304a1002304a1002304a1002304a10023061bffcc
061bffcc045a00ac04440061044400610444006104440061044400610444
006104ec00ac04ec009704ff001b04ff001b03e800ac03e8004503e800ac
03e8004603e8004603e8006303e8005f03e8008103e800ac03e800ac03ad
00ac050c005b050c005b050c005b050c005b050c005b04fc00ac04fc00ac
05400020020400ac0204ff4a020400280204ff390204ff310204ff500204
ff4f0204ff7b0204001e02040027049200ac028d0007028dffa9042800ac
042800ac035d00ac035d0081036200ac035d00ac0370001c045e00ac06d7
00ac052a00ac052a00ac052a00ac052a00ac052a00ac050700ac054c0063
054c0063054c0063054c0063054c0063054c0063054c0063054c0063054c
0063054f0063054f006306ef0063042200ac042200ac05620063045800ac
045800ac04580053045800ac03ad004703ad004703ad001503ad001803ad
004703ad004703e6000f03e6000f03e6000f03e6000f052200aa052200aa
052200aa052200aa052200aa052200aa052200aa052200aa052200aa0522
00aa052200aa048a0022071e003d071e003d071e003d071e003d071e003d
0427003003e6001e03e6001e03e6001e03e6001e03e6001e03bf003b03bf
003b03bf001a03bf003b03f4001003f4001003f4001003f4001003f40010
03f4001003f4001003f4001003f4001003f4001003f40010055cffe2055c
ffe2040400a103cb006d03cb006d03cb006d03cb006d03cb006d03cb006d
046500a10465006a0477003204770032038000a103800030038000a10380
0020038000200380002c0380002903800042038000a1038000a1035000a1
0482006c0482006c0482006c0482006c0482006c047800a10478008c049d
004001ec00a101ecff5801ec001901ecff4801ecff2701ecff5501ecff52
01ecff7101ec001101ec0018041b00a1023e0000023eff8c03c900a103c9
00a102e000a102e0008702e600a102e000a102f0003203d500a1060600a1
049100a1049100a10491009904910078049100a1046600a104aa006604aa
006604aa006604aa006604aa006604aa006604aa006604aa006604aa0066
04ba006604ba00660606006603c500a103c500a104b1006603ed00a103ed
00a103ed004503ed00a1034f0049034f0049034ffff5034ffff6034f0049
034f00490359001c0359fffe0359001c0359001c048d009f048d009c048d
009f048d0097048d0075048d009f048d009f048d009f048d009f048d009f
048d009f03fd0021063e0037063e0037063e0037063e0037063e003703cc
003603830010038300100383001003830010038300100369004403690044
036900080369004403d5005c03d5005c03d5005c03d5005c03d5001e03d5
005c03d5005c03d5005c03d5005c03d5005c03d5005c062f005c062f005c
043400990362005a0362005a0362004e036200570362005a0362005a076f
005a06dd005a0601005a0601005a04340060048c0060046a006004340061
03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb005d03fb
005d03fb005d03fb005d02710025069a002508d5002504ab0025069b0025
08d50025043c0025043c0025043c0025043c0025044f0025044f0025044f
0025044f0025043c0025043c002506760025067600250676002506760025
068900250689002506890025068900250676002506760025043c0025043c
0025067600250609002508430025043c0025043c002504830025043c0025
0676002504ed002504ed0025051300250728002503c4003503c4003503c4
003503c4003503c400350434006004340060043400600434006004340060
043400990434ffad0443fff901d6008501d6ff6e01d6000f01d6ff5a01d6
ff2001d6ff7201d6ff5801d6ff6701d6001101d6009903c00085041e0088
01eaffd501eaffd501eaff6303a3009903a3009903a3009901d6009901d6
002a021c009901d6004b01fb001c02fd0099066400990434009904340099
043400990434004e0434009904a2ff9d043400990438005a0438005a0438
005a0438005a0438004f0438005a0438005a0438005a0438005a043c005a
043c005a06cc005a04340099043400990434006002ca009902ca009902ca
fff902ca006e03210051032100510321fffe0321fffd0321005103210051
05ae005105ae00510438009901f1009902ae002102c4002102ae002102bc
002604e60021047500210475002104750021047500210475002104750021
0475002104750021047500210475002105130021074b002106d9002106d9
002106d9002106d9002106d9002106d9002106d9002106d9002106d90021
06d90021043400940434008e04340094043400860434004d043400890434
008604340094043400940434009404340094039d002205b8003505b80035
05b8003505b8003505b8003503770029039f0022039f0022039f0022039f
0022039f0022032900590329005903290007032900590338007203610064
0378005d02ac004402e5006c024e004402e5004802b8004701c100240297
002a02e9006c01630061016dffd80297006c015e006c0456006c02e6006c
02e6004502e5006c02e5004801f6006c0230004201e3002302e9006c0285
001f03ef002c027e00280286001f02370042025400000275000002940000
0000fd080000fce80256000002750000029400000000fd080000fce80329
0000035f0000039400000000fc9f0000fc6703290000035f000003940000
0000fc9d0000fc6901ff0000039a000003a2000003a800000000fc650000
fc600324000002f5000003460000036700000000fca00000fc7e03270000
03490000036a00000000fc9d0000fc7d030c0000030f0000031100000000
fcac0000fca9029100000298000002a000000000fce90000fce202cf0000
02c2000002b5000003c1000003e10000040000000000fc520000fc3101ce
000001d6000001ce000001ce00000000fd4d0000fd4d027500840000fd7a
027f00840000fd7601f700840231000004a1002304a1ff89045a00ac0353
00ac0484003a03e800ac03e8fec703bf003b04fc00ac04fcfe9e054c0063
020400ac0204feb20204ff52042800ac0495002406d700ac052a00ac03ef
0053054c0063054cff1604fc00ac042200ac03ab004603e6000f03e6001e
03e6fe6e03e6001e0613000004270030060000900550005e0550fef903f4
001003f4ff75040400a102fb00a103c90023038000a10380fed103690044
047800a10478fed404b4006601ec00a101ecfebd01ecff5403c900a103e1
0011060600a1049100a10387005e04aa006604aaff3b047800a103c500a1
035b004b0359001c038300100383fea2038300100552000003cc00360558
008704b1006604b1ff67048a0061048a0061044000990432006403920018
0430000003a5005903a5005902c8004e044c0099044c0099044100600478
0006023200940232ffec0232ff7a0232ff0f03a3009903b4000004660099
039700220302004d0303004d0438005a0438005a046c0028041200760441
00590349005c0319000304550090045500900455007d0455001605360055
053b00550369001205a900940592006405920064028900000000fd0a03f4
00000000fc360205009702050097020500970224004801ff006e01ff006e
04a10023044d00ad045a00ac037000ac037000ac037600ac0527000303e8
00ac03e8004503e800610668005503ca004b052200ac052200ac052200ac
020400ac0204ff50028d0007045800ac045800ac04e3000306fa000306d7
00ac04fc00ac070300ac054c0063054c006304f900ac042200ac04440061
03ad004703e6000f0438000f0438000f04b800220594000004270030051c
00ac04f500ac0472007406f200ac071e00ac04eb000f061800ac044000ac
0462005d04610062070800ac0471005304ff000f04f2000f0504000003f4
001003ee00a2040400a1031400a1031400a1032700a10480000e038000a1
038000300380002c0578004403800057048900a1048900960489009501ec
00a101ecff55023e000003ca00a103ca00a104320001060600a1047800a1
04aa006604a90066046a00a103c500a103cb006d034f00490359001c039d
001e039d001b042f0022050a000003cc0036048e00a1046900a103fa006d
062300a1064500a1045f0017058300a103e800a103e4006b03f000660632
00a103ff005c045f001f0463001f044d000006010001063200a103d5005c
044300000430000003d5009902c4009902c4009902d50099034900490477
00170434006003fb005d03fb005d03fb005d0583003e0362004b04530099
045300780453008801d6008501d6ff7201eaffd503b6009903b600990415
0016060200130569005f04470099062800990438005a0431005a042a0099
04340099043400990362005a032100510319000a06640099039f0022039f
001803d2002204fe005103770029045500990433009903c0004205d40099
05fe0099044a000a0554009903c20099038b004d038d005d05c6009903cb
00380453fff90443fff904270018036e0000036e0000036e00000000fca5
0000fca5029b010a029b00bf029b00bf03b5008503b5005e03b5005e03de
0064026000ed026000b10364007a0361005f01ff002a02240048022400bb
020500970586009601ff008c01ff002a01ff008c01ff002a035900880359
002b035900880359002b01ff002a0359002b02b6007402b600c002b60074
02b600c004190075041900ad04190075041900ad0317000102df001f03af
018a03fc01ae0317000b02df002d027300450273004503fcfff603fcfff6
073e0095073e0095073e0095073e009503fcfff903fc00c1020500970205
0097026d0085026d007a027400bf0274005a028400560284007502400084
0240007a024a00b0024a0067026d0085026d007a027400bf0274005a0284
00560284007503fc009e03fc007703fc007803fc007604b0006b043d006e
03fc006a03fc003d01c4008b0335008b057500000556000007f700000727
0000073c00000727000006ad00af06ad00af040e008005a4003f05ac004d
02b6000003fc003f04b30049040e002a03fc0057040e00600434005803fc
00b903fc004a040e005303fc006d0419002b040e003403f30035039f0061
03be005f039f0058039f002506210049083300ac03fc002406e300a10411
001d0494005f02cb002303ec006203ec00510455002203d700510436007e
03b20035043600630436005c040e0048040e00ae040e0072040e0067040e
0020040e0065040e006b040e0063040e0052040e005204430067028d0019
0381005c0373005903ac00260368006103b7006e0349002f03b5004b03bc
0052039f0050039f008d039f0065039f0062039f003a039f0067039f0061
039f005e039f0051039f00500494005f02cb002303ec006203ec00510428
002203d700510436007e03b20035043600630436005c040e0048040e00ae
040e0072040e0067040e0030040e0065040e006b040e0063040e0052040e
00520321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
00580321004801f8002302b0004b02ad004102db002502a6004502df005b
0291003202e1004b02df004402ea005102df005102d0005701bc006001bc
0058029d003801f500310252003c0249002d024a00140246003202510030
0238002202570025024d0023029d003801f500310252003c0249002d024a
001402460032025100300238002202570025024d002302b1ff4b03130044
055f0044056900440517004405690044052e00440553004405c9004e05c9
004e0567004705b7004705a2004705cd0027057d004505a20045052a0035
05b80048084e0048057d005c07c9005c03fc004603fc004c03fc006003fc
002b03fc005e03fc006003fc005903fc004503fc006503fc004c03fc0055
03fc005603fc003d05e9002c0405003506d300690443006102ed000703fc
00080484003a0550005e04660099066500660454005b0416004a073e009a
073e0096073e00c9073e00c9070e00af070e013a070e00af070e013a0a4e
009a0638009f046600280000000000000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420000
014200000142000001420000014200000142000001420000014200000142
000001420000014200000142000001420000014200000142000001420001
0000046100ad000700ac000700020010002f006500002318018200040001
0000002d02220000000300000000006400000000000300000001000e0064
0000000300000002000e0304000000030000000300300312000000030000
0004000e00640000000300000005001803420000000300000006000e0064
000000030000000700fa035a0000000300000008002a03d0000000030000
000900200454000000030000000a02a00064000000030000000b00560474
000000030000000c002a04ca000000030000000d029804f4000000030000
000e006c078c0001000000000000003207f800010000000000010007082a
00010000000000020007097a000100000000000300180981000100000000
00040007082a0001000000000005000c099900010000000000060007082a
0001000000000007007d09a50001000000000008001509e0000100000000
000900100a22000100000000000a0150082a000100000000000b002b0a32
000100000000000c00150a5d000100000000000d014c0a72000100000000
000e00360bbe0003000104090000006400000003000104090001000e0064
0003000104090002000e0304000300010409000300300312000300010409
0004000e00640003000104090005001803420003000104090006000e0064
000300010409000700fa035a0003000104090008002a03d0000300010409
000900200454000300010409000a02a00064000300010409000b00560474
000300010409000c002a04ca000300010409000d029804f4000300010409
000e006c078c00a9002000320030003000360020004d006900630072006f
0073006f0066007400200043006f00720070006f0072006100740069006f
006e002e00200041006c006c002000520069006700680074007300200052
0065007300650072007600650064002e00430061006c0069006200720069
002000690073002000610020006d006f006400650072006e002000730061
006e0073002000730065007200690066002000660061006d0069006c0079
0020007700690074006800200073007500620074006c006500200072006f
0075006e00640069006e006700730020006f006e0020007300740065006d
007300200061006e006400200063006f0072006e006500720073002e0020
004900740020006600650061007400750072006500730020007200650061
006c0020006900740061006c006900630073002c00200073006d0061006c
006c00200063006100700073002c00200061006e00640020006d0075006c
007400690070006c00650020006e0075006d006500720061006c00200073
006500740073002e0020004900740073002000700072006f0070006f0072
00740069006f006e007300200061006c006c006f00770020006800690067
006800200069006d007000610063007400200069006e0020007400690067
00680074006c007900200073006500740020006c0069006e006500730020
006f0066002000620069006700200061006e006400200073006d0061006c
006c0020007400650078007400200061006c0069006b0065002e00200043
0061006c0069006200720069002700730020006d0061006e007900200063
0075007200760065007300200061006e006400200074006800650020006e
006500770020007200610073007400650072006900730065007200200074
00650061006d00200075007000200069006e002000620069006700670065
0072002000730069007a0065007300200074006f00200072006500760065
0061006c002000610020007700610072006d00200061006e006400200073
006f006600740020006300680061007200610063007400650072002e0052
006500670075006c00610072004d006900630072006f0073006f00660074
003a002000430061006c0069006200720069003a00200032003000300035
00560065007200730069006f006e00200031002e0030003200430061006c
006900620072006900200069007300200065006900740068006500720020
006100200072006500670069007300740065007200650064002000740072
006100640065006d00610072006b0020006f007200200061002000740072
006100640065006d00610072006b0020006f00660020004d006900630072
006f0073006f0066007400200043006f00720070006f0072006100740069
006f006e00200069006e002000740068006500200055006e006900740065
0064002000530074006100740065007300200061006e0064002f006f0072
0020006f007400680065007200200063006f0075006e0074007200690065
0073002e004c007500630028006100730029002000640065002000470072
006f006f00740068007400740070003a002f002f007700770077002e006d
006900630072006f0073006f00660074002e0063006f006d002f00740079
0070006f006700720061007000680079002f006300740066006f006e0074
00730068007400740070003a002f002f0066006f006e0074006600610062
00720069006b002e0063006f006d0059006f00750020006d006100790020
0075007300650020007400680069007300200066006f006e007400200061
00730020007000650072006d006900740074006500640020006200790020
007400680065002000450055004c004100200066006f0072002000740068
0065002000700072006f006400750063007400200069006e002000770068
0069006300680020007400680069007300200066006f006e007400200069
007300200069006e0063006c007500640065006400200074006f00200064
006900730070006c0061007900200061006e00640020007000720069006e
007400200063006f006e00740065006e0074002e00200059006f00750020
006d006100790020006f006e006c0079002000280069002900200065006d
0062006500640020007400680069007300200066006f006e007400200069
006e00200063006f006e00740065006e0074002000610073002000700065
0072006d0069007400740065006400200062007900200074006800650020
0065006d00620065006400640069006e0067002000720065007300740072
0069006300740069006f006e007300200069006e0063006c007500640065
006400200069006e0020007400680069007300200066006f006e0074003b
00200061006e006400200028006900690029002000740065006d0070006f
0072006100720069006c007900200064006f0077006e006c006f00610064
0020007400680069007300200066006f006e007400200074006f00200061
0020007000720069006e0074006500720020006f00720020006f00740068
006500720020006f00750074007000750074002000640065007600690063
006500200074006f002000680065006c00700020007000720069006e0074
00200063006f006e00740065006e0074002e0068007400740070003a002f
002f007700770077002e006d006900630072006f0073006f00660074002e
0063006f006d002f007400790070006f006700720061007000680079002f
0066006f006e00740073002f00640065006600610075006c0074002e0061
007300700078a92032303036204d6963726f736f667420436f72706f7261
74696f6e2e20416c6c205269676874732052657365727665642e43616c69
6272692069732061206d6f6465726e2073616e732073657269662066616d
696c79207769746820737562746c6520726f756e64696e6773206f6e2073
74656d7320616e6420636f726e6572732e20497420666561747572657320
7265616c206974616c6963732c20736d616c6c20636170732c20616e6420
6d756c7469706c65206e756d6572616c20736574732e204974732070726f
706f7274696f6e7320616c6c6f77206869676820696d7061637420696e20
74696768746c7920736574206c696e6573206f662062696720616e642073
6d616c6c207465787420616c696b652e2043616c696272692773206d616e
792063757276657320616e6420746865206e657720726173746572697365
72207465616d20757020696e206269676765722073697a657320746f2072
657665616c2061207761726d20616e6420736f6674206368617261637465
722e526567756c61724d6963726f736f66743a2043616c696272693a2032
30303556657273696f6e20312e303243616c696272692069732065697468
6572206120726567697374657265642074726164656d61726b206f722061
2074726164656d61726b206f66204d6963726f736f667420436f72706f72
6174696f6e20696e2074686520556e697465642053746174657320616e64
2f6f72206f7468657220636f756e74726965732e4c756328617329206465
2047726f6f74687474703a2f2f7777772e6d6963726f736f66742e636f6d
2f7479706f6772617068792f6374666f6e7473687474703a2f2f666f6e74
66616272696b2e636f6d596f75206d617920757365207468697320666f6e
74206173207065726d6974746564206279207468652045554c4120666f72
207468652070726f6475637420696e207768696368207468697320666f6e
7420697320696e636c7564656420746f20646973706c617920616e642070
72696e7420636f6e74656e742e20596f75206d6179206f6e6c7920286929
20656d626564207468697320666f6e7420696e20636f6e74656e74206173
207065726d69747465642062792074686520656d62656464696e67207265
737472696374696f6e7320696e636c7564656420696e207468697320666f
6e743b20616e6420286969292074656d706f726172696c7920646f776e6c
6f6164207468697320666f6e7420746f2061207072696e746572206f7220
6f74686572206f75747075742064657669636520746f2068656c70207072
696e7420636f6e74656e742e687474703a2f2f7777772e6d6963726f736f
66742e636f6d2f7479706f6772617068792f666f6e74732f64656661756c
742e617370780000b2090320b80284b40918014a20b80283b40918014a20
b80282b40918014a20b80281b40918014a20b80280b40918014a20b8027f
b40918014a20b8027eb40918014a20b8027db40918014a20b8027cb40918
014a20b8027bb40918014a20b8027ab40918014a20b80279b40918014a20
b80278b40918014a20b80277b40918014a20b80276b40918014a20b80275
b40918014a20b80274b40918014a20b80273b40918014a20b80271b40918
014a20b80270b40918014a20b8026fb40918014a20b8026eb40918014a20
b8026db40918014a20b8026cb40918014a20b8026bb40918014a20b8026a
b40918014a20b80269b40918014a20b80268b40918014a20b80267b40918
014a20b80266b40918014a20b80265b40918014a20b80264b40918014a20
b80263b40918014a20b80262b40918014a20b80261b40918014a20b80260
b40918014a20b8025fb40918014a20b8025eb40918014a20b8025db40918
014a20b8025cb40918014a20b8025bb40918014a20b8025ab40918014a20
b80259b40918014a20b80258b40918014a20b80257b40918014a20b80256
b40918014a20b80255b40918014a20b80254b40918014a20b80253b40918
014a20b80252b40918014a20b80251b40918014a20b80250b40918014a20
b8024fb40918014a20b8024eb40918014a20b8024db40918014a20b8024c
b40918014a20b8024bb40918014a20b8024ab40918014a20b80249b40918
014a20b80248b40918014a20b80247b40918014a20b80246b40918014a20
b80245b40918014a20b80244b40918014a20b80243b40918014a20b80242
b40918014a20b80241b40918014a20b80240b40918014a20b8023fb40918
014a20b8023eb40918014a20b8023db40918014a20b8023cb40918014a20
b8023bb40918014a20b8023ab40918014a20b80239b40918014a20b80238
b40918014a20b80237b40918014a20b80236b40918014a20b80235b40918
014a20b80234b40918014a20b80233b40918014a20b80232b40918014a20
b80231b40918014a20b80230b40918014a20b8022fb40918014a20b8022e
b40918014a20b8022db40918014a20b8022cb40918014a20b8022bb40918
014a20b8022ab40918014a20b80229b40918014a20b80228b40918014a20
b80227b40918014a20b80226b40918014a20b80225b40918014a20b80224
b40918014a20b80223b40918014a20b80222b40918014a20b80221b40918
014a20b80220b40918014a20b8021fb40918014a20b8021eb40918014a20
b8021db40918014a20b8021cb40918014a20b8021bb40918014a20b8021a
b40918014a20b80219b40918014a20b80218b40918014a20b80217b40918
014a20b80216b40918014a20b80215b40918014a20b80214b40918014a20
b80213b40918014a20b80212b40918014a20b80211b40918014a20b80210
b40918014a20b8020fb40918014a20b8020eb40918014a20b8020db40918
014a20b8020cb40918014a20b8020bb40918014a20b8020ab40918014a20
b80209b40918014a20b80208b40918014a20b80207b40918014a20b80206
b40918014a20b80205b40918014a20b80204b40918014a20b80203b40918
014a20b80202b40918014a20b80201b40918014a20b80200b40918014a20
b801ffb40918014a20b801feb40918014a20b801fdb40918014a20b801fc
b40918014a20b801fbb40918014a20b801fab40918014a20b801f9b40918
014a20b801f8b40918014a20b801f7b40918014a20b801f6b40918014a20
b801f5b40918014a20b801f4b40918014a20b801f3b40918014a20b801f2
b40918014a20b801f1b40918014a20b801f0b40918014a20b801efb40918
014a20b801eeb40918014a20b801edb40918014a20b801ecb40918014a20
b801ebb40918014a20b801eab40918014a20b801e9b40918014a20b801e8
b40918014a20b801e7b40918014a20b801e6b40918014a20b801e5b40918
014a20b801e4b40918014a20b801e3b40918014a20b801e2b40918014a20
b801e1b40918014a20b801e0b40918014a20b801dfb40918014a20b801de
b40918014a20b801ddb40918014a20b801dcb40918014a20b801dbb40918
014a20b801dab40918014a20b801d9b40918014a20b801d8b40918014a20
b801d7b40918014a20b801d6b40918014a20b801d5b40918014a20b801d4
b40918014a20b801d3b40918014a20b801d2b40918014a20b801d1b40918
014a20b801d0b40918014a20b801cfb40918014a20b801ceb40918014a20
b801cdb40918014a20b801ccb40918014a20b801cbb40918014a20b801ca
b40918014a20b801c9b40918014a20b801c8b40918014a20b801c7b40918
014a20b801c6b40918014a20b801c5b40918014a20b801c4b40918014a20
b801c3b40918014a20b801c2b40918014a20b801c1b40918014a20b801c0
b40918014a20b801bfb40918014a20b801beb40918014a20b801bdb40918
014a20b801bcb40918014a20b801bbb40918014a20b801bab40918014a20
b801b9b40918014a20b801b8b40918014a20b801b7b40918014a20b801b6
b40918014a20b801b5b40918014a20b801b4b40918014a20b801b3b40918
014a20b801b2b40918014a20b801b1b40918014a20b801b0b40918014a20
b801afb40918014a20b801aeb40918014a20b801adb40918014a20b801ac
b40918014a20b801abb40918014a20b801aab40918014a20b801a9b40918
014a20b801a8b40918014a20b801a7b40918014a20b801a6b40918014a20
b801a5b40918014a20b801a4b40918014a20b801a3b40918014a20b801a2
b40918014a20b801a1b40918014a20b801a0b40918014a20b8019fb40918
014a20b8019eb40918014a20b8019db40918014a20b8019cb40918014a20
b8019bb40918014a20b8019ab40918014a20b80199b40918014a20b80198
b40918014a20b80197b40918014a20b80196b40918014a20b80195b40918
014a20b80194b40918014a20b80193b40918014a20b80192b40918014a20
b80191b40918014a20b80190b40918014a20b8018fb40918014a20b8018e
b40918014a20b8018db40918014a20b8018cb40918014a20b8018bb40918
014a20b8018ab40918014a20b80189b40918014a20b80188b40918014a20
b80187b40918014a20b80186b40918014a20b80185b40918014a20b80184
b40918014a20b80183b40918014a20b80182b40918014a20b80181b40918
014a20b80180b40918014a20b8017fb40918014a20b8017eb40918014a20
b8017db40918014a20b8017cb40918014a20b8017bb40918014a20b8017a
b40918014a20b80179b40918014a20b80178b40918014a20b80177b40918
014a20b80176b40918014a20b80175b40918014a20b80174b40918014a20
b80173b40918014a20b80172b40918014a20b80171b40918014a20b80170
b40918014a20b8016fb40918014a20b8016eb40918014a20b8016db40918
014a20b8016cb40918014a20b8016bb40918014a20b8016ab40918014a20
b80169b40918014a20b80168b40918014a20b80167b40918014a20b80166
b40918014a20b80165b40918014a20b80164b40918014a20b80163b40918
014a20b80162b40918014a20b80161b40918014a20b80160b40918014a20
b8015fb40918014a20b8015eb40918014a20b8015db40918014a20b8015c
b40918014a20b8015bb40918014a20b8015ab40918014a20b80159b40918
014a20b80158b40918014a20b80157b40918014a20b80156b40918014a20
b80155b40918014a20b80154b40918014a20b80153b40918014a20b80152
b40918014a20b80150b40918014a20b8014fb40918014a20b8014eb40918
014a20b8014cb40918014a20b8014bb40918014a20b8014ab40918014a20
b80149b40918014a20b80148b40918014a20b80147b40918014a20b80146
b40918014a20b80145b40918014a20b80144b40918014a20b80143b30918
014ab80284b21e3e1fb80283b21e151fb80282b21e3e1fb80281b21e3a1f
b80280b21e3e1fb8027fb21e3e1fb8027eb21e0c1fb8027db21e3e1fb802
7cb21e3e1fb8027bb21e3e1fb8027ab21e3e1fb80279b21d411fb80278b2
1d431fb80277b21d431fb80276b21d431fb80275b21d411fb80274b21d43
1fb80273b21d431fb80272b21d411fb80271b21d421fb80270b21d421fb8
026fb21d421fb8026eb21d431fb8026db21d431fb8026cb21d431fb8026b
b21c451fb8026ab21c451fb80269b21c451fb80268b21c451fb80267b21c
451fb80266b21c441fb80265b21c451fb80264b21c451fb80263b21c451f
b80262b21c451fb80261b21c451fb80260b21c451fb8025fb21c451fb802
5eb21c441fb8025db21c451fb8025cb21c451fb8025bb21c451fb8025ab2
1c451fb80259b21c451fb80258b21c451fb80257b21c451fb80256b21c45
1fb80255b21c451fb80254b21c451fb80253b21c451fb80252b21c451fb8
0251b21c451fb80250b21c451fb8024fb21c451fb8024eb21c451fb8024d
b21c451fb8024cb21c451fb8024bb21c451fb8024ab21b491fb80249b21b
491fb80248b21b4a1fb80247b21b4a1fb80246b21b4b1fb80245b21b4c1f
b80244b21b4c1fb80243b21b4c1fb80242b21b4b1fb80241b21b491fb802
40b21b491fb8023fb21b4a1fb8023eb21b4a1fb8023db21b4a1fb8023cb2
1b4b1fb8023bb21b4b1fb8023ab21b4c1fb80239b21b4c1fb80238b21b4c
1fb80237b21b4c1fb80236b21b4c1fb80235b21b491fb80234b21b491fb8
0233b21b4a1fb80232b21b4a1fb80231b21b4a1fb80230b21b4b1fb8022f
b21b4b1fb8022eb21b4c1fb8022db21b4c1fb8022cb21b4c1fb8022bb21b
4c1fb8022ab21b4c1fb80229b21b4c1fb80228b21b4c1fb80227b21b491f
b80226b21b491fb80225b21b4a1fb80224b21b4a1fb80223b21b4a1fb802
22b21b4b1fb80221b21b4b1fb80220b21b4c1fb8021fb21b4c1fb8021eb2
1b4c1fb8021db21b4c1fb8021cb21b4c1fb8021bb21b4c1fb8021ab21a4e
1fb80219b21a4e1fb80218b21a4f1fb80217b21a4f1fb80216b21a4e1fb8
0215b21a4e1fb80214b21a4f1fb80213b21a4f1fb80212b21a4f1fb80211
b21a4e1fb80210b21a4e1fb8020fb21a4f1fb8020eb21a4f1fb8020db21a
4f1fb8020cb21a4e1fb8020bb21a4e1fb8020ab21a4e1fb80209b21a4f1f
b80208b21a4f1fb80207b21a4f1fb80206b219501fb80205b219511fb802
04b219511fb80203b219501fb80202b219511fb80201b219511fb80200b2
19511fb801ffb219511fb801feb219501fb801fdb219511fb801fcb21951
1fb801fbb219511fb801fab219501fb801f9b219511fb801f8b219511fb8
01f7b219511fb801f6b219511fb801f5b218541fb801f4b218531fb801f3
b218541fb801f2b218541fb801f1b218541fb801f0b218531fb801efb218
541fb801eeb218541fb801edb218541fb801ecb218531fb801ebb218531f
b801eab218541fb801e9b218541fb801e8b218541fb801e7b218541fb801
e6b218531fb801e5b218541fb801e4b218531fb801e3b218541fb801e2b2
18541fb801e1b218541fb801e0b218531fb801dfb218531fb801deb21854
1fb801ddb218541fb801dcb218541fb801dbb218541fb801dab218531fb8
01d9b218541fb801d8b218541fb801d7b217571fb801d6b217561fb801d5
b217561fb801d4b217571fb801d3b217571fb801d2b217571fb801d1b217
571fb801d0b217561fb801cfb217561fb801ceb217571fb801cdb217571f
b801ccb217571fb801cbb217571fb801cab217561fb801c9b217561fb801
c8b217571fb801c7b217571fb801c6b217571fb801c5b217571fb801c4b2
17571fb801c3b217561fb801c2b217571fb801c1b217571fb801c0b21757
1fb801bfb217561fb801beb217561fb801bdb217571fb801bcb217571fb8
01bbb217571fb801bab217571fb801b9b217571fb801b8b217561fb801b7
b217571fb801b6b217571fb801b5b217571fb801b4b217571fb801b3b216
3f1fb801b2b2165b1fb801b1b2165b1fb801b0b2165b1fb801afb2165b1f
b801aeb2165b1fb801adb2165b1fb801acb2165b1fb801abb2165b1fb801
aab2163e1fb801a9b2163f1fb801a8b2163f1fb801a7b2165b1fb801a6b2
165b1fb801a5b2165b1fb801a4b2165b1fb801a3b2165b1fb801a2b2165b
1fb801a1b2165b1fb801a0b2165b1fb8019fb2163e1fb8019eb2163f1fb8
019db2163f1fb8019cb2165b1fb8019bb2165b1fb8019ab2165b1fb80199
b2165b1fb80198b2163e1fb80197b2165b1fb80196b2165b1fb80195b216
5b1fb80194b2163e1fb80193b2163f1fb80192b2163f1fb80191b2165b1f
b80190b2165b1fb8018fb2165b1fb8018eb2165b1fb8018db2165b1fb801
8cb2163f1fb8018bb2165b1fb8018ab2165b1fb80189b2165b1fb80188b2
165b1fb80187b2165b1fb80186b215611fb80185b215621fb80184b21562
1fb80183b215661fb80182b215661fb80181b215551fb80180b215451fb8
017fb215361fb8017eb215361fb8017db215611fb8017cb215621fb8017b
b215621fb8017ab215641fb80179b215661fb80178b215661fb80177b215
661fb80176b215661fb80175b215661fb80174b215661fb80173b215451f
b80172b215621fb80171b215621fb80170b215631fb8016fb215641fb801
6eb215661fb8016db215661fb8016cb215661fb8016bb215661fb8016ab2
15661fb80169b215621fb80168b215621fb80167b215611fb80166b21564
1fb80165b215641fb80164b215661fb80163b215661fb80162b215661fb8
0161b215661fb80160b215661fb8015fb215661fb8015eb215551fb8015d
b215451fb8015cb215451fb8015bb215361fb8015ab215611fb80159b215
621fb80158b215621fb80157b215631fb80156b215641fb80155b215661f
b80154b215661fb80153b215661fb80152b215661fb80151b214401fb801
50b214551fb8014fb214561fb8014eb214831fb8014db2142d1fb8014cb2
14401fb8014bb214401fb8014ab214411fb80149b214401fb80148b21440
1fb80147b214411fb80146b2147e1fb80145b214871fb80144b2147f1fb8
0143b214801fb80142b212461fb80141b212461fb80140b212461fb8013f
b212461fb8013eb212441fb8013db212461fb8013cb211591fb8013bb211
591fb8013ab2115b1fb80139b2115b1fb80138b211471fb80137b211581f
b80136b2115a1fb80135b2115b1fb80134b2115b1fb80133b2112c1fb801
32b211471fb80131b211551fb80130b211571fb8012fb211571fb8012eb2
11581fb8012db211591fb8012cb211591fb8012bb2115a1fb8012ab2115a
1fb80129b2115b1fb80128b2115b1fb80127b2115b1fb80126b2115b1fb8
0125b211561fb80124b211561fb80123b211571fb80122b211581fb80121
b211591fb80120b2115a1fb8011fb2115a1fb8011eb2115b1fb8011db211
5b1fb8011cb2115b1fb8011bb2115b1fb8011ab2115b1fb80119b2105d1f
b80118b2105e1fb80117b2105f1fb80116b2105f1fb80115b2105f1fb801
14b2105f1fb80113b2105f1fb80112b2105d1fb80111b2105e1fb80110b2
105f1fb8010fb2105f1fb8010eb2105f1fb8010db2105f1fb8010cb2105d
1fb8010bb2105e1fb8010ab2105f1fb80109b2105f1fb80108b2105f1fb8
0107b2105f1fb80106b2105d1fb80105b2105e1fb80104b2105f1fb80103
b2105f1fb80102b2105f1fb80101b2105f1fb8010040ff0f621fff0f621f
fe0f631ffd0f641ffc0f621ffb0f621ffa0f621ff90f631ff80f641ff70f
641ff60f641ff50f641ff40f621ff30f621ff20f631ff10f641ff00f641f
ef0f641fee0f641fed0f621fec0f621feb0f631fea0f641fe90f641fe80f
641fe70f641fe60e671fe50e681fe40e681fe30e681fe20e681fe10e671f
e00e681fdf0e681fde0e681fdd0e671fdc0e681fdb0e681fda0e681fd90e
681fd80d6b1fd70d311fd60d6b1fd50d6c1fd40d261fd30d261fd20d6c1f
d10d2b1fd00d2b1fcf0d2b1fce0d6b1fcd0d6c1fcc0d6d1fcb0d6b1fca0d
6c1fc90d6d1fc80d6a1fc70d691fc60d681fc50d671fc40d261fc30d311f
c20d311fc10d311f40ffc00d311fbf0d311fbe0d311fbd0c711fbc0c721f
bb0c731fba0c741fb90c741fb80c741fb70c711fb60c711fb50c721fb40c
731fb30c741fb20c741fb10c741fb00c741faf0b791fae0b7a1fad0b7c1f
ac0b7d1fab0b7e1faa0b7e1fa90b7e1fa80b7e1fa70b7e1fa60b7e1fa50b
2d1fa40b7e1fa30b7e1fa20b791fa10b7e1fa00b6b1f9f0b791f9e0b7e1f
9d0b7e1f9c0b791f9b0b7a1f9a0b7c1f990b7d1f980b7e1f970b7e1f960b
7e1f950b7e1f940b7e1f930b7e1f920b6b1f910b2d1f900a4e1f8f0a4f1f
8e0a671f8d0aa51f8c0aa71f8503251f8403381f8301381f8255805581ab
80557f557d557eab7d550b7d010b7d1b7d4b7d7b7dab7ddb7d404d060a7c
557a557bab7a557955775578ab775576ab755504751475747503f47501ab
750144750130750102007510752075030c7455725573ab72550072507280
72b072043bb072e072020072010ab8ffc0b3721b1e46b8ffc0407c720d10
4671556f5570ab6f556e666d556a03251f6938675568ab67556638645565
ab645563386255613860555f385d555eab5d555c385a555bab5a55593858
555703251f5638545555ab54555338515552ab51554f384e554e03251f4d
384b554cab4b554a38485549ab4855473846554503381f001c101c201c03
10b8ffc0404e1c1b1e46001b0142301b401be01bf01b04001bb01bc01b03
120f1a1f1a02290f1901434f19016f197f198f19030f18cf18024018292c
460f17cf17df17ef1704134017292e460016101620160315b8ffc0b3164d
5446b8ffc0b3163f4446b8ffc0b316313546b8ffc0404d162326460f1501
0f151f1502451f15010011e011f0110315bf10cf10020f0f010f0fff0f02
400f3135460f0e1f0e020f0e1f0eff0e03400e3137460f0d1f0d020f0d1f
0dff0d0316400d313746b8ffc040270c5054460f0b1f0b02553f0b4f0b02
400b3f4346400b2d30460003012001010001100120010308b8ffc0b40115
1f4603bc01000100000500010190b154532b2b4bb80800524bb008505bb0
0188b02553b00188b040515ab00688b000555a5b58b101018e59b1010243
54b0144b515a58b101018e59858d8d001d424bb01d5358b203a0a01d4259
4bb0805358b20340401d42594bb0ff5358b20300001d42592b5e7375732b
2b745e732b2b5e73742b73742b7374745e7301755e73742b2b2b2b5e732b
5e732b7374755e735e735e73755e732b5e73002b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b5e73755e732b2b5e735f73
737373742b2b2b2b2b5e73742b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b012b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2bb1000243545841ff02840064028300
64028200640281006402800064027f0064027e0064027d0064027c006402
7b0064027a00640279006402780064027700640276006402750064027400
64027300640271006402700064026f0064026e0064026d0064026c006402
6b0064026a00640269006402680064026700640266006402650064026400
6402630064026200640261006402600064025f0064025e0064025d006402
5c0064025b0064025a006402590064025800640257006402560064025500
640254006402530064025200640251006402500064024f0064024e006402
4d0064024c0064024b0064024a0064024900640248006402470064024600
64024500640244006402430064024200640241006402400064023f006402
3e0064023d0064023c0064023b0064023a00640239006402380064023700
640236006402350064023400640233006402320064023100640230006402
2f0064022e0064022d0064022c0064022b0064022a006402290064022800
640227006402260064022500640224006402230064022200640221006402
200064021f0064021e0064021d0064021c0064021b0064021a0064021900
640218006402170064021600640215006402140064021300640212006402
11006402100064020f0064020e0064020d0064020c0064020b0064020a00
640209006402080064020700640206006402050064020441ff0064020300
6402020064020100640200006401ff006401fe006401fd006401fc006401
fb006401fa006401f9006401f8006401f7006401f6006401f5006401f400
6401f3006401f2006401f1006401f0006401ef006401ee006401ed006401
ec006401eb006401ea006401e9006401e8006401e7006401e6006401e500
6401e4006401e3006401e2006401e1006401e0006401df006401de006401
dd006401dc006401db006401da006401d9006401d8006401d7006401d600
6401d5006401d4006401d3006401d2006401d1006401d0006401cf006401
ce006401cd006401cc006401cb006401ca006401c9006401c8006401c700
6401c6006401c5006401c4006401c3006401c2006401c1006401c0006401
bf006401be006401bd006401bc006401bb006401ba006401b9006401b800
6401b7006401b6006401b5006401b4006401b3006401b2006401b1006401
b0006401af006401ae006401ad006401ac006401ab006401aa006401a900
6401a8006401a7006401a6006401a5006401a4006401a3006401a2006401
a1006401a00064019f0064019e0064019d0064019c0064019b0064019a00
640199006401980064019700640196006401950064019400640193006401
9200640191006401900064018f0064018e0064018d0064018c0064018b00
64018a006401890064018800640187006401860064018500644180018400
6401830064018200640181006401800064017f0064017e0064017d006401
7c0064017b0064017a006401790064017800640177006401760064017500
640174006401730064017200640171006401700064016f0064016e006401
6d0064016c0064016b0064016a0064016900640168006401670064016600
64016500640164006401630064016200640161006401600064015f006401
5e0064015d0064015c0064015b0064015a00640159006401580064015700
64015600640155006401540064015300640152006401500064014f006401
4e0064014c0064014b0064014a0064014900640148006401470064014600
640145006401440064014300642b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b592b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b
2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b2b185f5e0000>
[323 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 3 <> QJJAAA+Calibri AddT42Char 
1 0 0 <00050000fe7303d2050e000300070039004d004e005bbc000d0152001600
3a01b5b5154444082d07be0143000200200154000800010143400f04020d
b71a1a3f23b735068d031149b8012db43f078d0202003ffddefdce2ffdde
ed12392fed012fdde1dee110f1ce11392f33e1d4e1313001112111011121
1101140e020707140623222e02352726363333323e0235342623220e0223
222e02353436373e0333321e0203140e0223222e0235343e0233321e0201
03d2fc5a034ffd06027e233f5633051e1a0f140d0605021c18122d3c2510
535b253c2e1d0703070603050807283742224b6c4522da07111d15161d12
0808121d16151d1107fddb050efaf2050efb43046cfb9403063b5c3f2403
980a0802040606b81e18192a3b2149560f1310040b13101116080712110c
28445cfd86151c120808121c15151d120808121dfd4d>QJJAAA+Calibri AddT42Char 
QJJAAA+Calibri /CharStrings get begin
/space 3 def
end
QJJAAA+Calibri /Encoding get
dup 32 /space put
pop
end
%ADOEndSubsetFont
/GCLSWZ+Calibri /QJJAAA+Calibri findfont ct_VMDictPut
/GCLSWZ+Calibri*1 
[32{/.notdef}rp /space 223{/.notdef}rp]
GCLSWZ+Calibri nf
GCLSWZ+Calibri*1 [16.5674 0 0 -16.536 0 0 ]msf
494.751 133.081 mo
( )sh
324.157 106.458 mo
342.762 114.239 li
324.157 122.02 li
cp
280.739 111.644 mo
327.259 111.644 li
327.259 116.832 li
280.739 116.832 li
cp
.707 .648 .637 .684 cmyk
f
.06 lw
2 lj
324.157 106.458 mo
342.762 114.239 li
324.157 122.02 li
324.157 106.458 li
cp
280.739 111.644 mo
327.259 111.644 li
327.259 116.832 li
280.739 116.832 li
cp
@
0 0 0 1 cmyk
%ADOBeginSubsetFont: GFNBAA+MyriadPro-Regular Initial
%ADOt1write: (1.0.24)
12 dict dup begin
/FontType 1 def
/FontName /GFNBAA+MyriadPro-Regular def
/FontInfo 7 dict dup begin
/Notice (Copyright 2000, 2004 , 2005Adobe Systems Incorporated. All Rights Reserved. U.S. Patent D454,582.Myriad is a registered trademark of Adobe Systems Incorporated.) def
/Weight (Regular) def
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 46 /period put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 95 /underscore put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 118 /v put
dup 119 /w put
dup 127 /f_f_i put
def
/FontBBox {-157 -250 1126 952} def
end
systemdict begin
dup /Private
12 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [-11 -0 674 686 484 495 650 661 710 721 241 248] def
/OtherBlues [438 444 260 266 -209 -198 -153 -147 -118 -112] def
/BlueScale 0.0604583 def
/StdHW [67] def
/StdVW [88] def
/StemSnapV [88 92] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
28 dict dup begin
/space <1C60D8A8C9B896187A> |-
/period <1C60D8A8C9B89DB76243241956147685E9D04DE27F343A7EF0A25AE
4387D3A3D08796B751439580940B3> |-
/M <1C60D8A8C9B6D9EA19A14B847D0E8EB8BF4B471CD7A6A1199FBF0367BA32
10A68B70701B9284BFB2267E01EDF19411682FDEA0A61E4E1B02AB19A085A090
981D7B2D5305D7BA8D88FBD7AADFDB7642CCF5DD11DBF6878FEF2B11C57265F7
3526C5EBB1D5352B9863C29DD2C5087C1526E4892F6303AB66F633145B0858E1
08CA9CCC75D7B9048852C503CE8C743045EB51C68873A60D6BB517AD466CC06B
F4> |-
/P <1C60D8A8C9B7876E235FC614E63EC6DDBF5153E7285DD594B4A59D9CFED1
9B0A38B3CB0F4F897304E6BAD55EEDCCDEBF2A9B8B5B52460C00D9A306CF6EA5
1A21B19E9B3BA70F64BDE9BAA61A839E8FB51C8743E8A82D68D8F927748ABF13
844E9C386BBD03D70DAF9D> |-
/R <1C60D8A8C9B7818197CA8C10BDEF079227EB9AB9E6BB1BEBF94303949A9D
57DC48BE0CBABA6B2F38795EB0B14AFB9419172734A7257099DC3131543D95EC
80112D2F430DDFF753ABFCE1731E56B5A475FFECBCAD6983FFE444230AF84A1C
69A43CAA071BDB68809E38DF7EA042893D9260BCBAB70D4727B474D6> |-
/S <1C60D8A8C9B7AED8035FF9728E9C78ACC28F20CC915E5C8F246730235E09
69B06AB4DFB6CD5E100F262B534390FC7CA7055C28ED1E42C84B636867D8A31D
300B2F5F2294ED82992DF7233E5C523837B149A4D365755830345623E9A4E055
720FE49A232DC2065A07388CBE9EB02B9DD8FF5931F0EA71B8534F17457D88BE
F90224252D97A481A1378A56A9E08907> |-
/underscore <1C60D8A8C9B7A73DB5FD3C3C923B7843323CF8B6FBF0CBA0C46
FB7> |-
/a <1C60D8A8C9B75946039FC5B56ED6A5087B2F0B1630F4B839ECBCEEA44E70
3DC4106323B0FE7E2AB642908C4D63FEEE93FCF9AFDA709EC76B2A6B438866EA
54711295464BD953D3EBDCF028F138C8DA98583AEFEA07E0E3D9318DCAA5235C
81F8CAE77869F7E7DB4FE2A895A8751E9713E402E5F56B8D9F8A85A4E816A3F5
736139BBC6E35318419585355BABA3365F9437068F54844360043E93A0587094
DC5B241D2351AD29DD00EC> |-
/b <1C60D8A8C9B7E2CE503F0CE2BC5702634999087F49AD7EC68AF6E0760DC3
07EA142776CFB148873830CAEB36AE950493D9F2EDD2FDA5A7A4D6C282750C8E
40E669AF5CD1CA9E6E42E82091954CDD12078AEF15744C61E28006D0183E186D
2F0A7A37935A5E3F3F87ED5DA87F58431826C86E3F76DCDA2973426486D4612C
A2B5207C22CF15FC5AC58B8A498D4D400E19494D5A529E7B3708AA62887C27C0
34690D9798225445C694> |-
/c <1C60D8A8C9B77BBBDD6F2DE36836EA750B0DCDA2C7596B2C0CA5D427D1A2
992AF5BF4D94EE82845832F4DD4400321814ECD5D3CE66072F7E5E7C5430EC46
9D5F7161571A32A96A021C1AB03ECA050447FC0A> |-
/d <1C60D8A8C9B7E7C1D822193538A56B13640F1C3EE80C415BBD7C96E2BF73
396DB0D9C9230D7704B1D4903E1B0E823160B234020A503047A686661C34B500
4CDCF7754772CF263A11D6B8FC7868BB12CD6A915ACD880C8B0638C394417FA3
7BE535ADC2EFE334704B66B55FC93ABE48255DC988A5DFABA294BF5BF2E02BE2
314DCE6531FAA5DCB4D56DF6C62A6139D41B024DA04272B4B444C44FEBCD2F65
888A63654699808BEDAA> |-
/e <1C60D8A8C9B7A66F85F3DBE5AE1E76F6AE0C2DA4B5701EEA600446C4909F
C3F4672ADE87F21B90EA46B653B923660515A1F0669DD61FD45BFFE5F30C06F2
5F4918DC3BDE9DA8749DE48AB2064D02996B1992D92D740E924FC0328428444D
7F57E818435DFAAB95E4B5> |-
/f <1C60D8A8C9B8469EE0EEFD5AEC6CA97A72064EDB5F8138E6D1529C05D71A
D800DE9767801FDF375EF8CD5D17CF8177ABFE55C13157A524A3264793E34DF6
7E6CC595BF4246BA776AF32A10AFD87F61B0A56EEC2C24F2F2> |-
/h <1C60D8A8C9B790A816BA887E1EEB5E8F3559B4B8B5AF3C1F8CE7A16D3E22
CB112738E5F8A1CE5D2620C4575F3210C0FAB8897CBBEEEBEDB653A75B1382B6
89444B1091E64895264926A7E71A69D151CC5CB184DF1BCC2A12C3> |-
/i <1C60D8A8C9B88055FF27B3934D040E8DA53B043AB8CFF68E8D519FEAB9D5
A4874DC9B90E63751BC12355D9D8276E2A66CDDB9CE6DD75534C5A550BE990A2
B15CF4B9FA0C60C03D9F761CF6CBFF51A513DE> |-
/k <1C60D8A8C9B746F4FCFA28E242EA979943B301877051CD8A73D26CF9327F
F61FDBFBD8D5E47777F54E7B216151ACE29820F0FBC0D027459AD792F23CAF37
B81A45640487F696385294E8CA> |-
/l <1C60D8A8C9B87EB6C12D27FEBAAD9108B57B5CEF2AA76DC2FD884A8623> |-
/m <1C60D8A8C9B6B770778B71072D7C1E07589A410E5C64818087655066490C
3ED2B909917C7BC0728B14D2333B4F2D4E6CDB7289552EC38E07C385447196A6
FC80676BB9787067F8DE500C6FC7D1A575A85B3402140944D912F286F0EE619E
6F139DB3EF4C05E3E0A0041D31E971FFC094FB694326327D937DFA882F7A9EEB
B38D578A289643EC8BA4470A41469EE238EB0C3D041FDB99E682E3290582B0A8
09> |-
/n <1C60D8A8C9B790A816BA887E1EEB5EA22251B57591287932F226429470C6
F5104125FD46BD566113711AC75833C9FEE3F6D848EF41B3B29B720FE91D5709
9036ACB328FF5F27B548C47B09DAAAB22DF7203FD31E4DFCBB6F334EB2AEBC18
B95062C1F81D8B> |-
/o <1C60D8A8C9B7967683396363C51B2F1979461F3A00FDA36B3FB5488A82D6
4C89239EA1345F90503AC4C4937CA1D31AE0456BBFC2CD7E6DF92400B629A703
DCCA1CE977B1CE09DA127A889A27E67B6982945251> |-
/p <1C60D8A8C9B7E2CE2B5D9AEC775B38F2FC9D79EBC145C31F687483AFB942
5A746B3BD7EE9055225E02124098D25B9CF96FA1051D1E04801504B9A2644D4E
DA37278A874E72EE68CB4BF43DAEF5F603031626DA7EA34D8AEBCA2BE067F349
B81CB3CF23097AE4AA47ED040466C2627C304F1CEA4C41EB090E70EFAF813E72
9DF2CD046B5547886AEE74294DF2AF6781AD20571E13346A26CAD62FB20DB9FC
6337027CFBBA> |-
/r <1C60D8A8C9B825FA276057E42F8B6B56BE61CF56C49E848F1F8C0DBB4CC3
55A060580D0A93A5AC675863E967C6888348BB6A0307CAE2C7E5A0C04CCE8153
CABABF82A896EFF75F39B554C74CA1E2126AA0E73BE8B772EBBEE30A71972C63
0D7D24526AEEFC04035142C31FA6B3B108962236> |-
/s <1C60D8A8C9B70FAD6F31E6985339BF1E83F7AE60D35F00D12D254421A910
254A631180139D8657646BEFE6F4E230D67403BE5D54183419D174C6F3CC672F
E0922A5983FC4713FC0C33086E01CB29AB5EA82B559EB0CB9E6675519A48B6C9
9CE7F0B78BC22FE4480BA1B895> |-
/t <1C60D8A8C9B821B35E7D138AF8799F79BEF170B4854FD4064F6438DB12B9
6A336B1B646B9C985443CCD47885AEB163F96326A737220357369BBCF971367A
B24D31D50A9A11CBCBD128D32F4EE4E3175171904BA0C5> |-
/v <1C60D8A8C9B75A17982D11DC3FC677436DFDC6EA949B3A8A476902498B78
CD729866CE567C88B5C34208EAE301B621840AC4E9FB5564F4B9810C75BCD816
68335F45F1BB1571F13F2D708D47> |-
/w <1C60D8A8C9B615D1D39C3ADF830FB08A1A35A87DCFD157E58FABDD21BA80
846DED508D58D627D5468CDEA878B4EBB2BC39F9E17357A3B538845D213A53BE
481E0D6B92FA11EAB84DAA099CD1E52DEE6734C0A900F3A37F8B6CBD74174B2B
AF5100CBE402299FC69ADC71D2D61D78D40F7491649EB6D9D0DC1C64B5ED89A2
BADD> |-
/f_f_i <1C60D8A8C9B6A283DF22947627426437E388E6836B543095A1107A19
1B7113BEBE1C7C168B7E7FF99D71494ACAF0342FDEDC40FD26F1496547257CFD
6174FBDB5F13DEC00CD4428235E1210A9CE66A106219A0278EA849731C01D783
9DE72CC5AB2078B62F42BC46F34762879D7231E7F3371FB79AD9BA10DFE7E270
9335AAF653369F022A5061FCF88C0EC8D792C737F06B054B8EDB7DAC18FA125E
BF15B24E06A219AA8D73E8282411E2D0EC94D24B2F79D6C0F4720F409F6D1153
6D74C144A9F47508FAA8DAF5DFC9914CFD02CC0D4E73AFE594385553B0C81C29
241D2211D3E1BD117A8ED7743CB6942BFAD061DB579572FB7340B43C0CE1D5F0
62A4A0DD106F8F7DB53916CFEAE02C2EF589419C81817782B1A6> |-
/.notdef <1C60D8A8C9B7A73DC56ED86B010528A4AE924D9B6A4AEB6B57364C
BBC1FC7743E3F5B16223C8BD8911534CBC6ED69BD6AA5A2C449B7A6EF268B5A0
D64C6C74FC81FE7341B7ED82094E8390BB44FFD88AB4DB74763338FA8306E917
B17192> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/GCLSXA+MyriadPro-Regular /GFNBAA+MyriadPro-Regular findfont ct_VMDictPut
/GCLSXA+MyriadPro-Regular*1 
[32{/.notdef}rp /space 13{/.notdef}rp /period 30{/.notdef}rp /M 2{/.notdef}rp /P 
/.notdef /R /S 11{/.notdef}rp /underscore /.notdef /a /b 
/c /d /e /f /.notdef /h /i /.notdef 
/k /l /m /n /o /p /.notdef /r 
/s /t /.notdef /v /w 7{/.notdef}rp /f_f_i 128{/.notdef}rp]
GCLSXA+MyriadPro-Regular nf
GCLSXA+MyriadPro-Regular*1 [11.4651 0 0 -11.4651 0 0 ]msf
211.008 147.527 mo
(where c_kl is Partial Spearman correlation )
[8.43823 6.36304 5.74409 3.6344 5.74409 2.43066 5.13634 5.73256 5.57196 2.70569 2.43066 2.68277 
4.54013 2.43066 5.8013 5.52612 4.0242 3.79489 2.68274 5.52612 2.70569 2.43066 5.65225 6.52365 
5.74408 5.52612 3.79489 9.56189 5.52612 6.36304 2.43066 5.06757 6.29428 3.79492 3.63437 5.74411 
2.70566 5.48026 3.79489 2.68277 6.29428 6.36304 0 ]xsh
211.008 161.285 mo
(coe\177cient between the MRS vectors for)
[5.06755 6.2943 5.74409 9.34409 5.13634 2.68277 5.74409 6.31718 3.79486 2.43066 6.52365 5.74411 
3.89804 8.32358 5.74411 5.74408 6.36304 2.43069 3.79486 6.36307 5.74408 2.43066 9.21796 6.16815 
5.65225 2.43066 5.40012 5.74408 5.2854 3.72607 6.29428 3.74905 4.54013 2.43066 3.19885 6.29428 
0 ]xsh
211.008 175.044 mo
(disease k and disease l.)
[6.46626 2.68275 4.54015 5.74409 5.52611 4.54015 5.74409 2.43066 5.37706 2.43066 5.52612 6.36304 
6.46628 2.43066 6.46625 2.68277 4.54013 5.74411 5.52612 4.5401 5.74411 2.43066 2.59103 0 
]xsh
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/GCLSXA+MyriadPro-Regular*1 uf
/GCLSXA+MyriadPro-Regular uf
/GFNBAA+MyriadPro-Regular uf
/GCLSWZ+Calibri*1 uf
/GCLSWZ+Calibri uf
/QJJAAA+Calibri uf
/GCLSWY+Arial-BoldMT*1 uf
/GCLSWY+Arial-BoldMT uf
/HIBBAA+Arial-BoldMT uf
/GCLSWX+CambriaMath*1 uf
/GCLSWX+CambriaMath uf
/PBAAAA+CambriaMath uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/restore_mysetup gx
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Utils begin
[/EMC pdfmark_5
currentdict Adobe_AGM_Utils eq {end} if
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
